
@using System.Drawing
@using DXPANACEASOFT.Models.DTOModel

@{
    var grid = Html.DevExpress().GridView<PriceListDTO>(settings =>
    {
        settings.Name = "GridViewPriceList";
        settings.CallbackRouteValues = new
        {
            Controller = "PriceListResponsive",
            Action = "GridViewPriceList",

            fechaInicio = ViewBag.fechaInicio,
            fechaFin = ViewBag.fechaFin,
            id_estado = ViewBag.id_estado,
            id_tipoLista = ViewBag.id_tipoLista,
            id_proveedor = ViewBag.id_proveedor,
            id_grupo = ViewBag.id_grupo,
            id_tipoListaCamaron = ViewBag.id_tipoListaCamaron,
            id_responsable = ViewBag.id_responsable,
        };

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;

        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Width = Unit.Percentage(100);

        settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
        settings.Styles.Header.Font.Bold = true;

        settings.ClientSideEvents.RowClick = "OnGridFocusedRowChanged";

        settings.Columns.Add(column =>
        {
            column.FieldName = "id";
            column.Name = "id";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "name";
            column.Name = "name";
            column.Caption = "Nombre";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

        });

        settings.Columns.Add(m => m.certification, column =>
        {
            column.FieldName = "certification";
            column.Name = "certification";
            column.Caption = "Certificado";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "id_state";
            column.Name = "id_state";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "isUsed";
            column.Name = "isUsed";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "canClose";
            column.Name = "canClose";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "canAnnul";
            column.Name = "canAnnul";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "canRefreshReplicate";
            column.Name = "canRefreshReplicate";
            column.Visible = false;
        });

        settings.Columns.Add(m => m.state, column =>
        {
            column.FieldName = "state";
            column.Name = "state";
            column.Caption = "Estado";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });

        settings.Columns.Add(m => m.basePriceList, column =>
        {
            column.FieldName = "basePriceList";
            column.Name = "basePriceList";
            column.Caption = "Lista Referencial";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

        });

        MVCxGridViewCommandColumn commandColumn = new MVCxGridViewCommandColumn
        {
            ShowEditButton = false,
            ShowDeleteButton = false,
            Visible = true,
            VisibleIndex = 4,
            Caption = "Acción",
            Width = Unit.Percentage(8)
        };

        commandColumn.CustomButtons.Add(
            new GridViewCommandColumnCustomButton
            {
                ID = "btnShowRow",
                Text = "Mostrar"
            }
            );

        settings.ClientSideEvents.CustomButtonClick = "GridViewPriceListShow_Click";
        settings.ClientSideEvents.RowDblClick = "GridViewPriceListShow_Click";
        settings.Columns.Add(commandColumn);

    });
}
@grid.Bind(Model).GetHtml()