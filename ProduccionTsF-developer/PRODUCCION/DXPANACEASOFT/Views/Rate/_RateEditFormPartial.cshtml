@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.Rate


    <table class="table table-condensed">
        <tr>
            <td style="width: 12%;">
                @Html.DevExpress().LabelFor(m => m.id_taxType, settings =>
                {
                    settings.Text = "Tipo de Impuesto:*";
                    settings.AssociatedControlName = "id_taxType";
                }).GetHtml()
            </td>
            <td colspan="2">
                @{
                    int? id_taxType = (Model != null && Model.id_taxType != 0) ? (int?) Model.id_taxType : null;
                }
                @Html.DevExpress().ComboBoxFor(m => m.id_taxType, settings =>
                {
                    settings.Properties.ClientInstanceName = "id_taxType";

                    settings.Properties.ValueField = "id";
                    settings.Properties.TextField = "name";
                    settings.Properties.ValueType = typeof(int);

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "Seleccione Tipo Impuesto";
                    settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnRatesTaxTypeValidation";
                }).BindList(DataProviderTaxType.TaxTypesByCompanyAndCurrent((int)ViewData["id_company"], id_taxType)).Bind(id_taxType).GetHtml()
            </td>
            <td colspan="3">
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().Label(settings =>
                {
                    settings.Text = "Nombre:*";
                    settings.AssociatedControlName = "rateName";
                }).GetHtml()
            </td>
            <td colspan="2">
                @Html.DevExpress().TextBoxFor(m => m.name, settings =>
                {
                    settings.Properties.ClientInstanceName = "rateName";

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "Nombre de la Tarifa";
                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnRatesNameValidation";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().LabelFor(m => m.code, settings =>
                {
                    settings.Text = "Código:*";
                    settings.AssociatedControlName = "code";
                }).GetHtml()
            </td>
            <td colspan="2">
                @Html.DevExpress().TextBoxFor(m => m.code, settings =>
                {
                    settings.Properties.ClientInstanceName = "code";

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "Ej: 01";
                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnRatesCodeValidation";
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.description, settings =>
                {
                    settings.Text = "Descripción:";
                    settings.AssociatedControlName = "description";
                }).GetHtml()
            </td>
            <td colspan="5">
                @Html.DevExpress().MemoFor(m => m.description, settings =>
                {
                    settings.Properties.ClientInstanceName = "description";

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "";
                    settings.ShowModelErrors = true;
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.percentage, settings =>
                {
                    settings.Text = "Porciento:*";
                    settings.AssociatedControlName = "percentage";
                }).GetHtml()
            </td>
            <td colspan="2">
                @Html.DevExpress().SpinEditFor(m => m.percentage, settings =>
                {
                    settings.Properties.ClientInstanceName = "percentage";

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "0";
                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnRatesPercentageValidation";

                }).GetHtml()
            </td>
            <td colspan="3"></td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.isActive, settings =>
                {
                    settings.Text = "¿Activo?:";
                    settings.AssociatedControlName = "isActive";
                }).GetHtml()
            </td>
            <td colspan="5">
                @Html.DevExpress().CheckBoxFor(m => m.isActive, settings =>
                {
                    settings.Properties.ClientInstanceName = "isActive";

                    settings.Width = Unit.Percentage(100);
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td colspan="6" style="text-align: right;">
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnUpdate";
                    settings.Text = "Actualizar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsSave16x16devav;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonUpdate_Click";
                }).GetHtml()
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnCancel";
                    settings.Text = "Cancelar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonCancel_Click";
                }).GetHtml()
            </td>
        </tr>
        <tr id="rateAlertRow" style="display: none;">
            <td colspan="6">
                <div class="alert alert-danger fade in" style="margin-top:18px;">
                    <button type="button" class="close" data-dismiss="alert" aria-label="close" title="close" style="top: 0px; right: 0px;"><span aria-hidden="true">&times;</span></button>
                    <span id="rateErrorMessage"></span>
                </div>
            </td>
        </tr>
    </table>


<script src="~/Scripts/rate/editform.js"></script>
