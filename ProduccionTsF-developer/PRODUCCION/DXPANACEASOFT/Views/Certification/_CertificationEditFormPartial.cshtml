@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.Certification


<table class="table table-condensed">

    <tr>
        <td style="width: 8%;">
            @Html.DevExpress().Label(settings =>
            {
                settings.Text = "Código:*";
                settings.AssociatedControlName = "code";
            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().TextBoxFor(m => m.code, settings =>
            {
                settings.Properties.ClientInstanceName = "code";

                settings.Width = Unit.Percentage(100);
                settings.Properties.NullText = "Código";
                settings.ShowModelErrors = true;
                settings.Properties.ClientSideEvents.Validation = "OnCertificationsCodeValidation";
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td style="width: 8%;">
            @Html.DevExpress().Label(settings =>
            {
                settings.Text = "Nombre:*";
                settings.AssociatedControlName = "certificationName";
            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().TextBoxFor(m => m.name, settings =>
            {
                settings.Properties.ClientInstanceName = "certificationName";

                settings.Width = Unit.Percentage(100);

                settings.Properties.NullText = "Nombre de la Certificación";
                settings.ShowModelErrors = true;
                settings.Properties.ClientSideEvents.Validation = "OnCertificationsNameValidation";
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td style="width: 8%;">
            @Html.DevExpress().Label(settings =>
            {
                settings.Text = "IdLote:*";
                settings.AssociatedControlName = "certificationIdLote";
            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().TextBoxFor(m => m.idLote, settings =>
            {
                settings.Properties.ClientInstanceName = "certificationIdLote";

                settings.Width = Unit.Percentage(100);

                settings.Properties.NullText = "Id. Lote de la Certificación";
                settings.ShowModelErrors = true;
                settings.Properties.ClientSideEvents.Validation = "OnCertificationsIdLoteValidation";
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td style="width: 8%;">
            @Html.DevExpress().Label(settings =>
            {
                settings.Text = "IdProducto:*";
                settings.AssociatedControlName = "certificationIdProducto";
            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().TextBoxFor(m => m.idProducto, settings =>
            {
                settings.Properties.ClientInstanceName = "certificationIdProducto";

                settings.Width = Unit.Percentage(100);

                settings.Properties.NullText = "Id. Producto de la Certificación";
                settings.ShowModelErrors = true;
                settings.Properties.ClientSideEvents.Validation = "OnCertificationsIdProductoValidation";
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().LabelFor(m => m.isActive, settings =>
            {
                settings.Text = "¿Activo?:";
                settings.AssociatedControlName = "isActive";
            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().CheckBoxFor(m => m.isActive, settings =>
            {
                settings.Properties.ClientInstanceName = "isActive";

                settings.Width = Unit.Percentage(100);
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td colspan="6" style="text-align: right;">
            @Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnUpdate";
                settings.Text = "Actualizar";
                settings.RenderMode = ButtonRenderMode.Button;
                settings.ImagePosition = ImagePosition.Left;
                settings.Images.Image.IconID = IconID.ActionsSave16x16devav;
                settings.UseSubmitBehavior = false;
                settings.ClientSideEvents.Click = "ButtonUpdate_Click";
            }).GetHtml()
            @Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnCancel";
                settings.Text = "Cancelar";
                settings.RenderMode = ButtonRenderMode.Button;
                settings.ImagePosition = ImagePosition.Left;
                settings.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                settings.UseSubmitBehavior = false;
                settings.ClientSideEvents.Click = "ButtonCancel_Click";
            }).GetHtml()
        </td>
    </tr>
    <tr id="certificationAlertRow" style="display: none;">
        <td colspan="6">
            <div class="alert alert-danger fade in" style="margin-top:18px;">
                <button type="button" class="close" data-dismiss="alert" aria-label="close" title="close" style="top: 0px; right: 0px;"><span aria-hidden="true">&times;</span></button>
                <span id="certificationErrorMessage"></span>
            </div>
        </td>
    </tr>
</table>

<script src="~/Scripts/certification/editform.js"></script>
