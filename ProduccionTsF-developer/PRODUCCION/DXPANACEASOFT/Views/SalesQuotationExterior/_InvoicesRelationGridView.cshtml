@using System.Drawing
@using DXPANACEASOFT.Models

@{
	var grid = Html.DevExpress().GridView<Document>(settings =>
	{
		settings.Name = "gvSalesQuotation";
		settings.CallbackRouteValues = new { Controller = "SalesQuotationExterior", Action = "InvoiceRelationList" };
		settings.Width = Unit.Percentage(100);

		settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.Page;

		settings.KeyFieldName = "id";

		settings.SettingsPager.Visible = true;
		settings.Settings.ShowFilterRow = true;
		settings.SettingsBehavior.AllowSelectByRowClick = true;
		settings.Settings.ShowFooter = true;
		settings.Settings.ShowFilterRowMenu = true;

		settings.Settings.ShowTitlePanel = true;
		settings.Styles.TitlePanel.CssClass = "titleContainer";

		settings.SetTitlePanelTemplateContent(c =>
		{
			ViewContext.Writer.Write(@"<span id=""lblTitle"">Listado de Facturas Relacionadas</span>");
		});

		settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
		settings.Styles.Header.Font.Bold = true;

		settings.Columns.Add(m => m.number, column =>
		{
			column.Name = "number";
			column.Caption = "Número";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
		});

		settings.Columns.Add(m => m.emissionDate, column =>
		{
			column.Caption = "Fecha de Emisión";
			column.ColumnType = MVCxGridViewColumnType.DateEdit;

			column.EditorProperties().DateEdit(editorDate =>
			{
				editorDate.DisplayFormatInEditMode = true;
				editorDate.DisplayFormatString = "dd/MM/yyyy";
				editorDate.EditFormat = EditFormat.Custom;
				editorDate.EditFormatString = "dd/MM/yyyy";
			});
		});

		settings.Columns.Add(m => m.DocumentType.name, column =>
		{
			column.Caption = "Tipo de Documento";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
		});

		settings.Columns.Add(column =>
		{
			column.Caption = "Valor Total";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.CellStyle.HorizontalAlign = HorizontalAlign.Right;

			column.SetDataItemTemplateContent(c =>
			{
				DocumentType documentType = (DocumentType)DataBinder.Eval(c.DataItem, "DocumentType");

				if ((documentType != null) && (documentType.code == "70"))
				{
					InvoiceCommercial aInvoice = (InvoiceCommercial)DataBinder.Eval(c.DataItem, "InvoiceCommercial");

					if (aInvoice != null)
					{
						ViewContext.Writer.Write(aInvoice.totalValue.ToString("N2"));
					}
				}

				if ((documentType != null) && (documentType.code == "07"))
				{
					Invoice aInvoice = (Invoice)DataBinder.Eval(c.DataItem, "Invoice");

					if (aInvoice != null)
					{
						aInvoice.calculateTotales();
						aInvoice.calculateTotalBoxes();
						aInvoice.calculateTotalesInvoiceExterior();
						ViewContext.Writer.Write(aInvoice.valuetotalProformaTruncate.ToString("N2"));
					}
				}
			});
		});

		settings.Columns.Add(m => m.DocumentState.name, column =>
		{
			column.Caption = "Estado";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
		});
	}
);

	if (ViewData["EditError"] != null)
	{
		grid.SetEditErrorText((string)ViewData["EditError"]);
	}

}@grid.Bind(Model).GetHtml()