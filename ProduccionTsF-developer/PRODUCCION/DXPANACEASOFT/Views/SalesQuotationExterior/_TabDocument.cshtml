@using DXPANACEASOFT.DataProviders

@model DXPANACEASOFT.Models.Document
@{
    string codeState = (Model != null && Model.DocumentState != null && Model.DocumentState.code != "") ? Model.DocumentState.code : "";
    string codeTypeDocument = (Model != null && Model.DocumentType != null && Model.DocumentType.code != "") ? Model.DocumentType.code : "";
    string number = (Model != null) ? Model.number : "";
}
<table id="tableTabDocument" class="table table-condensed" style="margin: 0px;">
    <tr>
        <td style="width: 10%;">
            <span>Tipo de Documento: </span>
        </td>
        <td>
            @Html.HiddenFor(m => m.id_documentType, new { @id = "id_documentType" })
            @Html.DevExpress().TextBoxFor(m => m.DocumentType.name, settings =>
            {
                settings.Name = "documentTypeName";
                settings.Width = Unit.Percentage(100);
                settings.ShowModelErrors = true;
                settings.ReadOnly = true;
            }).GetHtml()
        </td>
        <td style="width: 10%;">
            <span>No. Documento: </span>
        </td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.number, settings =>
            {
                settings.Name = "numberDoc";
                settings.Properties.ClientInstanceName = "numberDoc";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = true;
            }).GetHtml()
        </td>
        <td style="width: 10%;">
            <span>Estados: </span>
        </td>
        <td>
            <div class="row">
                <div class="col-lg-6">
                    @Html.HiddenFor(m => m.id_documentState, new { @id = "id_documentState" })
                    @Html.DevExpress().TextBoxFor(m => m.DocumentState.name, settings =>
                    {
                        settings.Name = "documentState";
                        settings.Properties.ClientInstanceName = "documentState";
                        settings.Width = Unit.Percentage(100);
                        settings.ReadOnly = true;
                    }).GetHtml()
                </div>
                <div class="col-lg-6">
                    @Html.HiddenFor(m => m.id_documentTransactionState, new { @id = "id_documentTransactionState" })
                    @Html.DevExpress().TextBoxFor(m => m.DocumentTransactionState.name, settings =>
                    {
                        settings.Name = "documentTransactionState";
                        settings.Properties.ClientInstanceName = "documentTransactionState";
                        settings.Width = Unit.Percentage(100);
                        settings.ReadOnly = true;
                    }).GetHtml()
                </div>
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <span>Fecha de Emisi&oacute;n: </span>
        </td>
        <td>
            @Html.DevExpress().DateEditFor(m => m.emissionDate, settings =>
            {
                settings.Name = "emissionDate";
                settings.Properties.ClientInstanceName = "emissionDate";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = codeState != "01";
                if (codeTypeDocument != "07")
                {
                    settings.Properties.ClientSideEvents.Validation = "OnEmissionDateValidation";
                }
            }).GetHtml()
        </td>
        <td>
            <span>Referencia: </span>
        </td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.reference, settings =>
            {
                settings.Name = "reference";
                settings.Properties.ClientInstanceName = "reference";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = codeState != "01";
            }).GetHtml()
        </td>
        <td>
            <span>Solicitante: </span>
        </td>
        <td>
            @Html.DevExpress().TextBox(settings =>
            {
                settings.Name = "solicitante";
                settings.Properties.ClientInstanceName = "solicitante";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = codeState != "01";
                settings.ReadOnly = true;
                settings.Text = ViewBag.Solicitante;
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            Descripci&oacute;n:
        </td>
        <td colspan="5">
            @Html.DevExpress().MemoFor(m => m.description, settings =>
            {
                settings.Name = "description";
                settings.Properties.ClientInstanceName = "description";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = codeState != "01";
            }).GetHtml()
        </td>
    </tr>
</table>