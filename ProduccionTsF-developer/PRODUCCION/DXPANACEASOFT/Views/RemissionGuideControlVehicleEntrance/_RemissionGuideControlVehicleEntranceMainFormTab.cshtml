@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.RemissionGuideControlVehicle
@using DXPANACEASOFT.Models

@{
	TempData.Keep("remissionGuideForControlVehicleEntrance");
	string codeState = (Model != null && Model.RemissionGuide != null && Model.RemissionGuide.Document != null && Model.RemissionGuide.Document.DocumentState != null && Model.RemissionGuide.Document.DocumentState.code != "") ? Model.RemissionGuide.Document.DocumentState.code : "";
	var entrancedpb = Model.entranceDateProductionBuilding;

	var entrancedpupb = Model.entranceDateProductionUnitProviderBuilding;
	var exitdpupb = Model.exitDateProductionUnitProviderBuilding;

	string labelPup = DataProviderSetting.ValueSetting("EUPPPRIM");
	string aSettingFECAMA = DataProviderSetting.ValueSetting("FECAMA");
}

@Html.Hidden("exitDateProductionBuildingT", Model.exitDateProductionBuilding)
@Html.Hidden("exitTimeProductionBuildingT", Model.exitTimeProductionBuilding)
@Html.Hidden("entrancedpb", entrancedpb)
@Html.Hidden("entrancedpupb", entrancedpupb)
@Html.Hidden("exitdpupb", exitdpupb)
<div id="detailRGCVEcont">
	<table id="RemissionGuideControlVehicleEntranceTable" class="table table-condenced" style="margin: 0px;">
		<tr style="border-bottom: 1px Solid #C0C0C0;">
			<td colspan="4">
				<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Información General</span>
			</td>
		</tr>
		<!--PROVEEDOR Y UNIDAD DE PRODUCCIÓN-->
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "providerAuxLabel";
				settings.Text = "Proveedor:";
				settings.AssociatedControlName = "providerAuxLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.providerNameAux, settings =>
			{
				settings.Name = "providerNameAux";
				settings.Properties.ClientInstanceName = "providerNameAux";
				settings.Width = Unit.Percentage(100);
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "productionUnitProviderAuxLabel";
				settings.Text = Model.productionUnitProviderAuxLab;
				settings.AssociatedControlName = "productionUnitProviderAuxLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.productionUnitProviderAux, settings =>
			{
				settings.Name = "productionUnitProviderAuxLab";
				settings.Properties.ClientInstanceName = "productionUnitProviderAuxLab";
				settings.Width = Unit.Percentage(100);
			}).GetHtml()
			</td>
		</tr>
		<!--PISCINA Y TOTAL LIBRAS-->
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "poolNameAuxLabel";
				settings.Text = "Piscina:";
				settings.AssociatedControlName = "poolNameAuxLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.poolNameAux, settings =>
			{
				settings.Name = "poolNameAux";
				settings.Properties.ClientInstanceName = "poolNameAux";
				settings.Width = Unit.Percentage(100);
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "totalPoundsAuxLabel";
				settings.Text = "Total Libras:";
				settings.AssociatedControlName = "totalPoundsAuxLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().SpinEditFor(m => m.totalPoundsAux, settings =>
			{
				settings.Name = "totalPoundsAux";
				settings.Properties.NumberType = SpinEditNumberType.Float;
				settings.Properties.DisplayFormatString = "N2";
			}).GetHtml()
			</td>
		</tr>
		<!--Zona y Sitio-->
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "zoneNameLabel";
				settings.Text = "Zona:";
				settings.AssociatedControlName = "zoneNameLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.zoneNameAux, settings =>
			{
				settings.Name = "zoneNameAux";
				settings.Properties.ClientInstanceName = "zoneNameAux";
				settings.Width = Unit.Percentage(100);
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "siteNameAuxLabel";
				settings.Text = "Sitio:";
				settings.AssociatedControlName = "siteNameAuxLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.siteNameAux, settings =>
			{
				settings.Name = "siteNameAux";
				settings.Properties.ClientInstanceName = "siteNameAux";
				settings.Width = Unit.Percentage(100);
			}).GetHtml()
			</td>
		</tr>
		<!--Dirección de Destino y Vía de Transporte-->
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "addressTargetAuxLabel";
				settings.Text = "Dirección Destino:";
				settings.AssociatedControlName = "addressTargetAuxLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.addressTargetAux, settings =>
			{
				settings.Name = "addressTargetAux";
				settings.Properties.ClientInstanceName = "addressTargetAux";
				settings.Width = Unit.Percentage(100);
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "shippingTypeAuxLabel";
				settings.Text = "Vía de Transporte:";
				settings.AssociatedControlName = "shippingTypeAuxLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.shippingTypeAux, settings =>
			{
				settings.Name = "shippingTypeAux";
				settings.Properties.ClientInstanceName = "shippingTypeAux";
				settings.Width = Unit.Percentage(100);
			}).GetHtml()
			</td>
		</tr>
		<!--Chofer-->
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
				{
					settings.Name = "driverNameAuxLabel";
					settings.Text = "Chofer:";
					settings.AssociatedControlName = "driverNameAuxLabel";
				}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.driverNameAux, settings =>
				{
					settings.Name = "driverNameAux";
					settings.Properties.ClientInstanceName = "driverNameAux";
					settings.Width = Unit.Percentage(100);
				}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().Label(settings =>
				{
					settings.Name = "id_personProcessPlantLabel";
					settings.Text = "Proceso:";
				}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.RemissionGuide.Person2.processPlant, settings =>
				{
					settings.Name = "id_personProcessPlant";
					settings.Properties.ClientInstanceName = "id_personProcessPlant";
					settings.Width = Unit.Percentage(100);
					settings.ReadOnly = true;
				}).GetHtml()
			</td>
		</tr>

		<tr style="border-bottom: 1px Solid #C0C0C0;">
			<td colspan="4">
				<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Llegada a Camaronera</span>
			</td>
		</tr>

		<tr>
			<td>
				@Html.DevExpress().LabelFor(m => m.entranceDateProductionUnitProviderBuilding, settings =>
			{
				settings.Name = "entranceDateProductionUnitProviderBuildingLabel";
				settings.Text = "Fecha:";
				settings.ControlStyle.Font.Bold = true;
				settings.AssociatedControlName = "entranceDateProductionUnitProviderBuildingLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().DateEditFor(m => m.entranceDateProductionUnitProviderBuilding, settings =>
		   {
			   settings.Name = "entranceDateProductionUnitProviderBuilding";
			   settings.Properties.ClientInstanceName = "entranceDateProductionUnitProviderBuilding";
			   settings.Properties.UseMaskBehavior = true;
			   settings.Properties.EditFormat = EditFormat.Custom;
			   settings.Properties.EditFormatString = "dd/MM/yyyy";
			   settings.Properties.DisplayFormatString = "dd/MM/yyyy";
			   settings.Width = Unit.Percentage(100);
			   settings.Properties.ClientSideEvents.Validation = "entranceDateProductionUnitProviderBuildingValidation";
			   settings.Properties.ClientSideEvents.ValueChanged = "entranceDateProductionUnitProviderBuildingValueChanged";
			   settings.Properties.ClientSideEvents.Init = "entranceDateProductionUnitProviderBuildingOnInit";
			   settings.ShowModelErrors = false;
			   settings.Properties.MinDate = new DateTime(2010, 1, 1);
			   settings.ReadOnly = (aSettingFECAMA == "SI") ? true : false;
		   }).GetHtml()
			</td>
			<td>
				@Html.DevExpress().LabelFor(m => m.entranceTimeProductionUnitProviderBuilding, settings =>
				{
					settings.Name = "entranceTimeProductionUnitProviderBuildingLabel";
					settings.Text = "Hora:";
					settings.ControlStyle.Font.Bold = true;
					settings.AssociatedControlName = "entranceTimeProductionUnitProviderBuildingLabel";
				}).GetHtml()
			</td>
			<td>
				@{
					TimeSpan? entranceTimeProductionUnitProviderBuilding = (Model != null) ? (TimeSpan?)Model.entranceTimeProductionUnitProviderBuilding : null;
				}

				@Html.DevExpress().TimeEdit(settings =>
		   {
			   settings.Name = "entranceTimeProductionUnitProviderBuilding";
			   settings.Properties.ClientInstanceName = "entranceTimeProductionUnitProviderBuilding";

			   settings.Properties.EditFormat = EditFormat.Time;
			   settings.Properties.EditFormatString = "HH:mm";
			   settings.Properties.DisplayFormatString = "HH:mm";
			   settings.Width = Unit.Percentage(100);
			   if (entranceTimeProductionUnitProviderBuilding != null)
			   {
				   settings.DateTime = new DateTime(2018, 1, 1, entranceTimeProductionUnitProviderBuilding.Value.Hours, entranceTimeProductionUnitProviderBuilding.Value.Minutes, 0);
			   }
			   settings.Properties.ClientSideEvents.Validation = "entranceTimeProductionUnitProviderBuildingValidation";
			   settings.Properties.ClientSideEvents.ValueChanged = "entranceTimeProductionUnitProviderBuildingValueChanged";
			   settings.ShowModelErrors = false;
			   settings.ReadOnly = (aSettingFECAMA == "SI") ? true : false;

		   }).GetHtml()
			</td>
		</tr>
		<tr style="border-bottom: 1px Solid #C0C0C0;">
			<td colspan="4">
				<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Salida de Camaronera</span>
			</td>
		</tr>
		<tr>
			<td>
				@Html.DevExpress().LabelFor(m => m.exitDateProductionUnitProviderBuilding, settings =>
			{
				settings.Name = "exitDateProductionUnitProviderBuildingLabel";
				settings.Text = "Fecha:";
				settings.ControlStyle.Font.Bold = true;
				settings.AssociatedControlName = "exitDateProductionUnitProviderBuildingLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().DateEditFor(m => m.exitDateProductionUnitProviderBuilding, settings =>
			{
				settings.Name = "exitDateProductionUnitProviderBuilding";
				settings.Properties.ClientInstanceName = "exitDateProductionUnitProviderBuilding";
				settings.Properties.UseMaskBehavior = true;
				settings.Properties.EditFormat = EditFormat.Custom;
				settings.Properties.EditFormatString = "dd/MM/yyyy";
				settings.Properties.DisplayFormatString = "dd/MM/yyyy";
				settings.Properties.ClientSideEvents.Validation = "exitDateProductionUnitProviderBuildingValidation";
				settings.Properties.ClientSideEvents.DateChanged = "exitDateProductionUnitProviderBuildingValueChanged";
				settings.Properties.ClientSideEvents.Init = "exitDateProductionUnitProviderBuildingOnInit";
				settings.Width = Unit.Percentage(100);
				settings.ShowModelErrors = false;
				settings.Properties.MinDate = new DateTime(2010,1,1);
				settings.ReadOnly = (aSettingFECAMA == "SI") ? true : false;
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().LabelFor(m => m.exitTimeProductionUnitProviderBuilding, settings =>
				{
					settings.Name = "exitTimeProductionUnitProviderBuildingLabel";
					settings.Text = "Hora:";
					settings.ControlStyle.Font.Bold = true;
					settings.AssociatedControlName = "exitTimeProductionUnitProviderBuildingLabel";
				}).GetHtml()
			</td>
			<td>
				@{
					TimeSpan? exitTimeProductionUnitProviderBuilding = (Model != null) ? (TimeSpan?)Model.exitTimeProductionUnitProviderBuilding : null;
				}

				@Html.DevExpress().TimeEdit(settings =>
		   {
			   settings.Name = "exitTimeProductionUnitProviderBuilding";
			   settings.Properties.ClientInstanceName = "exitTimeProductionUnitProviderBuilding";

			   settings.Properties.EditFormat = EditFormat.Time;
			   settings.Properties.EditFormatString = "HH:mm";
			   settings.Properties.DisplayFormatString = "HH:mm";
			   settings.Width = Unit.Percentage(100);
			   if (exitTimeProductionUnitProviderBuilding != null)
			   {
				   settings.DateTime = new DateTime(2018, 1, 1, exitTimeProductionUnitProviderBuilding.Value.Hours, exitTimeProductionUnitProviderBuilding.Value.Minutes, 0);
			   }
			   settings.ShowModelErrors = false;
			   settings.ReadOnly = (aSettingFECAMA == "SI") ? true : false;
			   settings.Properties.ClientSideEvents.Validation = "exitTimeProductionUnitProviderBuildingValidation";
			   settings.Properties.ClientSideEvents.ValueChanged = "exitTimeProductionUnitProviderBuildingValueChanged";
		   }).GetHtml()
			</td>
		</tr>
	
		<tr style="border-bottom: 1px Solid #C0C0C0;">
			<td colspan="4">
				<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Entrada a Planta</span>
			</td>
		</tr>
		<tr>
			<!-- CODIGO VA AQUI-->
			<td>
				@Html.DevExpress().LabelFor(m => m.entranceDateProductionBuilding, settings =>
			{
				settings.Name = "entranceDateProductionBuildingLabel";
				settings.Text = "Fecha:";
				settings.ControlStyle.Font.Bold = true;
				settings.AssociatedControlName = "entranceDateProductionBuildingLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().DateEditFor(m => m.entranceDateProductionBuilding, settings =>
		   {
			   settings.Name = "entranceDateProductionBuilding";
			   settings.Properties.ClientInstanceName = "entranceDateProductionBuilding";
			   settings.Properties.UseMaskBehavior = true;
			   settings.Properties.EditFormat = EditFormat.Custom;
			   settings.Properties.EditFormatString = "dd/MM/yyyy";
			   settings.Properties.DisplayFormatString = "dd/MM/yyyy";
			   settings.Width = Unit.Percentage(100);
			   settings.Properties.ClientSideEvents.Validation = (aSettingFECAMA == "SI") ? "entrancePlantaDateProductionBuildingValidation" : "entranceDateProductionBuildingValidation";
			   settings.Properties.ClientSideEvents.ValueChanged = "entranceDateProductionBuildingValueChanged";
			   settings.Properties.ClientSideEvents.Init = "entranceDateProductionBuildingOnInit";
			   settings.Properties.MinDate = new DateTime(2010, 1, 1);
			   settings.ShowModelErrors = false;
		   }).GetHtml()
			</td>
			<td>
				@Html.DevExpress().LabelFor(m => m.entranceTimeProductionBuilding, settings =>
				{
					settings.Name = "entranceTimeProductionBuildingLabel";
					settings.Text = "Hora:";
					settings.ControlStyle.Font.Bold = true;
					settings.AssociatedControlName = "entranceTimeProductionBuildingLabel";
				}).GetHtml()
			</td>
			<td>
				@{
					TimeSpan? entranceTimeProductionBuilding = (Model != null) ? (TimeSpan?)Model.entranceTimeProductionBuilding : null;
				}

				@Html.DevExpress().TimeEdit(settings =>
			{
				settings.Name = "entranceTimeProductionBuilding";
				settings.Properties.ClientInstanceName = "entranceTimeProductionBuilding";

				settings.Properties.EditFormat = EditFormat.Time;
				settings.Properties.EditFormatString = "HH:mm";
				settings.Properties.DisplayFormatString = "HH:mm";
				settings.Width = Unit.Percentage(100);
				if (entranceTimeProductionBuilding != null)
				{
					settings.DateTime = new DateTime(2018, 1, 1, entranceTimeProductionBuilding.Value.Hours, entranceTimeProductionBuilding.Value.Minutes, 0);
				}
				settings.ShowModelErrors = false;
				settings.Properties.ClientSideEvents.Validation = "entranceTimeProductionBuildingValidation";
				settings.Properties.ClientSideEvents.ValueChanged = "entranceTimeProductionBuildingValueChanged";

			}).GetHtml()
			</td>
		</tr>
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "poundsRemittedLabel";
				settings.Text = "Libras Remitidas:";
				settings.AssociatedControlName = "poundsRemittedLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().SpinEditFor(m => m.entrancePoundsRemitted, settings =>
			{
				settings.Name = "poundsRemitted";
				settings.Properties.ClientInstanceName = "poundsRemitted";
				settings.Properties.NumberType = SpinEditNumberType.Float;
				settings.Properties.DisplayFormatString = "N2";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "piscinasLabel";
				settings.Text = "Piscinas:";
				settings.AssociatedControlName = "piscinasLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.Piscinas, settings =>
			{
				settings.Name = "piscinas";
				settings.Properties.ClientInstanceName = "piscinas";
				settings.Width = Unit.Percentage(100);
			}).GetHtml()
			</td>
		</tr>
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "noGabetasLabel";
				settings.Text = "N° Gavetas:";
				settings.AssociatedControlName = "noGabetasLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().SpinEditFor(m => m.NoGabetas, settings =>
			{
				settings.Name = "noGabetas";
				settings.Properties.ClientInstanceName = "noGabetas";
				settings.Properties.NumberType = SpinEditNumberType.Float;
				//settings.Properties.DisplayFormatString = "N2";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "noBinesLabel";
				settings.Text = "N° Bines:";
				settings.AssociatedControlName = "noBinesLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().SpinEditFor(m => m.NoBines, settings =>
			{
				settings.Name = "noBines";
				settings.Properties.ClientInstanceName = "noBines";
				settings.Properties.NumberType = SpinEditNumberType.Float;
				//settings.Properties.DisplayFormatString = "N2";
			}).GetHtml()
			</td>
		</tr>
		<tr>
			<td>
				@Html.DevExpress().LabelFor(m => m.ObservationEntrance, settings =>
			{
				settings.Name = "ObservationEntranceLabel";
				settings.Text = "Observación:";
				settings.AssociatedControlName = "ObservationEntranceLabel";
			}).GetHtml()
			</td>
			<td colspan="5">
				@Html.DevExpress().TextBoxFor(m => m.ObservationEntrance, settings =>
			{
				settings.Name = "ObservationEntrance";
				settings.Properties.ClientInstanceName = "ObservationEntrance";
				settings.Width = Unit.Percentage(100);
				settings.ShowModelErrors = false;
			}).GetHtml()
			</td>
		</tr>

	</table>


</div>
