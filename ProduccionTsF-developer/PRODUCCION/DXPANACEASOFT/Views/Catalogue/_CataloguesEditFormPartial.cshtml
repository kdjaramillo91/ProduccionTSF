@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.tbsysCatalogueDetail


<table class="table table-condensed">
	<tr>
		<td style="width: 8%;">
			@Html.DevExpress().LabelFor(m => m.code, settings =>
		   {
			   settings.Text = "Código:*";
			   settings.AssociatedControlName = "code";

		   }).GetHtml()
		</td>
		<td colspan="2">
			@Html.DevExpress().TextBoxFor(m => m.code, settings =>
		   {
			   settings.Name = "code";
			   settings.Properties.ClientInstanceName = "code";
			   settings.Width = Unit.Percentage(100);
			   settings.Properties.NullText = "Código";
			   settings.ShowModelErrors = true;
			   settings.ClientVisible = true;
			   settings.Properties.ClientSideEvents.Validation = "OnCodeCatalogueValidation";

		   }).GetHtml()
		</td>
		<td style="width: 8%;">
			@Html.DevExpress().LabelFor(m => m.id_Catalogue, settings =>
			{
				settings.Text = "Tipo de Catálogo:*";
				settings.AssociatedControlName = "id_Catalogue";
			}).GetHtml()
		</td>
		<td colspan="2">
			@{
				int? id_catalogue = (Model != null && Model.id_Catalogue != 0) ? (int?)Model.id_Catalogue : null;
			}
			@Html.DevExpress().ComboBoxFor(m => m.id_Catalogue, settings =>
			{
				settings.Properties.ClientInstanceName = "id_catalogue";

				settings.Properties.ValueField = "id";
				settings.Properties.TextField = "name";
				settings.Properties.ValueType = typeof(int);

				settings.Width = Unit.Percentage(100);

				settings.Properties.NullText = "Seleccione Tipo de Catálogo";
				settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
				settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
				settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

				settings.ShowModelErrors = true;
				settings.Properties.ClientSideEvents.Validation = "OnCatalogueTypeValidation";
			}).BindList(DataProviderCatalogue.GetAllCatalogues()).Bind(id_catalogue).GetHtml()
		</td>
	</tr>
	<tr>
		<td>
			@Html.DevExpress().Label(settings =>
			{
				settings.Text = "Nombre:*";
				settings.AssociatedControlName = "catalogueName";
			}).GetHtml()
		</td>
		<td colspan="5">
			@Html.DevExpress().TextBoxFor(m => m.name, settings =>
			{
				settings.Properties.ClientInstanceName = "catalogueName";

				settings.Width = Unit.Percentage(100);

				settings.Properties.NullText = "Nombre del Catálogo";
				settings.ShowModelErrors = true;
				settings.Properties.ClientSideEvents.Validation = "OnCatalogueNameValidation";
			}).GetHtml()
		</td>
	</tr>
	<tr>
		<td>
			@Html.DevExpress().LabelFor(m => m.description, settings =>
			{
				settings.Text = "Descripción:";
				settings.AssociatedControlName = "description";
			}).GetHtml()
		</td>
		<td colspan="2">
			@Html.DevExpress().MemoFor(m => m.description, settings =>
			{
				settings.Properties.ClientInstanceName = "description";

				settings.Width = Unit.Percentage(100);

				settings.Properties.NullText = "";
				settings.ShowModelErrors = true;
			}).GetHtml()
		</td>
		<td>
			@Html.DevExpress().LabelFor(m => m.fldvarchar1, settings =>
			{
				settings.Text = "Descripción Inglés:";
				settings.AssociatedControlName = "descriptionEnglish";
			}).GetHtml()
		</td>
		<td colspan="2">
			@Html.DevExpress().MemoFor(m => m.fldvarchar1, settings =>
			{
				settings.Properties.ClientInstanceName = "descriptionEnglish";

				settings.Width = Unit.Percentage(100);

				settings.Properties.NullText = "";
				settings.ShowModelErrors = true;
			}).GetHtml()
		</td>
	</tr>
	<tr>
		<td>
			@*@Html.DevExpress().LabelFor(m => m.flddatetime1, settings =>
			{
				settings.Text = "Fecha Inicio:";
				settings.AssociatedControlName = "dateStart";
			}).GetHtml()*@
		</td>
		<td colspan="2">
			@Html.DevExpress().DateEditFor(m => m.flddatetime1, settings =>
			{
				settings.Name = "dateStart";
				settings.Properties.ClientInstanceName = "dateStart";
				settings.Width = Unit.Percentage(100);
				settings.Properties.UseMaskBehavior = true;
                settings.Properties.EditFormat = EditFormat.Custom;
                settings.Properties.EditFormatString = "dd/MM/yyyy";
                settings.Properties.DisplayFormatInEditMode = true;
                settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                settings.ShowModelErrors = false;
				settings.ClientVisible = false;

				settings.Properties.ClientSideEvents.Init = "OnInitDateDesde";
				settings.Properties.ClientSideEvents.Validation = "OnRangeEmissionDateValidation";
			}).GetHtml()
		</td>
		<td>
			@*@Html.DevExpress().LabelFor(m => m.flddatetime2, settings =>
			{
				settings.Text = "Fecha Fin:";
				settings.AssociatedControlName = "dateEnd";
			}).GetHtml()*@
		</td>
		<td colspan="2">
			@Html.DevExpress().DateEditFor(m => m.flddatetime2, settings =>
			{
				settings.Name = "dateEnd";
				settings.Properties.ClientInstanceName = "dateEnd";
				settings.Width = Unit.Percentage(100);
				settings.Properties.UseMaskBehavior = true;
                settings.Properties.EditFormat = EditFormat.Custom;
                settings.Properties.EditFormatString = "dd/MM/yyyy";
                settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                settings.ShowModelErrors = false;
				settings.ClientVisible = false;

				settings.Properties.ClientSideEvents.Init = "OnInitDateHasta";
				settings.Properties.ClientSideEvents.Validation = "OnRangeEmissionDateValidation";
			}).GetHtml()
		</td>
	</tr>
	<tr>
		<td>
			@Html.DevExpress().LabelFor(m => m.fldFullText, settings =>
			{
				settings.Text = "Observación:";
				settings.AssociatedControlName = "observation";
			}).GetHtml()
		</td>
		<td colspan="5">
			@Html.DevExpress().MemoFor(m => m.fldFullText, settings =>
			{
				settings.Properties.ClientInstanceName = "observation";
				settings.Height = Unit.Point(50);
				settings.Width = Unit.Percentage(100);				

				settings.Properties.NullText = "";
				settings.ShowModelErrors = true;
			}).GetHtml()
		</td>
	</tr>
	<tr>
		<td>
			@Html.DevExpress().LabelFor(m => m.isActive, settings =>
			{
				settings.Text = "¿Activo?:";
				settings.AssociatedControlName = "isActive";
			}).GetHtml()
		</td>
		<td colspan="5">
			@Html.DevExpress().CheckBoxFor(m => m.isActive, settings =>
			{
				settings.Properties.ClientInstanceName = "isActive";

				settings.Width = Unit.Percentage(100);
			}).GetHtml()
		</td>
	</tr>
	<tr>
		<td colspan="6" style="text-align: right;">
			@Html.DevExpress().Button(settings =>
			{
				settings.Name = "btnUpdate";
				settings.Text = "Actualizar";
				settings.RenderMode = ButtonRenderMode.Button;
				settings.ImagePosition = ImagePosition.Left;
				settings.Images.Image.IconID = IconID.ActionsSave16x16devav;
				settings.UseSubmitBehavior = false;
				settings.ClientSideEvents.Click = "ButtonUpdate_Click";
			}).GetHtml()
			@Html.DevExpress().Button(settings =>
			{
				settings.Name = "btnCancel";
				settings.Text = "Cancelar";
				settings.RenderMode = ButtonRenderMode.Button;
				settings.ImagePosition = ImagePosition.Left;
				settings.Images.Image.IconID = IconID.ActionsClose16x16office2013;
				settings.UseSubmitBehavior = false;
				settings.ClientSideEvents.Click = "ButtonCancel_Click";
			}).GetHtml()
		</td>
	</tr>
	<tr id="catalogueAlertRow" style="display: none;">
		<td colspan="6">
			<div class="alert alert-danger fade in" style="margin-top: 18px;">
				<button type="button" class="close" data-dismiss="alert" aria-label="close" title="close" style="top: 0px; right: 0px;"><span aria-hidden="true">&times;</span></button>
				<span id="catalogueErrorMessage"></span>
			</div>
		</td>
	</tr>
</table>

<script src="~/Scripts/catalogue/editform.js"></script>
