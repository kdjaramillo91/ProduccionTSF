@using System.Web.Mvc.Html
@using DevExpress.XtraReports.Data
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@model List<DXPANACEASOFT.Models.FrameworkContractDeliveryPlan>
@{
    //var metricUnitUMTPAux = DataProviderSetting.ValueSetting("UMTP");
    //var id_metricUnitUMTPValueAux = int.Parse(metricUnitUMTPAux != null ? metricUnitUMTPAux : "0");
    //var metricUnitUMTP = DataProviderMetricUnit.MetricUnitById(id_metricUnitUMTPValueAux);
    var code_documentState = (string)ViewData["code_documentState"];
}
@{
    var grid = Html.DevExpress().GridView<FrameworkContractDeliveryPlan>(settings => {
        settings.Name = "PersonFrameworkContractDeliveryPlans";
        settings.CallbackRouteValues = new { Controller = "Person", Action = "PersonFrameworkContractDeliveryPlan" };

        settings.ClientSideEvents.BeginCallback = "FrameworkContractDeliveryPlan_OnBeginCallback";

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Person", Action = "FrameworkContractDeliveryPlanAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Person", Action = "FrameworkContractDeliveryPlanUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Person", Action = "FrameworkContractDeliveryPlanDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = false;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = (code_documentState != "03" && code_documentState != "05");
        settings.CommandColumn.ShowEditButton = (code_documentState != "03" && code_documentState != "05");
        settings.CommandColumn.ShowNewButtonInHeader = (code_documentState != "03" && code_documentState != "05");

        settings.Width = Unit.Percentage(100);

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        //settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
        //settings.SettingsDetail.ShowDetailRow = true;
        //settings.SetDetailRowTemplateContent(c =>
        //{
        //    //int id_item = (int)DataBinder.Eval(c.DataItem, "id");
        //    FrameworkContractItem detail = (FrameworkContractItem)Model[c.ItemIndex];

        //    //Item detail = DataProviderItem.Item(id_item);
        //    if (detail != null && detail.FrameworkContractDeliveryPlan != null)
        //    {
        //        //Html.RenderAction("_BusinessOportunityPhasesDetailPartial", new { item = detail });
        //        Html.RenderPartial("_FrameworkContractDeliveryPlanDetailViewPartial", detail);
        //    }

        //    if (detail != null && detail.FrameworkContractExtension != null)
        //    {
        //        //Html.RenderAction("_BusinessOportunityPhasesDetailPartial", new { item = detail });
        //        Html.RenderPartial("_FrameworkContractExtensionDetailViewPartial", detail.FrameworkContractExtension.FirstOrDefault());
        //    }
        //});
        settings.Styles.Header.Font.Bold = true;

        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView gv = s as MVCxGridView;
            if (gv == null)
            {
                e.Properties["cpEditingRowID"] = 0;
                e.Properties["cpRowsCount"] = 0;
            }
            else
            {
                e.Properties["cpEditingRowID"] = (gv.IsEditing && gv.GetRowValues(gv.EditingRowVisibleIndex, "id") != null) ? gv.GetRowValues(gv.EditingRowVisibleIndex, "id") : (0);

                List<FrameworkContractDeliveryPlan> rows = (Model as List<FrameworkContractDeliveryPlan>);
                rows = (rows != null) ? rows.ToList() : new List<FrameworkContractDeliveryPlan>();

                e.Properties["cpRowsCount"] = rows.Count;
            }

        };

        settings.CommandColumn.Width = Unit.Percentage(8);

        //deliveryPlanDate
        settings.Columns.Add(column =>
        {
            column.FieldName = "deliveryPlanDate";
            column.Name = "deliveryPlanDate";
            column.Width = Unit.Percentage(10);
            column.Caption = "Fecha de Entrega";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;

            column.SetDataItemTemplateContent(c =>
            {
                DateTime? deliveryPlanDate = (DateTime?)DataBinder.Eval(c.DataItem, "deliveryPlanDate");

                ViewContext.Writer.Write(deliveryPlanDate == null ? "" : deliveryPlanDate.Value.ToString("dd/MM/yyyy"));
            });

            column.EditorProperties().DateEdit(p =>
            {
                p.ClientInstanceName = "deliveryPlanDate";
                p.Width = Unit.Percentage(100);
                p.DisplayFormatInEditMode = true;
                p.DisplayFormatString = "dd/MM/yyyy";

                p.EditFormat = EditFormat.Custom;
                p.EditFormatString = "dd/MM/yyyy";
                //p.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;

                //settings.ReadOnly = codeState != "01";//Pendiente
                //settings.ShowModelErrors = true;
                p.ClientSideEvents.Validation = "OnDeliveryPlanDateValidation";

            });

        });

        //amoutFrameworkContractDeliveryPlan
        settings.Columns.Add(column =>
        {
            column.FieldName = "amout";
            column.Name = "amoutFrameworkContractDeliveryPlan";
            column.Caption = "Cantidad";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.Width = Unit.Percentage(7);

            column.SetDataItemTemplateContent(c =>
            {
                decimal? amout = (decimal?)DataBinder.Eval(c.DataItem, "amout");
                ViewContext.Writer.Write(amout == null ? "" : amout.Value.ToString("N2"));
            });

            column.EditorProperties().SpinEdit(p =>
            {
                p.ClientInstanceName = "amoutFrameworkContractDeliveryPlan";
                p.Width = Unit.Percentage(100);

                p.DecimalPlaces = 2;
                p.DisplayFormatInEditMode = true;
                p.DisplayFormatString = "N2";

                p.SpinButtons.Visible = false;

                p.ClientSideEvents.Validation = "OnAmoutFrameworkContractDeliveryPlanValidation";

            });

        });


        //#region EditorLayout

        //settings.SetEditFormTemplateContent(c =>
        //{
        //    FrameworkContractItem detail = new FrameworkContractItem();
        //    if (c.ItemIndex >= 0)
        //    {
        //        detail = Model[c.ItemIndex];
        //    }
        //    //detail = (detail == null) ? new BusinessOportunityPhase() : detail;
        //    ////Item detail = DataProviderItem.Item(id_item);
        //    ////if (detail != null)
        //    ////{
        //    ////Html.RenderAction("_BusinessOportunityPhasesEditPartial", new { item = detail });
        //    ////}
        //    Html.RenderPartial("_FrameworkContractItemsEditPartial", detail);

        //    //int? id_businessOportunityPhase = (int?)DataBinder.Eval(c.DataItem, "id");
        //    //BusinessOportunityPhase businessOportunityPhase = (id_businessOportunityPhase != null) ? DataProviderBusinessOportunity.BusinessOportunityPhase(id_businessOportunityPhase) : new BusinessOportunityPhase();
        //    //Html.RenderPartial("_BusinessOportunityPhasesEditPartial", businessOportunityPhase);

        //    //int? id_item = (int?)DataBinder.Eval(content.DataItem, "id");
        //    //Item item = (id_item != null) ? DataProviderItem.Item((int)id_item) : new Item { isActive = true };
        //    //Html.RenderPartial("_ItemFormEdit", item);
        //});

        //#endregion


    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()