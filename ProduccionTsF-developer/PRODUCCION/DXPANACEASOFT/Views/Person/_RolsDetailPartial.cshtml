
@using System.Drawing
@using DevExpress.CodeParser
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@{

    int? id_personAux = (int?)ViewBag.id_person;
}

    @{
        var grid = Html.DevExpress().GridView<Rol>(settings =>
        {
            settings.Name = "gvPersonRols";
            settings.CallbackRouteValues = new { Controller = "Person", Action = "PersonRolsPartial" };

            //settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ProductionLotReception", Action = "ProductionLotReceptionsAddNew" };
            //settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ProductionLotReception", Action = "ProductionLotReceptionsUpdate" };
            //settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ProductionLotReception", Action = "ProductionLotReceptionsDelete" };



            settings.Width = Unit.Percentage(100);

            settings.KeyFieldName = "id";

            settings.SettingsPager.Visible = true;
            settings.Settings.ShowGroupPanel = false;
            settings.Settings.ShowFilterRow = false;
            settings.SettingsBehavior.AllowSelectByRowClick = false;

            //Panel de Busqueda
            //settings.SettingsSearchPanel.Visible = true;
            //settings.Styles.SearchPanel.CssClass = "searchPanel";

            //Checkbox de registros de tabla
            //settings.CommandColumn.ShowSelectCheckbox = true;
            //settings.CommandColumn.Width = Unit.Percentage(3);
            //settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.Page;

            //Eventos
            //settings.ClientSideEvents.Init = "OnGridViewInit";
            //settings.ClientSideEvents.SelectionChanged = "OnGridViewSelectionChanged";
            settings.ClientSideEvents.BeginCallback = "OnGridViewPersonRolsBeginCallback";
            //settings.Settings.ShowTitlePanel = true;
            //settings.Styles.TitlePanel.CssClass = "titleContainer";

            //Pie de tabla
            //settings.Settings.ShowFooter = true;

            //Panel para cantidad de registros
            settings.CustomJSProperties = (s, e) =>
            {
                MVCxGridView gv = s as MVCxGridView;
                if (gv == null) return;

                e.Properties["cpVisibleRowCount"] = gv.VisibleRowCount;
                e.Properties["cpFilteredRowCountWithoutPage"] = GetFilteredRowCountWithoutPage(gv);
            };

            //settings.SetTitlePanelTemplateContent(c =>
            //{
            //    ViewContext.Writer.Write(@"<span id=""lblTitle"">Listado de Recepciones de Materia Prima</span>");
            //});

            //settings.SetFooterRowTemplateContent(c =>
            //{
            //    ViewContext.Writer.Write(@"<span id=""lblInfo""></span>");
            //    if (settings.CommandColumn.SelectAllCheckboxMode != GridViewSelectAllCheckBoxMode.AllPages)
            //    {
            //        ViewContext.Writer.Write(
            //            @"<a id=""lnkSelectAllRows"" style=""cursor: pointer;"" onclick=""gvResultsSelectAllRows()"">Seleccionar Todos</a>
            //              <a id=""lnkClearSelection"" style=""cursor: pointer;"" onclick=""gvResultsClearSelection()"">Anular Selección</a>"
            //        );
            //    }
            //});

            //Boton de filtro para las columnas de la tabla
            //settings.Settings.ShowFilterRowMenu = true;

            settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
            settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
            settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
            settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
            settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

            //settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
            settings.Styles.Header.Font.Bold = true;

            #region ColumnsAdd

            //Rol
            settings.Columns.Add(m => m.name, column =>
            {
                column.Name = "name";
                column.Caption = "Roles";
                column.ColumnType = MVCxGridViewColumnType.TextBox;
                column.Width = Unit.Percentage(95);
                //column.SortDescending();
            });

            //Botones de comandos para registros de la tabla
            MVCxGridViewCommandColumn commandColumn = new MVCxGridViewCommandColumn();
            commandColumn.ShowEditButton = false;
            commandColumn.ShowDeleteButton = false;
            commandColumn.Visible = true;//(id_personAux != 0) && (id_personAux != null);
            commandColumn.VisibleIndex = 2;
            commandColumn.Caption = "Acción";
            commandColumn.Width = Unit.Percentage(5);
            commandColumn.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            commandColumn.AllowDragDrop = DefaultBoolean.False;
            if((id_personAux != 0) && (id_personAux != null))
            {
                commandColumn.CustomButtons.Add(
                new GridViewCommandColumnCustomButton
                {
                    ID = "btnUpdatePersonRol",
                    Text = "Editar"
                }
            );
            }
            
            settings.ClientSideEvents.CustomButtonClick = "OnClickUpdatePersonRol";
            settings.Columns.Add(commandColumn);

            //settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
            //settings.SettingsDetail.ShowDetailRow = true;

            //settings.SetDetailRowTemplateContent(c =>
            //{
            //    int? id = (int?)DataBinder.Eval(c.DataItem, "id");
            //    ProductionLot productionLot = DataProviderProductionLot.ProductionLotById(id);
            //    Html.RenderPartial("_ProductionLotReceptionDetailPartial", productionLot);
            //});

            #endregion
        });

        if (ViewData["EditError"] != null)
        {
            grid.SetEditErrorText((string)ViewData["EditError"]);
        }
    }
    @grid.Bind(Model).GetHtml()

    @functions {
        int GetFilteredRowCountWithoutPage(MVCxGridView grid)
        {
            int selectedRowsOnPage = 0;
            foreach (var key in grid.GetCurrentPageRowValues("id"))
            {
                if (grid.Selection.IsRowSelectedByKey(key))
                    selectedRowsOnPage++;
            }
            return grid.Selection.FilteredCount - selectedRowsOnPage;
        }
        String GetUserName(int id)
        {
            var user = DataProviderUser.UserById(id);
            return user.username;
        }
    }



