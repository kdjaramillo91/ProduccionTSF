@using DXPANACEASOFT.DataProviders

@model DXPANACEASOFT.Models.Document
@{
	string codeState = (Model != null && Model.DocumentState != null && Model.DocumentState.code != "") ? Model.DocumentState.code : "";
	string codeTypeDocument = (Model != null && Model.DocumentType != null && Model.DocumentType.code != "") ? Model.DocumentType.code : "";
	string number = (Model != null) ? Model.number : "";
	var _esReasignacion = (ViewBag.IsReasignacion == null) ? false : ViewBag.IsReasignacion;
}
<table id="tableTabDocument" class="table table-condensed" style="margin: 0px;">
	<tr>
		<td style="width: 10%;">
			@Html.DevExpress().LabelFor(m => m.DocumentType.name, settings =>
			{
				settings.Name = "documentTypeLabel";
				settings.Text = "Tipo de Documento:";
				settings.AssociatedControlName = "documentType";
			}).GetHtml()
		</td>
		<td>
			@Html.HiddenFor(m => m.id_documentType, new { @id = "id_documentType" })
			@Html.DevExpress().TextBoxFor(m => m.DocumentType.name, settings =>
			{
				settings.Name = "documentTypeName";
				settings.Width = Unit.Percentage(100);
				settings.ShowModelErrors = true;
				settings.ReadOnly = true;
			}).GetHtml()
		</td>
		<td style="width: 10%;">
			@Html.DevExpress().LabelFor(m => m.number, settings =>
			{
				settings.Name = "numberLabel";
				settings.Text = "No. Documento:";
				settings.AssociatedControlName = "number";

			}).GetHtml()
		</td>
		@if(_esReasignacion == false)
			{
				<td>
					@Html.DevExpress().TextBoxFor(m => m.number, settings =>
					{
						settings.Name = "numberDoc";
						settings.Properties.ClientInstanceName = "numberDoc";
						settings.Width = Unit.Percentage(100);
						settings.ReadOnly = true;
						//settings.Text = number;
					}).GetHtml()
				</td>
			}
			else
			{

				<td>
					@{
						int? id_document = (Model != null && Model.id != 0) ? (int?)Model.id : null;
					}
					@Html.DevExpress().ComboBoxFor(m => m.number, settings =>
			   {
				   settings.Name = "number";
				   settings.Properties.ClientInstanceName = "number";
				   settings.Width = Unit.Percentage(100);
				   //settings.ClientEnabled = ((Model.ProductionProcess != null ? Model.ProductionProcess.code : "") != "REC");// ? true : false);
				   settings.Properties.ValueField = "id";
				   //settings.Properties.TextField = "name";
				   settings.Properties.TextFormatString = "{0}";
				   settings.Properties.ValueType = typeof(int);
				   settings.Properties.Width = Unit.Percentage(100);
				   settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
				   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
				   settings.Properties.EnableSynchronization = DefaultBoolean.False;
				   settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
				   settings.Properties.Columns.Add("number", "No. Documento", 120);
				   settings.Properties.Columns.Add("emissionDate", "Fecha de Emisión", 150);
				   settings.Properties.Columns.Add("accessKey", "Clave de Acceso", 400);
				   settings.ReadOnly = @Model.DocumentState.code != "01";
				   settings.ShowModelErrors = true;

				   settings.Properties.ClientSideEvents.Validation = "OnNumberValidation";
				   if (_esReasignacion == true)
				   {
					   settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnDocumentResaignacionSelectedIndexChanged";

				   }


			   }).BindList(DataProviderDocument.DocumentsByCompanyAndReasignacion((int)ViewData["id_company"], (int?)Model.id)).Bind(id_document).GetHtml()
		</td>
		}
		<td style="width: 10%;">
			@Html.DevExpress().LabelFor(m => m.DocumentState.name, settings =>
			{
				settings.Name = "documentStateLabel";
				settings.Text = "Estado:";
				settings.AssociatedControlName = "documentState";
			}).GetHtml()
		</td>
		<td>
			@Html.HiddenFor(m => m.id_documentState, new { @id = "id_documentState" })
			@Html.DevExpress().TextBoxFor(m => m.DocumentState.name, settings =>
			{
				settings.Name = "documentState";
				settings.Properties.ClientInstanceName = "documentState";
				settings.Width = Unit.Percentage(100);
				settings.ReadOnly = true;
			}).GetHtml()
		</td>
		<td style="width: 10%;">
			@Html.DevExpress().LabelFor(m => m.Invoice.InvoiceExterior.dismissalreason, settings =>
			{
				settings.Name = "documentMotiveLabel";
				settings.Text = "Motivo:";
				settings.AssociatedControlName = "documentMotive";
			}).GetHtml()
		</td>
		<td>
			@Html.DevExpress().TextBoxFor(m => m.Invoice.InvoiceExterior.dismissalreason, settings =>
			{
				settings.Name = "documentMotive";
				settings.Properties.ClientInstanceName = "documentMotive";
				settings.Width = Unit.Percentage(100);
				settings.ReadOnly = true;
			}).GetHtml()
		</td>
	</tr>
    <tr>
        <td>
            @Html.DevExpress().LabelFor(m => m.emissionDate, settings =>
            {
                settings.Name = "emissionDateLabel";
                settings.Text = "Fecha de Emisión:";
                settings.AssociatedControlName = "emissionDate";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().DateEditFor(m => m.emissionDate, settings =>
            {
               settings.Name = "emissionDate";
               settings.Properties.ClientInstanceName = "emissionDate";
               settings.Width = Unit.Percentage(100);
               settings.ReadOnly =   ( codeState  != "01"  && codeState != "02" );
                
               settings.Properties.MinDate = (Model.id_documentOrigen != null && Model.Document2 != null) 
                   ? Model.Document2.emissionDate.AddDays(-1) : DateTime.MinValue;
                
               if (codeTypeDocument != "07")
               {
                   settings.Properties.ClientSideEvents.Validation = "OnEmissionDateValidation";
               }
               //settings.Properties.ClientSideEvents.Validation = "OnEmissionDateValidation";
               //settings.Properties.DropDownButton.Visible = false;
           }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().LabelFor(m => m.accessKey, settings =>
            {
                settings.Name = "accessKeyLabel";
                settings.Text = "Clave de Acceso:";
                settings.AssociatedControlName = "accessKey";
            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().TextBoxFor(m => m.accessKey, settings =>
            {
                settings.Name = "accessKey";
                settings.Properties.ClientInstanceName = "accessKey";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = true;
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().LabelFor(m => m.authorizationDate, settings =>
            {
                settings.Name = "authorizationDateLabel";
                settings.Text = "Fecha Autorización:";
                settings.AssociatedControlName = "authorizationDate";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.authorizationDate, settings =>
            {
                settings.Name = "authorizationDate";
                settings.Properties.ClientInstanceName = "autorizationDate";
                settings.Width = Unit.Percentage(100);
                settings.ShowModelErrors = false;
                settings.ReadOnly = true;
                //settings.Properties.DropDownButton.Visible = false;
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().LabelFor(m => m.authorizationNumber, settings =>
            {
                settings.Name = "authorizationNumberLabel";
                settings.Text = "No. Autorización:";
                settings.AssociatedControlName = "authorizationNumber";
            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().TextBoxFor(m => m.authorizationNumber, settings =>
            {
                settings.Name = "authorizationNumber";
                settings.Properties.ClientInstanceName = "autorizationNumber";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = true;
                       
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().LabelFor(m => m.description, settings =>
            {
                settings.Name = "descriptionLabel";
                settings.Text = "Descripción:";
                settings.AssociatedControlName = "description";
            }).GetHtml()
        </td>
        <td colspan="7">
            @Html.DevExpress().MemoFor(m => m.description, settings =>
            {
                settings.Name = "description";
                settings.Properties.ClientInstanceName = "description";
                settings.ReadOnly = codeState != "01";
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
        </td>
    </tr>
</table>