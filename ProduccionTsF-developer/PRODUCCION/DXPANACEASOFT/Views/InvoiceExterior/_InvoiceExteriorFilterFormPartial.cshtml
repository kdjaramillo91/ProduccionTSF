@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.Invoice
@{ 
	var paramModificarProforma = DataProviderSetting.ValueSetting("MODINFP") == "SI";
}

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "InvoiceExteriorFilterForm", name = "InvoiceExteriorFilterForm" }))
{
    <table class="table table-condensed ps-tbNoBorder">
        <tr>
            <td class="ps-20">
                <table xd="cliente" class="table table-condensed">
                    <tr class="ps-header">
                        <td colspan="2"><span class="dxflGroupBoxCaption_Metropolis">Cliente</span></td>
                    </tr>
                    <tr>
                        <td class="dxeBase_Metropolis">Nombres:</td>
                        <td>
                            @Html.DevExpress().TextBoxFor(p => p.Person.fullname_businessName, setting =>
					   {
						   setting.Name = "fullname_businessName";
						   setting.Properties.ClientInstanceName = "fullname_businessName";
						   setting.Width = Unit.Percentage(100);
						   setting.Properties.NullDisplayText = "Todos";
						   setting.Properties.NullText = "Todos";
						   setting.Properties.ValidationSettings.ErrorText = "Ingrese un Nombre válido";
						   setting.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"((?:[a-z][a-z]+))";
						   // TODO
						   // busqueda en linea de los posibles valores
					   }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td class="dxeBase_Metropolis">Identificación:</td>
                        <td>
                            @Html.DevExpress().TextBoxFor(p => p.Person.identification_number, setting =>
					   {
						   setting.Name = "identity";
						   setting.Properties.ClientInstanceName = "identity";
						   setting.Width = Unit.Percentage(100);
						   setting.Properties.NullDisplayText = "Todos";
						   setting.Properties.NullText = "Todos";
					   }).GetHtml()

                        </td>
                    </tr>
                </table>
            </td>
            <td class="ps-30">
				<table xd="Documento" class="table table-condensed">
					<tr class="ps-header">
						<td colspan="3"><span class="dxflGroupBoxCaption_Metropolis">Documento</span></td>
					</tr>
					<tr>
						<td class="dxeBase_Metropolis">Estado:</td>
						<td>
							@{

								var id_documentType = Model.Document.DocumentType == null ? (int?)null : Model.Document.DocumentType.id;
							}

							@Html.DevExpress().ComboBoxFor(p => p.Document.id_documentState, settings =>
					   {
						   settings.Name = "id_documentState";
						   settings.Properties.ClientInstanceName = "id_documentState";
						   settings.Width = Unit.Percentage(100);
						   settings.Properties.ValueField = "id";
						   settings.Properties.TextField = "name";
						   settings.Properties.ValueType = typeof(int);

						   settings.Properties.NullDisplayText = "Todos";
						   settings.Properties.NullText = "Todos";

						   //settings.Properties.Width = Unit.Percentage(100);
						   settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
						   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
						   settings.Properties.EnableSynchronization = DefaultBoolean.False;
						   settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

					   }).BindList(DataProviderDocumentState.DocumentStatesByDocumentType(id_documentType, (int?)ViewData["id_company"])).GetHtml()

						</td>
						<td></td>
					</tr>
					<tr>
						<td class="dxeBase_Metropolis">Fecha de Emisión:</td>
						<td>
							@Html.DevExpress().DateEditFor(p => p.Document.emissionDate, settings =>
								{

									settings.Name = "fechaEmisionDesde";
									settings.Properties.ClientInstanceName = "fechaEmisionDesde";
									settings.Properties.NullText = "dd/MM/yyyy";
									settings.Properties.EditFormat = EditFormat.Custom;
									settings.Properties.EditFormatString = "dd/MM/yyyy";
								 //   settings.PopupCalendarOwnerName = "fechaEmisionDesde";
									settings.Width = Unit.Percentage(100);
									settings.Properties.NullText = "Desde";
									settings.Properties.UseMaskBehavior = true;
									settings.Properties.ClientSideEvents.Validation = "OnRangeEmissionDateValidation";
								}
							).GetHtml()

						</td>
						<td>
							@Html.DevExpress().DateEditFor(p => p.Document.emissionDate, settings =>
					   {

						   settings.Name = "fechaEmisionHasta";
						   settings.Properties.ClientInstanceName = "fechaEmisionHasta";
						   settings.Properties.NullText = "dd/MM/yyyy";
						   settings.Properties.EditFormat = EditFormat.Custom;
						   settings.Properties.EditFormatString = "dd/MM/yyyy";
						   //settings.PopupCalendarOwnerName = "fechaEmisionHasta";
						   settings.Width = Unit.Percentage(100);
						   settings.Properties.NullText = "Hasta";
						   settings.Properties.UseMaskBehavior = true;
						   settings.Properties.ClientSideEvents.Validation = "OnRangeEmissionDateValidation";
					   }
								).GetHtml()

						</td>
					</tr>
					<tr>
						<td class="dxeBase_Metropolis">Número Factura:</td>
						<td>
							@Html.DevExpress().TextBoxFor(p => p.Document.number, setting =>
							{
								setting.Name = "number";
								setting.Properties.ClientInstanceName = "number";
								setting.Width = Unit.Percentage(100);
								setting.Properties.NullDisplayText = "Todos";
								setting.Properties.NullText = "Todos";
							}).GetHtml()
						</td>
						<td></td>
					</tr>
					<tr>
						<td class="dxeBase_Metropolis">Motivo:</td>
				
	
						<td>
							@Html.DevExpress().ComboBoxFor(p => p.InvoiceExterior.dismissalreason, settings =>
					   {
						   settings.Name = "motive";
						   settings.Properties.ClientInstanceName = "motive";
						   settings.Width = Unit.Percentage(100);
						   settings.Properties.ValueField = "Text";
						   settings.Properties.TextField = "Text";

						   settings.Properties.NullDisplayText = "Todos";
						   settings.Properties.NullText = "Todos";
						   settings.Properties.CallbackPageSize = 15;

						   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;

					   }).BindList(DataProviderInvoiceExterior.InvoiceExteriorMotive()).GetHtml()
						</td>
						<td></td>
					</tr>
				</table>

            </td>
            <td class="ps-30">
                <table xd="Embarque" class="table table-condensed">
                    <tr class="ps-header">
                        <td colspan="3"><span class="dxflGroupBoxCaption_Metropolis">Embarque</span></td>
                    </tr>
                    <tr>
                        <td class="dxeBase_Metropolis">Fecha de Embarque:</td>
                        <td>
                            @Html.DevExpress().DateEditFor(p => p.InvoiceExterior.dateShipment, settings =>
                       {

                           settings.Name = "fechaEmbarqueDesde";
                           settings.Properties.ClientInstanceName = "fechaEmbarqueDesde";
                           settings.Properties.NullText = "dd/MM/yyyy";
                           settings.Properties.EditFormat = EditFormat.Custom;
                           settings.Properties.EditFormatString = "dd/MM/yyyy";
                         //  settings.PopupCalendarOwnerName = "fechaEmbarqueDesde";
                           settings.Width = Unit.Percentage(100);
                           settings.Properties.NullText = "Desde";
                           settings.Properties.UseMaskBehavior = true;
                           settings.Properties.ClientSideEvents.Validation = "OnRangeEmbarqueDateValidation";

                       }
                            ).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().DateEditFor(p => p.InvoiceExterior.dateShipment, settings =>
                            {

                                settings.Name = "fechaEmbarqueHasta";
                                settings.Properties.ClientInstanceName = "fechaEmbarqueHasta";
                                settings.Properties.NullText = "dd/MM/yyyy";
                                settings.Properties.EditFormat = EditFormat.Custom;
                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                            //    settings.PopupCalendarOwnerName = "fechaEmbarqueHasta";
                                settings.Width = Unit.Percentage(100);
                                settings.Properties.NullText = "Desde";
                                settings.Properties.UseMaskBehavior = true;
                                settings.Properties.ClientSideEvents.Validation = "OnRangeEmbarqueDateValidation";
                            }
                            ).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td class="dxeBase_Metropolis">Agencia Naviera:</td>
                        <td colspan="2">
                            @Html.DevExpress().ComboBoxFor(p => p.InvoiceExterior.id_shippingAgency, settings =>
                       {
                           settings.Name = "id_shippingAgency";
                           settings.Properties.ClientInstanceName = "id_shippingAgency";
                           settings.Width = Unit.Percentage(100);
                           settings.Properties.ValueField = "id";
                           settings.Properties.TextField = "name";
                           settings.Properties.ValueType = typeof(int);

                           settings.Properties.NullDisplayText = "Todas";
                           settings.Properties.NullText = "Todas";

                           settings.Properties.TextFormatString = "{1}";


                           //settings.Properties.Width = Unit.Percentage(100);
                           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                           settings.Properties.EnableSynchronization = DefaultBoolean.False;
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                           // todo: buscar solo agenccias de facturas que estan en ffacturas existentes
                       }).BindList(DataProviderShippingAgency.ShippingAgencyAll()).GetHtml()

                        </td>
                    </tr>
                    <tr>
                        <td class="dxeBase_Metropolis">Puerto de Descarga:</td>
                        <td colspan="2">
                            @Html.DevExpress().ComboBoxFor(p => p.InvoiceExterior.id_portDischarge, settings =>
                       {
                           settings.Name = "id_portDischarge";
                           settings.Properties.ClientInstanceName = "id_portDischarge";
                           settings.Width = Unit.Percentage(100);
                           settings.Properties.ValueField = "id";
                           settings.Properties.TextField = "name";
                           settings.Properties.ValueType = typeof(int);

                           settings.Properties.NullDisplayText = "Todas";
                           settings.Properties.NullText = "Todas";

                           settings.Properties.TextFormatString = "{1}";
                           settings.Properties.Columns.Add("code", "Cod.", 40);
                           settings.Properties.Columns.Add("name", "Nombre Puerto", 160);
                           settings.Properties.Columns.Add("cityName", "Ciudad", 100);
                           settings.Properties.Columns.Add("countryName", "País", 100);

                           //settings.Properties.Width = Unit.Percentage(100);
                           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                           settings.Properties.EnableSynchronization = DefaultBoolean.False;
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                           // todo: buscar solo agenccias de facturas que estan en ffacturas existentes
                       }).BindList(DataProviderPort.PortAllCityCountry((int)ViewData["id_company"])).GetHtml()

                        </td>
                    </tr>
                    <tr>
                        <td class="dxeBase_Metropolis">Puerto de Destino:</td>
                        <td colspan="2">
                            @Html.DevExpress().ComboBoxFor(p => p.InvoiceExterior.id_portDestination, settings =>
                       {
                           settings.Name = "id_portDestination";
                           settings.Properties.ClientInstanceName = "id_portDestination";
                           settings.Width = Unit.Percentage(100);
                           settings.Properties.ValueField = "id";
                           settings.Properties.TextField = "name";
                           settings.Properties.ValueType = typeof(int);

                           settings.Properties.NullDisplayText = "Todas";
                           settings.Properties.NullText = "Todas";

                           settings.Properties.TextFormatString = "{1}";
                           settings.Properties.Columns.Add("code", "Cod.", 40);
                           settings.Properties.Columns.Add("name", "Nombre Puerto", 160);
                           settings.Properties.Columns.Add("cityName", "Ciudad", 100);
                           settings.Properties.Columns.Add("countryName", "País", 100);


                           //settings.Properties.Width = Unit.Percentage(100);
                           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                           settings.Properties.EnableSynchronization = DefaultBoolean.False;
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                           // todo: buscar solo agenccias de facturas que estan en ffacturas existentes
                       }).BindList(DataProviderPort.PortAllCityCountry((int)ViewData["id_company"])).GetHtml()

                        </td>
                    </tr>
                </table>
            </td>
            <td class="ps-10">
                <table xd="Acciones" class="table table-condensed">
                    <tr class="ps-header">
                        <td colspan="3"><span class="dxflGroupBoxCaption_Metropolis">Acciones</span></td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().Button(settings =>
                        {
                           settings.Name = "btnSearch";
                           settings.UseSubmitBehavior = false;
                           settings.Text = "Buscar";
                           settings.Images.Image.IconID = IconID.ActionsSearch16x16devav;
                           settings.Width = Unit.Percentage(100);
                           settings.ClientSideEvents.Click = "btnSearchGeneric";
                           settings.CustomJSProperties = (s, e) =>
                           {

                               e.Properties["cpobjForm"] = "InvoiceExteriorFilterForm";
                               e.Properties["cpmvcController"] = "InvoiceExterior/InvoiceExteriorResults";
                               e.Properties["cphtmlContainer"] = "results";
                           };

                       }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().Button(settings =>
                            {
                                settings.Name = "Clear";
                                settings.UseSubmitBehavior = false;
                                settings.Text = "Limpiar";
                                settings.Images.Image.IconID = IconID.ActionsClear16x16;
                                settings.Width = Unit.Percentage(100);
                                settings.ClientSideEvents.Click = "btnClear_click";
                            }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="btn-group" style="width: 100%;">
                                <button type="button" class="btn-default dropdown-toggle custom-button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img class="dxIcon_actions_add_16x16 dx-vam" src="/DXR.axd?r=1_35-2Z17d" alt="" style="margin-right: 4px;" id="AddNewImg"><span>Nueva</span><span class="caret"></span>
                                </button>
								<ul class="dropdown-menu dropdown-menu-right">
									@if (!paramModificarProforma)
									{
										<li><a href="javascript:;" onclick="AddNewInvoiceExteriorManual();">Manual</a></li>
										<li><a href="javascript:;" onclick="AddNewInvoiceExteriorFromSalesQuotation();">Desde Proforma</a></li>
									}

									<li><a href="javascript:;" onclick="AddNewInvoiceExteriorFromInvoiceCommercial();">Desde Factura Comercial</a></li>
								</ul>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="btn-group" style="width: 100%;">
                                <button type="button" class="btn-default dropdown-toggle custom-button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img src="~/Content/image/print_preview.png" alt="" style="margin-right: 4px;" id="PrintReports"><span>Reportes</span><span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-right">
                                    <li><a href="javascript:;" onclick="PRInvoiceFiscal();">Facturas Fiscales</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                </table>

            </td>
        </tr>
    </table>


}

