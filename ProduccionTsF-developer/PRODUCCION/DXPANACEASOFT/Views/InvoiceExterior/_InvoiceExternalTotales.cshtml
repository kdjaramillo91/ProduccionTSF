@using System.Globalization
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@using ValidationSettings = System.Web.UI.ValidationSettings
@model DXPANACEASOFT.Models.Invoice

@{
	DocumentState documentState = (Model != null && Model.Document != null && Model.Document.DocumentState != null) ? Model.Document.DocumentState : DataProviderDocumentState.DocumentStateByCodeByCompany((int)ViewData["id_company"], "01");
	// DataProviderDocumentState.DocumentStateByCodeByCompany((int)ViewData["id_company"], "01")
	List<tbsysDocumentDocumentStateControlsState> _ControlsState = DataProviderControlState.ControlStateByDocumentByState("07", documentState.code);

	var canEditPaymentTerm = (this.Model.Document.DocumentState.code == "01")
		|| (this.Model.Document.DocumentState.code == "02");
}

<table class="table table-condensed">
    <tr class="ps-line-sep">
        <td colspan="2" class="ps-bar-collapse">
            <span class="dxflGroupBoxCaption_Metropolis">Totales</span>
        </td>
    </tr>

    <tr>
        <td>Subtotal 0%</td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.subTotalIVA0Truncate, settings =>
       {
           settings.Name = "subTotalIVA0";
           settings.Width = Unit.Percentage(100);
           settings.Properties.ClientInstanceName = "subTotalIVA0";
           settings.ReadOnly = true;
           settings.Properties.DisplayFormatString = "##.00";
           var txtProperties = settings.Properties as TextBoxProperties;
           txtProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
       }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>Descuento:</td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.totalDiscountTruncate, settings =>
       {
           settings.Name = "totalDiscount";
           settings.Width = Unit.Percentage(100);
           settings.Properties.ClientInstanceName = "totalDiscount";
           settings.ReadOnly = true;
           settings.Properties.DisplayFormatString = "##.00";
           var txtProperties = settings.Properties as TextBoxProperties;
           txtProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
       }).GetHtml()

        </td>
    </tr>
    <tr>
        <td>Valor Total FOB: </td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.valueTotalFOBTruncate, settings =>
       {
           settings.Name = "valueTotalFOB";
           settings.Width = Unit.Percentage(100);
           settings.Properties.ClientInstanceName = "valueTotalFOB";
           settings.ReadOnly = true;
           settings.Properties.DisplayFormatString = "##.00";
           var txtProperties = settings.Properties as TextBoxProperties;
           txtProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
       }).GetHtml()

        </td>
    </tr>
    <tr class="ps-line-sep">
        <td colspan="2"></td>
    </tr>
    <tr>

        <td>Flete Internacional ($): </td>
        <td>
            @Html.DevExpress().SpinEditFor(m => m.InvoiceExterior.valueInternationalFreight , settings =>
       {
           settings.Name = "valueInternationalFreight";
           settings.Properties.ClientInstanceName = "valueInternationalFreight";
           settings.Width = Unit.Percentage(100);
           settings.Properties.ValidationSettings.Display = Display.Dynamic;
           settings.ShowModelErrors = true;
           settings.Properties.DecimalPlaces =2;
           //settings.Properties.DisplayFormatString = "C2";
           settings.Properties.MaxValue = 9999999;
           settings.Properties.MinValue = 0;
           settings.Properties.ClientSideEvents.GotFocus = "GenericSelectAllText";
           settings.Properties.ClientSideEvents.ValueChanged = "Invoice_ChangeInvoiceTotal";
           var txtProperties = settings.Properties as SpinEditProperties;
           txtProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
           settings.Properties.SpinButtons.ShowIncrementButtons = false;
           settings.Properties.AllowNull = false;


           settings.ReadOnly = _ControlsState.FirstOrDefault(r => r.controlName == "valueInternationalFreight").isReadOnly;

           if (_ControlsState.FirstOrDefault(r => r.controlName == "valueInternationalFreight").isRequired)
           {
               settings.Properties.ClientSideEvents.Validation = "OnUpdateImagenWhenRequiredField";
               settings.CustomJSProperties = (s, e) =>
               {

                   e.Properties["cpTabContainer"] = "tabInvoiceExterior";
                   e.Properties["cpMessageError"] = "Campo Obligatorio.";
                   e.Properties["cpIsRequired"] = "true";
                   e.Properties["cpTabControl"] = "tabControl";

               };
           }

       }).GetHtml()

        </td>
    </tr>
    <tr>

        <td>Seguro Internacional ($):</td>
        <td>
            @Html.DevExpress().SpinEditFor(m => m.InvoiceExterior.valueInternationalInsurance, settings =>
       {
           settings.Name = "valueInternationalInsurance";
           settings.Properties.ClientInstanceName = "valueInternationalInsurance";
           settings.Width = Unit.Percentage(100);
           settings.Properties.ValidationSettings.Display = Display.Dynamic;
           settings.ShowModelErrors = true;
           settings.Properties.DecimalPlaces = 2;
           //settings.Properties.DisplayFormatString = "C2";
           settings.Properties.MaxValue = 9999999;
           settings.Properties.MinValue = 0;
           settings.Properties.ClientSideEvents.GotFocus = "GenericSelectAllText";
           settings.Properties.ClientSideEvents.ValueChanged = "Invoice_ChangeInvoiceTotal";
           var txtProperties = settings.Properties as SpinEditProperties;
           txtProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
           settings.Properties.SpinButtons.ShowIncrementButtons = false;
           settings.Properties.AllowNull = false;

           settings.ReadOnly = _ControlsState.FirstOrDefault(r => r.controlName == "valueInternationalInsurance").isReadOnly;
           if (_ControlsState.FirstOrDefault(r => r.controlName == "valueInternationalInsurance").isRequired)
           {
               settings.Properties.ClientSideEvents.Validation = "OnUpdateImagenWhenRequiredField";
               settings.CustomJSProperties = (s, e) =>
               {

                   e.Properties["cpTabContainer"] = "tabInvoiceExterior";
                   e.Properties["cpMessageError"] = "Campo Obligatorio.";
                   e.Properties["cpIsRequired"] = "true";
                   e.Properties["cpTabControl"] = "tabControl";

               };
           }

       }).GetHtml()

        </td>
    </tr>
    <tr>

        <td>Gastos Aduaneros ($):</td>
        <td>
            @Html.DevExpress().SpinEditFor(m => m.InvoiceExterior.valueCustomsExpenditures, settings =>
       {
           settings.Name = "valueCustomsExpenditures";
           settings.Properties.ClientInstanceName = "valueCustomsExpenditures";
           settings.Width = Unit.Percentage(100);
           settings.Properties.ValidationSettings.Display = Display.Dynamic;
           settings.ShowModelErrors = true;
           settings.Properties.DecimalPlaces = 2;
           //settings.Properties.DisplayFormatString = "C2";
           settings.Properties.MaxValue = 9999999;
           settings.Properties.MinValue = 0;
           settings.Properties.ClientSideEvents.GotFocus = "GenericSelectAllText";
           settings.Properties.ClientSideEvents.ValueChanged = "Invoice_ChangeInvoiceTotal";
           settings.Properties.SpinButtons.ShowIncrementButtons = false;
           settings.Properties.AllowNull = false;

           var txtProperties = settings.Properties as SpinEditProperties;
           txtProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

           settings.ReadOnly = _ControlsState.FirstOrDefault(r => r.controlName == "valueCustomsExpenditures").isReadOnly;
           if (_ControlsState.FirstOrDefault(r => r.controlName == "valueCustomsExpenditures").isRequired)
           {
               settings.Properties.ClientSideEvents.Validation = "OnUpdateImagenWhenRequiredField";
               settings.CustomJSProperties = (s, e) =>
               {

                   e.Properties["cpTabContainer"] = "tabInvoiceExterior";
                   e.Properties["cpMessageError"] = "Campo Obligatorio.";
                   e.Properties["cpIsRequired"] = "true";
                   e.Properties["cpTabControl"] = "tabControl";

               };
           }

       }).GetHtml()

        </td>
    </tr>
    <tr>

        <td>Gastos Transp./Otros ($):</td>
        <td>
            @Html.DevExpress().SpinEditFor(m => m.InvoiceExterior.valueTransportationExpenses, settings =>
       {
           settings.Name = "valueTransportationExpenses";
           settings.Properties.ClientInstanceName = "valueTransportationExpenses";
           settings.Width = Unit.Percentage(100);
           settings.Properties.ValidationSettings.Display = Display.Dynamic;
           settings.ShowModelErrors = true;
           settings.Properties.DecimalPlaces = 2;
           //settings.Properties.DisplayFormatString = "C2";
           settings.Properties.MaxValue = 9999999;
           settings.Properties.MinValue = 0;
           settings.Properties.ClientSideEvents.GotFocus = "GenericSelectAllText";
           settings.Properties.ClientSideEvents.ValueChanged = "Invoice_ChangeInvoiceTotal";
           settings.Properties.SpinButtons.ShowIncrementButtons = false;
           settings.Properties.AllowNull = false;

           var txtProperties = settings.Properties as SpinEditProperties;
           txtProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;


           settings.ReadOnly = _ControlsState.FirstOrDefault(r => r.controlName == "valueTransportationExpenses").isReadOnly;
           if (_ControlsState.FirstOrDefault(r => r.controlName == "valueTransportationExpenses").isRequired)
           {
               settings.Properties.ClientSideEvents.Validation = "OnUpdateImagenWhenRequiredField";
               settings.CustomJSProperties = (s, e) =>
               {

                   e.Properties["cpTabContainer"] = "tabInvoiceExterior";
                   e.Properties["cpMessageError"] = "Campo Obligatorio.";
                   e.Properties["cpIsRequired"] = "true";
                   e.Properties["cpTabControl"] = "tabControl";

               };
           }

       }).GetHtml()

        </td>
    </tr>
    <tr class="ps-line-sep">
        <td colspan="2"></td>
    </tr>
    <tr>
        <td>Valor Total: </td>
        <td class="ps_alignNum">
            @Html.DevExpress().TextBoxFor(m => m.valuetotalCIFTruncate, settings =>
       {
           settings.Name = "valuetotalCIF";
           settings.Width = Unit.Percentage(100);
           settings.Properties.ClientInstanceName = "valuetotalCIF";

           settings.ReadOnly = true;

           if (canEditPaymentTerm)
           {
               settings.Properties.ClientSideEvents.Init = "OnInvoiceTotalValueReady";
               settings.Properties.ClientSideEvents.ValueChanged = "OnInvoiceTotalValueReady";
           }

           settings.Properties.DisplayFormatString = "##.00";
           var txtProperties = settings.Properties as TextBoxProperties;
           txtProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

       }).GetHtml()

        </td>
    </tr>
    <tr>
        <td>Valor Proforma: </td>
        <td class="ps_alignNum">
            @Html.DevExpress().TextBoxFor(m => m.valuetotalProformaTruncate, settings =>
       {
           settings.Name = "valuetotalProforma";
           settings.Width = Unit.Percentage(100);
           settings.Properties.ClientInstanceName = "valuetotalProforma";

           settings.ReadOnly = true;

           //if (canEditPaymentTerm)
           //{
           //    settings.Properties.ClientSideEvents.Init = "OnInvoiceTotalValueReady";
           //    settings.Properties.ClientSideEvents.ValueChanged = "OnInvoiceTotalValueReady";
           //}

           settings.Properties.DisplayFormatString = "##.00";
           var txtProperties = settings.Properties as TextBoxProperties;
           txtProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;

       }).GetHtml()

        </td>
    </tr>
</table>