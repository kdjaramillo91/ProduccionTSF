@using System.Globalization
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@using ValidationSettings = System.Web.UI.ValidationSettings
@model DXPANACEASOFT.Models.Invoice

@{


    int id_invoice = (Model != null) ? Model.id : 0;
    DocumentState documentState = (Model != null && Model.Document != null && Model.Document.id_documentState != 0) ? DataProviderDocumentState.DocumentStateById(Model.Document.id_documentState) : DataProviderDocumentState.DocumentStateByCodeByCompany((int)ViewData["id_company"], "01");
    tbsysDocumentDocumentStateControlsState _ControlsState = DataProviderControlState.ControlStateByDocumentByStateByControl("07", documentState.code, "btnUpdateFoot");

}


@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formEditInvoiceExterior", name = "formEditInvoiceExterior" }))
{

    // presenta mensajes del codeBehind
    if (ViewData["EditMessage"] != null)
    {
        @Html.Raw(ViewData["EditMessage"]);
    }

    if (ViewData["EditError"] != null)
    {
        @Html.Raw(ViewData["EditError"]);
    }


    @Html.Hidden("id_invoice", id_invoice)

    @Html.DevExpress().PageControl(tabs =>
{

    tabs.Name = "tabControl";
    tabs.Width = Unit.Percentage(100);

    // Documento
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabDocument";
        tab.Text = "Documento    ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            var document = (Model != null && Model.Document != null) ? Model.Document : new Document();
            Html.RenderPartial("DocumentTemplates/_DocumentFormEditCutInvoiceExterior", document);
        });
    });

    // Cabecera FE
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabInvoiceExterior";
        tab.Text = "Factura del Exterior    ";

        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            Html.RenderPartial("_InvoiceExteriorMainFormTabInvoiceExterior");
        });
    });

    // Detalle FE
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabInvoiceExteriorDetails";
        tab.Text = "Detalles    ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {

            Html.RenderPartial("_InvoiceExteriorMainFormTabDetails");
        });
    });

    // COBRANZAS
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabCobranzas";
        tab.Text = "Cobranzas    ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            Html.RenderPartial("_InvoiceExteriorMainFromTabDetailsTax");
        });

        tab.Visible = @documentState.code != "05";
    });

    // DOCUMENTACION
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabDocumentacion";
        tab.Text = "Documentación    ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            Html.RenderPartial("_InvoiceExteriorMainFromTabDetailsDocumentation");
        });

        tab.Visible = @documentState.code != "05";

    });

    // Informacion Doc. Electronico
    /*  tabs.TabPages.Add(tab =>
      {
          tab.Name = "tabDocument";
          tab.Text = "Documento    ";
          tab.TabStyle.Width = Unit.Percentage(100);

          tab.TabImage.Width = Unit.Pixel(16);
          tab.TabImage.Height = Unit.Pixel(16);
          tab.TabImage.Align = ImageAlign.Right;
          tab.TabImage.Url = "/Content/image/noimage.png";
          tab.ActiveTabImage.Align = ImageAlign.Right;
          tab.ActiveTabImage.Url = "/Content/image/noimage.png";

          tab.SetContent(() =>
          {
              var document = (Model != null && Model.Document != null) ? Model.Document : new Document();
              //    Html.RenderPartial("EletronicDocument/_ElectronicDocumentView", document);
          });
      });*/


}).GetHtml()


    <table class="table table-condensed">
        <tr style="border-top: 1px Solid #C0C0C0;">
            <td colspan="6" style="text-align: right; margin-top: 5px;">
                @{
                    Html.DevExpress().Button(button =>
                    {
                        button.Name = "btnUpdateFoot";
                        button.Text = "Actualizar";
                        button.RenderMode = ButtonRenderMode.Button;
                        button.ImagePosition = ImagePosition.Left;
                        button.Images.Image.IconID = IconID.ActionsSave16x16devav;
                        button.UseSubmitBehavior = false;
                        button.ClientVisible = IsEnabled(1);
                        button.ClientSideEvents.Click = "ButtonUpdate_Click";
                        button.ClientEnabled = _ControlsState.isRequired;
                    }).Render();

                    ViewContext.Writer.Write("&nbsp;&nbsp;");

                    Html.DevExpress().Button(button =>
                    {
                        button.Name = "btnCancelFoot";
                        button.Text = "Cerrar";
                        button.RenderMode = ButtonRenderMode.Button;
                        button.ImagePosition = ImagePosition.Left;
                        button.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                        button.UseSubmitBehavior = false;
                        button.ClientSideEvents.Click = "ButtonCancel_Click";
                    }).Render();
                }
            </td>
        </tr>
    </table>
}

<script src="~/Scripts/invoiceeexterior/editform.js"></script>


@* validar permisos *@
@functions{

    bool IsEnabled(int id_permission)
    {
        int id_user = (int)ViewData["id_user"];
        int id_menu = (int)ViewData["id_menu"];

        User user = DataProviderUser.UserById(id_user);

        if (user == null)
            return false;

        UserMenu userMenu = user.UserMenu.FirstOrDefault(m => m.Menu.id == id_menu);

        if (userMenu == null)
            return false;

        Permission permission = userMenu.Permission.FirstOrDefault(p => p.id == id_permission);

        return (permission != null);
    }

}
