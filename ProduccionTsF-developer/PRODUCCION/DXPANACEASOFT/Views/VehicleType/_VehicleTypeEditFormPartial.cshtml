@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.VehicleType


    <table class="table table-condensed" width="100" >
        
        <tr>
            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.name, settings =>
           {
               settings.Text = "Código:*";
               settings.AssociatedControlName = "name";

           }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.name, settings =>
           {
               settings.Name = "name";
               settings.Properties.ClientInstanceName = "name";
               settings.Width = Unit.Percentage(100);
               settings.Properties.NullText = "Código";
               settings.ShowModelErrors = true;
               settings.ClientVisible = true;
               settings.Properties.ClientSideEvents.Validation = "OnCodeVehicleTypeValidation";

           }).GetHtml()
        </tr>
        <tr>
            <td style="width: 8%;">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Text = "Nombre:*";
                    settings.AssociatedControlName = "description";
                }).GetHtml()
            </td>
            <td colspan="2">
                @Html.DevExpress().TextBoxFor(m => m.description, settings =>
                {
                    settings.Properties.ClientInstanceName = "descriptionName";

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "Nombre del Tipo de Vehículo";
                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnVehicleDescriptionValidation";
                }).GetHtml()
            </td>

            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.axisNumber, settings =>
                {
                    settings.Text = "Número Axis:";
                    settings.AssociatedControlName = "axisNumber";
                }).GetHtml()
            </td>
            <td colspan="8">
                @Html.DevExpress().SpinEditFor(m => m.axisNumber, settings =>
                {
                    settings.Properties.Width = Unit.Percentage(200);
                    settings.Properties.ClientInstanceName = "axisNumber";
                    //settings.Properties.DisplayFormatString = "N4";
                    settings.Properties.DisplayFormatInEditMode = true;
                    //settings.Properties.DecimalPlaces = 4;
                    settings.Properties.SpinButtons.ShowIncrementButtons = true;
                    settings.Properties.SpinButtons.ShowLargeIncrementButtons = false;
                    //settings.Properties.Increment = 0.01M;
                    settings.Properties.LargeIncrement = 1.0M;
                    settings.Properties.MinValue = 0;
                    settings.Properties.MaxValue = 9999;
                    settings.Properties.NumberType = SpinEditNumberType.Float;
                    settings.Properties.NumberFormat = SpinEditNumberFormat.Custom;

                    settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                    //settings.Properties.ClientSideEvents.Validation = "OnAxisNumberValidation";
                    //settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.codeInen, settings =>
                {
                    settings.Text = "Código Inen:";
                    settings.AssociatedControlName = "codeInen";
                }).GetHtml()
            </td>
            <td colspan="2">
                @Html.DevExpress().TextBoxFor(m => m.codeInen, settings =>
                {
                    settings.Properties.ClientInstanceName = "codeInen";

                    settings.Width = Unit.Percentage(100);
                    //settings.Properties.ClientSideEvents.Validation = "OnCodeInenValidation";
                    settings.Properties.NullText = "";
                    settings.ShowModelErrors = true;
                }).GetHtml()
            </td>

            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.subCodeInen, settings =>
                {
                    settings.Text = "SubCódigo Inen:";
                    settings.AssociatedControlName = "subCodeInen";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.subCodeInen, settings =>
                {
                    settings.Properties.ClientInstanceName = "subCodeInen";

                    settings.Width = Unit.Percentage(100);
                    //settings.Properties.ClientSideEvents.Validation = "OnSubCodeInenValidation";
                    settings.Properties.NullText = "";
                    settings.ShowModelErrors = true;
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.high, settings =>
                {
                    settings.Text = "Altura:";
                    settings.AssociatedControlName = "high";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(m => m.high, settings =>
                {
                    settings.Properties.Width = Unit.Percentage(100);
                    settings.Properties.ClientInstanceName = "high";
                    //settings.Properties.DisplayFormatString = "N4";
                    settings.Properties.DisplayFormatInEditMode = true;
                    //settings.Properties.DecimalPlaces = 4;
                    settings.Properties.SpinButtons.ShowIncrementButtons = true;
                    settings.Properties.SpinButtons.ShowLargeIncrementButtons = false;
                    //settings.Properties.Increment = 0.01M;
                    settings.Properties.LargeIncrement = 1.0M;
                    settings.Properties.MinValue = 0;
                    settings.Properties.MaxValue = 9999;
                    settings.Properties.NumberType = SpinEditNumberType.Float;
                    settings.Properties.NumberFormat = SpinEditNumberFormat.Custom;

                    settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                    //settings.Properties.ClientSideEvents.Validation = "OnHighValidation";
                    //settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.width, settings =>
                {
                    settings.Text = "Anchura:";
                    settings.AssociatedControlName = "width";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(m => m.width, settings =>
                {
                    settings.Properties.Width = Unit.Percentage(100);
                    settings.Properties.ClientInstanceName = "width";
                    //settings.Properties.DisplayFormatString = "N4";
                    settings.Properties.DisplayFormatInEditMode = true;
                    //settings.Properties.DecimalPlaces = 4;
                    settings.Properties.SpinButtons.ShowIncrementButtons = true;
                    settings.Properties.SpinButtons.ShowLargeIncrementButtons = false;
                    //settings.Properties.Increment = 0.01M;
                    settings.Properties.LargeIncrement = 1.0M;
                    settings.Properties.MinValue = 0;
                    settings.Properties.MaxValue = 9999;
                    settings.Properties.NumberType = SpinEditNumberType.Float;
                    settings.Properties.NumberFormat = SpinEditNumberFormat.Custom;

                    settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                    //settings.Properties.ClientSideEvents.Validation = "OnWidthValidation";
                    //settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.@long, settings =>
                {
                    settings.Text = "Longitud:";
                    settings.AssociatedControlName = "@long";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(m => m.@long, settings =>
                {
                    settings.Properties.Width = Unit.Percentage(100);
                    settings.Properties.ClientInstanceName = "@long";
                    //settings.Properties.DisplayFormatString = "N4";
                    settings.Properties.DisplayFormatInEditMode = true;
                    //settings.Properties.DecimalPlaces = 4;
                    settings.Properties.SpinButtons.ShowIncrementButtons = true;
                    settings.Properties.SpinButtons.ShowLargeIncrementButtons = false;
                    //settings.Properties.Increment = 0.01M;
                    settings.Properties.LargeIncrement = 1.0M;
                    settings.Properties.MinValue = 0;
                    settings.Properties.MaxValue = 9999;
                    settings.Properties.NumberType = SpinEditNumberType.Float;
                    settings.Properties.NumberFormat = SpinEditNumberFormat.Custom;

                    settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                    //settings.Properties.ClientSideEvents.Validation = "OnLongValidation";
                    //settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.id_metricUnitMaxLoad, settings =>
                {
                    settings.Text = "Unidad Métrica de Carga Máxima*:";
                    settings.AssociatedControlName = "id_metricUnitMaxLoad";
                }).GetHtml()
            </td>
            <td colspan="2">
                @{
                    int? id_metricUnitMaxLoad = (Model != null && Model.id_metricUnitMaxLoad != 0) ? (int?)Model.id_metricUnitMaxLoad : null;
                }
                @Html.DevExpress().ComboBoxFor(m => m.id_metricUnitMaxLoad, settings =>
                {
                    settings.Properties.ClientInstanceName = "id_metricUnitMaxLoad";

                    settings.Properties.ValueField = "id";
                    settings.Properties.TextField = "name";
                    settings.Properties.ValueType = typeof(int);

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "Seleccione la Unidad de Medida";
                    settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnIdMetricUnitMaxLoadValidation";
                }).BindList(DataProviderVehicleType.VehicleTypeMetricUnitByCompanyAndCurrent((int)ViewData["id_company"], id_metricUnitMaxLoad)).Bind(id_metricUnitMaxLoad).GetHtml()
            </td>

            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.maxLoad, settings =>
                {
                    settings.Text = "Carga Máxima*:";
                    settings.AssociatedControlName = "maxLoad";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(m => m.maxLoad, settings =>
                {
                    settings.Properties.Width = Unit.Percentage(100);
                    settings.Properties.ClientInstanceName = "maxLoad";
                    //settings.Properties.DisplayFormatString = "N4";
                    settings.Properties.DisplayFormatInEditMode = true;
                    //settings.Properties.DecimalPlaces = 4;
                    settings.Properties.SpinButtons.ShowIncrementButtons = true;
                    settings.Properties.SpinButtons.ShowLargeIncrementButtons = false;
                    //settings.Properties.Increment = 0.01M;
                    settings.Properties.LargeIncrement = 1.0M;
                    settings.Properties.MinValue = 0;
                    settings.Properties.MaxValue = 9999;
                    settings.Properties.NumberType = SpinEditNumberType.Float;
                    settings.Properties.NumberFormat = SpinEditNumberFormat.Custom;

                    settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                    settings.Properties.ClientSideEvents.Validation = "OnMaxLoadValidation";
                    //settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.id_metricUnitmaxCubicCapacity, settings =>
                {
                    settings.Text = "Unidad Métrica de Carga Cúbica Máxima*:";
                    settings.AssociatedControlName = "id_metricUnitmaxCubicCapacity";
                }).GetHtml()
            </td>
            <td colspan="2">
                @{
                    int? id_metricUnitmaxCubicCapacity = (Model != null && Model.id_metricUnitmaxCubicCapacity != 0) ? (int?)Model.id_metricUnitmaxCubicCapacity : null;
                }
                @Html.DevExpress().ComboBoxFor(m => m.id_metricUnitmaxCubicCapacity, settings =>
                {
                    settings.Properties.ClientInstanceName = "id_metricUnitmaxCubicCapacity";

                    settings.Properties.ValueField = "id";
                    settings.Properties.TextField = "name";
                    settings.Properties.ValueType = typeof(int);

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "Seleccione la Unidad de Medida";
                    settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnIdMetricUnitmaxCubicCapacityValidation";
                }).BindList(DataProviderVehicleType.VehicleTypeMetricUnitByCompanyAndCurrent((int)ViewData["id_company"], id_metricUnitmaxCubicCapacity)).Bind(id_metricUnitmaxCubicCapacity).GetHtml()
            </td>

            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.maxCubicCapacity, settings =>
                {
                    settings.Text = "Carga Cúbica Máxima*:";
                    settings.AssociatedControlName = "maxCubicCapacity";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(m => m.maxCubicCapacity, settings =>
                {
                    settings.Properties.Width = Unit.Percentage(100);
                    settings.Properties.ClientInstanceName = "maxCubicCapacity";
                    //settings.Properties.DisplayFormatString = "N4";
                    settings.Properties.DisplayFormatInEditMode = true;
                    //settings.Properties.DecimalPlaces = 4;
                    settings.Properties.SpinButtons.ShowIncrementButtons = true;
                    settings.Properties.SpinButtons.ShowLargeIncrementButtons = false;
                    //settings.Properties.Increment = 0.01M;
                    settings.Properties.LargeIncrement = 1.0M;
                    settings.Properties.MinValue = 0;
                    settings.Properties.MaxValue = 9999;
                    settings.Properties.NumberType = SpinEditNumberType.Float;
                    settings.Properties.NumberFormat = SpinEditNumberFormat.Custom;

                    settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                    settings.Properties.ClientSideEvents.Validation = "OnMaxCubicCapacityValidation";
                    //settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td style="width: 8%;">
                @Html.DevExpress().LabelFor(m => m.id_shippingType, settings =>
                {
                    settings.Text = "Tipo de Viaje*:";
                    settings.AssociatedControlName = "id_shippingType";
                }).GetHtml()
            </td>
            <td colspan="2">
                @{
                    int? id_shippingType = (Model != null && Model.id_shippingType != 0) ? (int?)Model.id_shippingType : null;
                }
                @Html.DevExpress().ComboBoxFor(m => m.id_shippingType, settings =>
                {
                    settings.Properties.ClientInstanceName = "id_shippingType";

                    settings.Properties.ValueField = "id";
                    settings.Properties.TextField = "name";
                    settings.Properties.ValueType = typeof(int);

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "Seleccione el Tipo de Viaje";
                    settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnIdShippingTypeValidation";
                }).BindList(DataProviderVehicleType.VehicleTransportTariffTypesByCompanyAndCurrent((int)ViewData["id_company"], id_shippingType)).Bind(id_shippingType).GetHtml()
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.isActive, settings =>
                {
                    settings.Text = "¿Activo?:";
                    settings.AssociatedControlName = "isActive";
                }).GetHtml()
            </td>
            <td colspan="5">
                @Html.DevExpress().CheckBoxFor(m => m.isActive, settings =>
                {
                    settings.Properties.ClientInstanceName = "isActive";

                    settings.Width = Unit.Percentage(100);
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td colspan="6" style="text-align: right;">
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnUpdate";
                    settings.Text = "Actualizar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsSave16x16devav;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonUpdate_Click";
                }).GetHtml()
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnCancel";
                    settings.Text = "Cancelar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonCancel_Click";
                }).GetHtml()
            </td>
        </tr>
        <tr id="VehicleTypeAlertRow" style="display: none;">
            <td colspan="6">
                <div class="alert alert-danger fade in" style="margin-top:18px;">
                    <button type="button" class="close" data-dismiss="alert" aria-label="close" title="close" style="top: 0px; right: 0px;"><span aria-hidden="true">&times;</span></button>
                    <span id="VehicleTypeErrorMessage"></span>
                </div>
            </td>
        </tr>
    </table>

<script src="~/Scripts/vehicletype/editform.js"></script>
