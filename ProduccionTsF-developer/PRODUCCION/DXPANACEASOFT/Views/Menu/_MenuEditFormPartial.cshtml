
@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.Menu

@{
    int id_menu = (Model != null) ? Model.id : 0;
}

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formEditMenu", name = "formEditMenu" }))
{
    @Html.Hidden("id_menu", id_menu)

    <table class="table table-condenced">
        <tr>
            <td>
                @Html.DevExpress().Label(settings =>
                {
                    settings.Text = "Título:*";
                    settings.AssociatedControlName = "title";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.title, settings =>
                {
                    settings.Name = "title";
                    settings.Properties.ClientInstanceName = "title";

                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnTitleValidation";

                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Label(settings =>
                {
                    settings.Text = "Posición:";
                    settings.AssociatedControlName = "position";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(m => m.position, settings =>
                {
                    settings.Name = "position";
                    settings.Properties.ClientInstanceName = "position";

                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnPositionValidation";

                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Label(settings =>
                {
                    settings.Text = "Módulo:";
                    settings.AssociatedControlName = "id_controller";
                }).GetHtml()
            </td>
            <td>
                @{
                    int? id_controller = (Model != null && Model.id_controller != 0) ? (int?)Model.id_controller : null;
                }
                @Html.DevExpress().ComboBoxFor(m => m.id_controller, settings =>
                {
                    settings.Name = "id_controller";
                    settings.Properties.ClientInstanceName = "id_controller";

                    settings.Properties.ValueField = "id";
                    settings.Properties.TextField = "name";
                    settings.Properties.ValueType = typeof(int);

                    settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnControllerValditation";
                    settings.Properties.ClientSideEvents.SelectedIndexChanged = "ComboBoxController_SelectedIndexChanged";

                }).BindList(DataProviderController.Controllers()).Bind(id_controller).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Label(settings =>
                {
                    settings.Text = "Opción:";
                    settings.AssociatedControlName = "id_action";
                }).GetHtml()
            </td>
            <td>
                @{
                    int? id_action = (Model != null && Model.id_action != 0) ? (int?)Model.id_action : null;
                }
                @Html.DevExpress().ComboBoxFor(m => m.id_action, settings =>
                {
                    settings.Name = "id_action";
                    settings.Properties.ClientInstanceName = "id_action";

                    settings.Properties.ValueField = "id";
                    settings.Properties.TextField = "name";
                    settings.Properties.ValueType = typeof(int);

                    settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                    settings.ShowModelErrors = true;
                    settings.Properties.ClientSideEvents.Validation = "OnActionValidation";

                }).BindList(DataProviderAction.ActionsByController(id_controller)).Bind(id_action).GetHtml()
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().Label(settings =>
                {
                    settings.Text = "¿Activo?:";
                    settings.AssociatedControlName = "isActive";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().CheckBoxFor(m => m.isActive, settings =>
                {
                    settings.Properties.ClientInstanceName = "isActive";

                    settings.Width = Unit.Percentage(100);
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td colspan="8" style="text-align: right;">
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnUpdate";
                    settings.Text = "Actualizar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsSave16x16devav;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonUpdate_Click";
                }).GetHtml()
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnCancel";
                    settings.Text = "Cancelar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonCancel_Click";
                }).GetHtml()
            </td>
        </tr>
        <tr id="menuAlertRow" style="display: none;">
            <td colspan="8">
                <div class="alert alert-danger fade in" style="margin-top:18px;">
                    <button type="button" class="close" data-dismiss="alert" aria-label="close" title="close" style="top: 0px; right: 0px;"><span aria-hidden="true">&times;</span></button>
                    <span id="menuErrorMessage"></span>
                </div>
            </td>
        </tr>
    </table>
}