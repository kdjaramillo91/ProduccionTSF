@using System.Drawing
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@{
    var CodeReceptionDispatchMaterials = (string)ViewData["CodeReceptionDispatchMaterials"];
}
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "gvMaterialDispatchEditFormDetails";
        settings.CallbackRouteValues = new { Controller = "Logistics", Action = "RemissionGuideDetailViewDispatchMaterials" };

        settings.ClientSideEvents.BeginCallback = "RemissionGuideDetailViewDispatchMaterials_BeginCallback";

        settings.Width = Unit.Percentage(100);
        settings.CommandColumn.Visible = false;

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
        settings.Styles.Header.Font.Bold = true;

        settings.Columns.Add(column =>
        {
            column.Name = "warehouse";
            column.Caption = "Bodega";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;


            column.SetDataItemTemplateContent(c =>
            {

                int? id_item = (int?)DataBinder.Eval(c.DataItem, "id_item");
                Item item = DataProviderItem.Item(id_item);

                string text = string.Empty;
                if (item != null && item.ItemInventory != null)
                {
                    Warehouse warehouse = item.ItemInventory.Warehouse;
                    if (warehouse != null)
                    {
                        text = (warehouse.name);
                    }
                }

                ViewContext.Writer.Write(text);
            });
        });


        settings.Columns.Add(column =>
        {
            column.Name = "warehouseLocation";
            column.Caption = "Ubicación";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;

            column.SetDataItemTemplateContent(c =>
            {


                string text = string.Empty;
                int? id_item = (int?)DataBinder.Eval(c.DataItem, "id_item");
                Item item = DataProviderItem.Item(id_item);

                if (item != null && item.ItemInventory != null)
                {
                    WarehouseLocation warehouseLocation = item.ItemInventory.WarehouseLocation;
                    if (warehouseLocation != null)
                    {
                        text = (warehouseLocation.name);
                    }
                }

                ViewContext.Writer.Write(text);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "id_item";
            column.Caption = "Nombre";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;

            column.SetDataItemTemplateContent(c =>
            {
                var id = (int)DataBinder.Eval(c.DataItem, "id_item");
                Item item = DataProviderItem.Item(id);
                if (item != null)
                {
                    var name = item.name;
                    ViewContext.Writer.Write(name);
                }
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "sourceExitQuantity";
            column.Caption = "Salida Origen";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                decimal sourceExitQuantity = (decimal)DataBinder.Eval(c.DataItem, "sourceExitQuantity");
                ViewContext.Writer.Write(sourceExitQuantity.ToString("N2"));
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "sendedDestinationQuantity";
            column.Caption = "Cnt. Enviada";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.Width = Unit.Percentage(7);

            column.SetDataItemTemplateContent(c =>
            {
                decimal sendedDestinationQuantity = (decimal)DataBinder.Eval(c.DataItem, "sendedDestinationQuantity");
                ViewContext.Writer.Write(sendedDestinationQuantity.ToString("N2"));
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "sendedAdjustmentQuantity";
            column.Caption = "Ajuste Enviado (+/-)";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.Width = Unit.Percentage(7);

            column.SetDataItemTemplateContent(c =>
            {
                decimal sendedAdjustmentQuantity = (decimal)DataBinder.Eval(c.DataItem, "sendedAdjustmentQuantity");
                ViewContext.Writer.Write(sendedAdjustmentQuantity.ToString("N2"));

            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "sendedNetQuantity";
            column.Caption = "Neto Enviado";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            column.Width = Unit.Percentage(7);
            column.CellStyle.BackColor = Color.LightGray;

            column.SetDataItemTemplateContent(c =>
            {
                decimal sendedDestinationQuantity = (decimal)DataBinder.Eval(c.DataItem, "sendedDestinationQuantity"); //cantidad enviada
                decimal sendedAdjustmentQuantity = (decimal)DataBinder.Eval(c.DataItem, "sendedAdjustmentQuantity");

                decimal sendedNetQuantity = sendedDestinationQuantity + sendedAdjustmentQuantity;
                ViewContext.Writer.Write(sendedNetQuantity.ToString("N2"));
               
            });


        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "sendedAdjustmentQuantity";
            column.Caption = "Ajuste Enviado (+/-)";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                decimal sendedAdjustmentQuantity = (decimal)DataBinder.Eval(c.DataItem, "sendedAdjustmentQuantity");
        //ViewContext.Writer.Write(amountConsumed.ToString("N2"));
        var text = sendedAdjustmentQuantity.ToString("N2");
                if (CodeReceptionDispatchMaterials == "01")
                {
                    text = "<font color='red'>" + text + "</font>";
                }
                ViewContext.Writer.Write(text);
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "sendedNetQuantity";
            column.Caption = "Neto Enviado";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                decimal sendedDestinationQuantity = (decimal)DataBinder.Eval(c.DataItem, "sendedDestinationQuantity"); //cantidad enviada
        decimal sendedAdjustmentQuantity = (decimal)DataBinder.Eval(c.DataItem, "sendedAdjustmentQuantity");

                decimal sendedNetQuantity = sendedDestinationQuantity + sendedAdjustmentQuantity;
        //ViewContext.Writer.Write(amountConsumed.ToString("N2"));
        var text = sendedNetQuantity.ToString("N2");
                if (CodeReceptionDispatchMaterials == "01")
                {
                    text = "<font color='red'>" + text + "</font>";
                }
                ViewContext.Writer.Write(text);
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "amountConsumed";
            column.Caption = "Cnt. Consumida";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.Width = Unit.Percentage(7);

            column.SetDataItemTemplateContent(c =>
            {
                decimal amountConsumed = (decimal)DataBinder.Eval(c.DataItem, "amountConsumed");
        //ViewContext.Writer.Write(amountConsumed.ToString("N2"));
        var text = amountConsumed.ToString("N2");
                if (CodeReceptionDispatchMaterials == "01")
                {
                    text = "<font color='red'>" + text + "</font>";
                }
                ViewContext.Writer.Write(text);
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "stealQuantity";
            column.Caption = "Cnt. Robo";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                decimal stealQuantity = (decimal)DataBinder.Eval(c.DataItem, "stealQuantity");
        //ViewContext.Writer.Write(amountConsumed.ToString("N2"));
        var text = stealQuantity.ToString("N2");
                if (CodeReceptionDispatchMaterials == "01")
                {
                    text = "<font color='red'>" + text + "</font>";
                }
                ViewContext.Writer.Write(text);
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "stealQuantity";
            column.Caption = "Cnt. Robo";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.Width = Unit.Percentage(7);

            column.SetDataItemTemplateContent(c =>
            {
                decimal stealQuantity = (decimal)DataBinder.Eval(c.DataItem, "stealQuantity");
                ViewContext.Writer.Write(stealQuantity.ToString("N2"));

            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "arrivalDestinationQuantity";
            column.Caption = "Cnt. Recibida";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.Width = Unit.Percentage(7);

            column.SetDataItemTemplateContent(c =>
            {
                decimal arrivalDestinationQuantity = (decimal)DataBinder.Eval(c.DataItem, "arrivalDestinationQuantity");

                var text = arrivalDestinationQuantity.ToString("N2");
                if (CodeReceptionDispatchMaterials == "01")
                {
                    text = "<font color='red'>" + text + "</font>";
                }
                ViewContext.Writer.Write(text);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "arrivalGoodCondition";
            column.Caption = "Buen Estado";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                decimal arrivalGoodCondition = (decimal)DataBinder.Eval(c.DataItem, "arrivalGoodCondition");
                var text = arrivalGoodCondition.ToString("N2");
                if (CodeReceptionDispatchMaterials == "01")
                {
                    text = "<font color='red'>" + text + "</font>";
                }
                ViewContext.Writer.Write(text);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "arrivalBadCondition";
            column.Caption = "Mal Estado";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                decimal arrivalBadCondition = (decimal)DataBinder.Eval(c.DataItem, "arrivalBadCondition");
                var text = arrivalBadCondition.ToString("N2");
                if (CodeReceptionDispatchMaterials == "01")
                {
                    text = "<font color='red'>" + text + "</font>";
                }
                ViewContext.Writer.Write(text);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "transferQuantity";
            column.Caption = "Cnt. Transferencia (+/-)";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                decimal transferQuantity = (decimal)DataBinder.Eval(c.DataItem, "transferQuantity");
        //ViewContext.Writer.Write(amountConsumed.ToString("N2"));
        var text = transferQuantity.ToString("N2");
                if (CodeReceptionDispatchMaterials == "01")
                {
                    text = "<font color='red'>" + text + "</font>";
                }
                ViewContext.Writer.Write(text);
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "transferQuantity";
            column.Caption = "Cnt. Transferencia (+/-)";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                decimal transferQuantity = (decimal)DataBinder.Eval(c.DataItem, "transferQuantity");
                ViewContext.Writer.Write(transferQuantity.ToString("N2"));

            });

        });

    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()


