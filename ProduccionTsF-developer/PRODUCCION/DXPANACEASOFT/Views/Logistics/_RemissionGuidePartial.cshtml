@using System.Drawing
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models.RemGuide

@{
	var grid = Html.DevExpress().GridView<RGResultsQuery>(settings =>
	{
		settings.Name = "gvRemisssionGuide";
		settings.CallbackRouteValues = new { Controller = "Logistics", Action = "RemissionGuidePartial" };

		settings.Width = Unit.Percentage(100);

		settings.SettingsSearchPanel.Visible = true;
		settings.Styles.SearchPanel.CssClass = "searchPanel";

		settings.CommandColumn.Visible = true;
		settings.SettingsBehavior.ConfirmDelete = true;

		settings.CommandColumn.ShowSelectCheckbox = true;
		settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.Page;
		settings.CommandColumn.Width = Unit.Percentage(3);

		settings.KeyFieldName = "id";

		settings.SettingsPager.Visible = true;
		settings.Settings.ShowGroupPanel = true;
		settings.Settings.ShowFilterRow = true;
		settings.SettingsBehavior.AllowSelectByRowClick = true;

		settings.SettingsBehavior.SortMode = DevExpress.XtraGrid.ColumnSortMode.Custom;

		settings.Settings.ShowTitlePanel = true;
		settings.Styles.TitlePanel.CssClass = "titleContainer";


		settings.Settings.ShowFooter = true;

		settings.ClientSideEvents.Init = "OnGridViewInit";
		settings.ClientSideEvents.SelectionChanged = "OnGridViewSelectionChanged";
		settings.ClientSideEvents.EndCallback = "OnGridViewEndCallback";

		settings.Settings.ShowFilterRowMenu = true;

		settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
		settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
		settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
		settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
		settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

		settings.SetTitlePanelTemplateContent(c =>
		{
			ViewContext.Writer.Write(@"<span id=""lblTitle"">Listado de Guias de Remisión</span>");
		});

		settings.SetFooterRowTemplateContent(c =>
		{
			ViewContext.Writer.Write(@"<span id=""lblInfo""></span>");
			if (settings.CommandColumn.SelectAllCheckboxMode != GridViewSelectAllCheckBoxMode.AllPages)
			{
				ViewContext.Writer.Write(
					@"<a id=""lnkSelectAllRows"" style=""cursor: pointer;"" onclick=""gvResultsSelectAllRows()"">Seleccionar Todos</a>
              <a id=""lnkClearSelection"" style=""cursor: pointer;"" onclick=""gvResultsClearSelection()"">Anular Selección</a>"
				);
			}
		});

		//MASTER DETAILS
		settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;
		settings.SettingsDetail.ShowDetailRow = false;

		settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
		settings.Styles.Header.Font.Bold = true;




		//Document
		settings.Columns.Add(m => m.numberDoc, column =>
		{
			column.Caption = "Número";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});
		//No. Orden
		settings.Columns.Add(m => m.numberDocPurchaseOrder, column =>
		{
			column.Caption = "No. Orden";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});


		//Fecha Emisión
		settings.Columns.Add(m => m.emissionDateDoc, column =>
		{
			column.Caption = "Fecha de Emisión";
			column.ColumnType = MVCxGridViewColumnType.DateEdit;
			column.Width = Unit.Percentage(8);
			column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";

			column.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
		});
		//Guia externa

		settings.Columns.Add(m => m.guia_externa, column =>
		{
			column.Caption = "Guía Externa";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});
		//Proceso
		settings.Columns.Add(m => m.personProcesPlant, column =>
		{
			column.Caption = "Proceso";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});
		//Proveedor
		settings.Columns.Add(m => m.providerName, column =>
		{
			column.Caption = "Proveedor";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});
		//Unidad de Producción
		settings.Columns.Add(m => m.productionUnitProviderName, column =>
		{
			column.Caption = "Camaronera";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});
		//Certificado
		settings.Columns.Add(m => m.certificadoName, column =>
		{
			column.Caption = "Certificado";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});
		//Fecha Despacho
		settings.Columns.Add(m => m.despachureDateDoc, column =>
		{
			column.Caption = "Fecha de Despacho";
			column.ColumnType = MVCxGridViewColumnType.DateEdit;
			column.Width = Unit.Percentage(3);
			column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";

		});
		//Fecha Salida
		settings.Columns.Add(m => m.exitTimePlanctDoc, column =>
		{
			column.Caption = "Fecha Salida";
			column.ColumnType = MVCxGridViewColumnType.DateEdit;
			column.Width = Unit.Percentage(8);
			column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm";

		});
		//Fecha Entrada
		settings.Columns.Add(m => m.entranceTimePlanctDoc, column =>
		{
			column.Caption = "Fecha Entrada";
			column.ColumnType = MVCxGridViewColumnType.DateEdit;
			column.Width = Unit.Percentage(3);
			column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm";

		});
		//
		settings.Columns.Add(m => m.isThird, column =>
		{
			column.Caption = "Es de Tercero?";
			column.ColumnType = MVCxGridViewColumnType.CheckBox;
			column.Width = Unit.Percentage(3);
		});
		//Estado Documento
		settings.Columns.Add(m => m.stateDoc, column =>
		{
			column.Caption = "Estado";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});

		//Estado Electronico
		settings.Columns.Add(m => m.stateDocElectronic, column =>
		{
			column.Caption = "Estado Electronico";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});
		// COMMAND COLUMN

		MVCxGridViewCommandColumn commandColumn = new MVCxGridViewCommandColumn();
		commandColumn.ShowEditButton = false;
		commandColumn.ShowDeleteButton = false;
		commandColumn.Visible = true;
		commandColumn.VisibleIndex = 15;
		commandColumn.Caption = "Acciones";
		commandColumn.Width = Unit.Percentage(3);

		commandColumn.CustomButtons.Add(
			new GridViewCommandColumnCustomButton
			{
				ID = "btnEditRow",
				Text = "Editar"
			}
		);
		settings.ClientSideEvents.CustomButtonClick = "GridViewRemissionGuideCustomCommandButton_Click";
		settings.Columns.Add(commandColumn);

	});
	if (ViewData["EditError"] != null)
	{
		grid.SetEditErrorText((string)ViewData["EditError"]);
	}
}
@grid.Bind(Model).GetHtml()

@functions {
    String GetUserName(int id)
    {
        var user = DataProviderUser.UserById(id);
        return user.username;
    }
}
