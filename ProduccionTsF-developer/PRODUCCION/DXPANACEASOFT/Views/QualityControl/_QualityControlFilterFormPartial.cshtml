
@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.QualityControl
@{
	string analisislot = DataProviderSetting.ValueSetting("ANALXLOT");
}

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formFilterQualityControl", name = "formFilterQualityControl" }))
{
	<table class="table table-condensed" style="border: 0px solid #ffffff; margin-bottom: 0px;">
		<tr>
			<td style="width: 30%">
				<table class="table table-condensed" style="border: 0px solid #ffffff;">
					<tr style="border-bottom: 1px Solid #C0C0C0;">
						<td colspan="2">
							<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Documento</span>
						</td>
					</tr>
					<tr>
						<td style="width: 10%;">
							@Html.DevExpress().LabelFor(m => m.QualityControlConfiguration.name, settings =>
							{
								settings.Name = "qualityControlConfigurationLabel";
								settings.Text = "Tipo de Control de Calidad:";
								settings.AssociatedControlName = "qualityControlConfiguration";
							}).GetHtml()
						</td>
						<td>
							@*@{
									int? id_documentType = (Model != null && Model.Document != null && Model.Document.id_documentType != 0) ? (int?)Model.Document.id_documentType : null;
								}*@
							@Html.DevExpress().ComboBoxFor(m => m.id_qualityControlConfiguration, settings =>
					   {
						   settings.Name = "id_qualityControlConfiguration";
						   settings.Properties.ClientInstanceName = "id_qualityControlConfiguration";
						   settings.Width = Unit.Percentage(100);
						   //settings.ClientEnabled = codeState != "01";//Pendiente
						   settings.Properties.ValueField = "id";
						   settings.Properties.TextField = "name";
						   settings.Properties.ValueType = typeof(int);
						   settings.Properties.Width = Unit.Percentage(100);
						   settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
						   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
						   settings.Properties.EnableSynchronization = DefaultBoolean.False;
						   settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
						   //settings.ReadOnly = codeState != "01";//Pendiente
						   //settings.ShowModelErrors = true;
						   settings.Properties.NullDisplayText = "Todos";
						   settings.Properties.NullText = "Todos";
						   //settings.Properties.ClientSideEvents.Validation = "OnDocumentTypeValidation";
						   //settings.Properties.ClientSideEvents.SelectedIndexChanged = "DocumentType_SelectedIndexChanged";

					   }).BindList(DataProviderQualityControl.QualityControlConfigurationsByCompany((int?)ViewData["id_company"])).Bind(null).GetHtml()
						</td>
					</tr>
					<tr>
						<td style="width: 10%">
							@Html.DevExpress().LabelFor(m => m.Document.id_documentState, settings =>
							{
								settings.Name = "documentStateLabel";
								settings.Text = "Estado:";
								settings.AssociatedControlName = "id_documentState";
							}).GetHtml()
						</td>
						@{
							var id_documentType = Model.Document.DocumentType == null ? (int?)null : Model.Document.DocumentType.id;
						}
						<td>
							@Html.DevExpress().ComboBox(settings =>
							{
								settings.Name = "id_documentState";
								settings.Properties.ClientInstanceName = "id_documentState";
								settings.Width = Unit.Percentage(100);
								settings.Properties.ValueField = "id";
								settings.Properties.TextField = "name";
								settings.Properties.ValueType = typeof(int);

								settings.Properties.NullDisplayText = "Todos";
								settings.Properties.NullText = "Todos";

								settings.Properties.Width = Unit.Percentage(100);
								settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
								settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
								settings.Properties.EnableSynchronization = DefaultBoolean.False;
								settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

							}).BindList(DataProviderDocumentState.DocumentStatesByDocumentType(null, (int?)ViewData["id_company"])).GetHtml()
						</td>
					</tr>
					<tr>
						<td>
							@Html.DevExpress().LabelFor(m => m.number, settings =>
							{
								settings.Name = "numberLabel";
								settings.Text = "Número:";
								settings.AssociatedControlName = "number";
							}).GetHtml()
						</td>
						<td>
							@Html.DevExpress().TextBoxFor(m => m.number, settings =>
							{
								settings.Name = "qualityControlNumber";
								settings.Properties.ClientInstanceName = "qualityControlNumber";
								settings.Width = Unit.Percentage(100);

								settings.Properties.NullDisplayText = "Todos";
								settings.Properties.NullText = "Todos";

							}).GetHtml()
						</td>
					</tr>
					<tr>
						<td>
							@Html.DevExpress().LabelFor(m => m.Document.reference, settings =>
							{
								settings.Name = "referenceLabel";
								settings.Text = "Referencia:";
								settings.AssociatedControlName = "reference";
							}).GetHtml()
						</td>
						<td>
							@Html.DevExpress().TextBoxFor(m => m.Document.reference, settings =>
							{
								settings.Name = "documentReference";
								settings.Properties.ClientInstanceName = "documentReference";
								settings.Width = Unit.Percentage(100);

								settings.Properties.NullDisplayText = "Todas";
								settings.Properties.NullText = "Todas";

							}).GetHtml()
						</td>
					</tr>
				</table>
			</td>
			<td style="width: 30%">
				<table class="table table-condensed" style="border: 0px solid #ffffff;">
					<tr style="border-bottom: 1px Solid #C0C0C0;">
						<td colspan="3">
							<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Fechas</span>
							@*<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Emisi&oacute;n y Autorizaci&oacute;n</span>*@
						</td>
					</tr>
					<tr>
						<td>
							@Html.DevExpress().LabelFor(m => m.Document.emissionDate, settings =>
							{
								settings.Name = "startEmissionDateLabel";
								settings.Text = "Emisión:";
								settings.AssociatedControlName = "startEmissionDate";
							}).GetHtml()
						</td>
						<td>
							@Html.DevExpress().DateEditFor(m => m.Document.emissionDate, settings =>
					   {
						   settings.Name = "startEmissionDate";
						   settings.Properties.ClientInstanceName = "startEmissionDate";
						   settings.Width = Unit.Percentage(100);

						   settings.Properties.NullDisplayText = "Desde";
						   settings.Properties.NullText = "Desde";

						   settings.Properties.DisplayFormatInEditMode = true;
						   settings.Properties.DisplayFormatString = "dd/MM/yyyy";
						   settings.Properties.EditFormat = EditFormat.Custom;
						   settings.Properties.EditFormatString = "dd/MM/yyyy";

						   settings.Properties.ClientSideEvents.Validation = "OnRangeEmissionDateValidation";

						   //settings.Properties.CalendarProperties.Columns = 2;
						   //settings.Properties.DateRangeSettings.MinDayCount = 1;
						   //settings.Properties.DateRangeSettings.MaxDayCount = 90;

					   }).GetHtml()
						</td>
						<td>
							@Html.DevExpress().DateEditFor(m => m.Document.emissionDate, settings =>
					   {
						   settings.Name = "endEmissionDate";
						   settings.Properties.ClientInstanceName = "endEmissionDate";
						   settings.Width = Unit.Percentage(100);

						   settings.Properties.NullDisplayText = "Hasta";
						   settings.Properties.NullText = "Hasta";

						   settings.Properties.DisplayFormatInEditMode = true;
						   settings.Properties.DisplayFormatString = "dd/MM/yyyy";
						   settings.Properties.EditFormat = EditFormat.Custom;
						   settings.Properties.EditFormatString = "dd/MM/yyyy";

						   settings.Properties.ClientSideEvents.Validation = "OnRangeEmissionDateValidation";

						   //settings.Properties.CalendarProperties.Columns = 2;
						   //settings.Properties.DateRangeSettings.StartDateEditID = "startEmissionDate";
						   //settings.Properties.DateRangeSettings.MinDayCount = 1;
						   //settings.Properties.DateRangeSettings.MaxDayCount = 90;

						   //settings.Properties.DropDownButton.Visible = false;

					   }).GetHtml()
						</td>
					</tr>
				</table>
			</td>
			<td style="width: 30%">
				<table class="table table-condensed" style="border: 0px solid #ffffff">
					<tr style="border-bottom: 1px Solid #C0C0C0;">
						<td colspan="2">
							<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Control de Calidad</span>
						</td>
					</tr>
					<tr>
						<td>
							@Html.DevExpress().LabelFor(m => m.id_analyst, settings =>
							{
								settings.Text = "Analista:";
								settings.AssociatedControlName = "id_analyst";
							}).GetHtml()
						</td>
						<td>
							@{
								List<string> rols = new List<string> { "Empleado", "Analista" };
							}
							@Html.DevExpress().ComboBox(settings =>
					   {
						   settings.Name = "id_analyst";
						   settings.Properties.ClientInstanceName = "id_analyst";
						   settings.Width = Unit.Percentage(100);

						   settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
						   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
						   settings.Properties.EnableSynchronization = DefaultBoolean.False;
						   settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

						   settings.Properties.NullDisplayText = "Todos";
						   settings.Properties.NullText = "Todos";

						   settings.Properties.ValueField = "id";
						   settings.Properties.TextField = "fullname_businessName";
						   settings.Properties.ValueType = typeof(int);
						   //settings.ReadOnly = codeState != "01";//Pendiente
						   //settings.ShowModelErrors = true;
						   //settings.Properties.ClientSideEvents.Validation = "OnPersonValidation";
					   }).BindList(DataProviderPerson.RolsByCompanyAndCurrent((int)ViewData["id_company"], null, rols)).GetHtml()
						</td>
					</tr>
					<tr>
						<td>
							@Html.DevExpress().LabelFor(m => m.isConforms, settings =>
							{
								settings.Text = "Conforme:";
								settings.AssociatedControlName = "isConforms";
							}).GetHtml()
						</td>
						<td>
							@{
								List<string> listConforms = new List<string> { "Conforme", "No Conforme" };
							}
							@Html.DevExpress().ComboBox(settings =>
					   {
						   settings.Name = "conforms";
						   settings.Properties.ClientInstanceName = "conforms";
						   settings.Width = Unit.Percentage(100);

						   settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
						   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
						   settings.Properties.EnableSynchronization = DefaultBoolean.False;
						   settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

						   settings.Properties.NullDisplayText = "Todos";
						   settings.Properties.NullText = "Todos";

						   //settings.Properties.ValueField = "name";
						   //settings.Properties.TextField = "name";
						   settings.Properties.ValueType = typeof(string);
						   //settings.ReadOnly = codeState != "01";//Pendiente
						   //settings.ShowModelErrors = true;
						   //settings.Properties.ClientSideEvents.Validation = "OnPersonValidation";
					   }).BindList(listConforms).GetHtml()
						</td>
						@*<td>
								@Html.DevExpress().LabelFor(m => m.isConforms, settings =>
								{
									settings.Name = "isConformsLabel";
									settings.Text = "Conforme:";
									settings.AssociatedControlName = "isConforms";
								}).GetHtml()
							</td>
							<td>
								@Html.DevExpress().CheckBox(settings =>
								{
									settings.Name = "isConforms";
									settings.Properties.ClientInstanceName = "isConforms";
									settings.Width = Unit.Percentage(100);
									settings.Checked = true;
									//settings.Properties.DropDownButton.Visible = false;
								}).GetHtml()
							</td>*@
					</tr>
				</table>
			</td>
			<td>
				<table class="table table-condensed" style="border: 0px solid #ffffff;">
					<tr style="border-bottom: 1px Solid #C0C0C0;">
						<td>
							<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Acciones</span>
						</td>
					</tr>
					<tr>
						<td>
							@Html.DevExpress().Button(settings =>
							{
								settings.Name = "btnSearch";
								settings.UseSubmitBehavior = false;
								settings.Text = "Buscar";
								settings.Images.Image.IconID = IconID.ActionsSearch16x16devav;
								settings.Width = Unit.Percentage(100);
								settings.ClientSideEvents.Click = "btnSearch_click";
							}).GetHtml()
						</td>
					</tr>
					<tr>
						<td>
							@Html.DevExpress().Button(settings =>
							{
								settings.Name = "Clear";
								settings.UseSubmitBehavior = false;
								settings.Text = "Limpiar";
								settings.Images.Image.IconID = IconID.ActionsClear16x16;
								settings.Width = Unit.Percentage(100);
								settings.ClientSideEvents.Click = "btnClear_click";
							}).GetHtml()
						</td>
					</tr>
					<tr>
						<td>
							<div class="btn-group" style="width: 100%;">
								<button type="button" class="btn-default dropdown-toggle custom-button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
									<img class="dxIcon_actions_add_16x16 dx-vam" src="/DXR.axd?r=1_35-2Z17d" alt="" style="margin-right: 4px;" id="AddNewImg"><span>Nueva</span><span class="caret"></span>
								</button>
								<ul class="dropdown-menu dropdown-menu-right">
									<li><a href="javascript:;" onclick="AddNewQualityControl();">Manual</a></li>
									@if (analisislot == "SI")
									{
										<li><a href="javascript:;" onclick="AddNewQualityControlFromRMP();">Por lote</a></li>
									}
									else if (analisislot == "NO")
									{
										<li><a href="javascript:;" onclick="AddNewQualityControlFromRMP();">Por Guía - Lote</a></li>
									}
									else if (analisislot == "SELGUIA")
									{
										<li><a href="javascript:;" onclick="AddNewQualityControlFromRMP();">Por Varias Gu&iacute;as</a></li>
									}

								</ul>
							</div>
						</td>
					</tr>
				</table>
			</td>

			@*<td>
					<table class="table table-condensed" style="border: 0px solid #ffffff;">
						<tr style="border-bottom: 1px Solid #C0C0C0;">
							<td>
								<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Acciones</span>
							</td>
						</tr>
						<tr>
							<td>
								@Html.DevExpress().Button(settings =>
								{
									settings.Name = "btnSearch";
									settings.UseSubmitBehavior = false;
									settings.Text = "Buscar";
									settings.Images.Image.IconID = IconID.ActionsSearch16x16devav;
									settings.Width = Unit.Percentage(100);
									settings.ClientSideEvents.Click = "btnSearch_click";
								}).GetHtml()
							</td>
						</tr>
						<tr>
							<td>
								@Html.DevExpress().Button(settings =>
								{
									settings.Name = "Clear";
									settings.UseSubmitBehavior = false;
									settings.Text = "Limpiar";
									settings.Images.Image.IconID = IconID.ActionsClear16x16;
									settings.Width = Unit.Percentage(100);
									settings.ClientSideEvents.Click = "btnClear_click";
								}).GetHtml()
							</td>
						</tr>
						<tr>
							<td>
								@Html.DevExpress().Button(settings =>
								{
									settings.Name = "btnNewQualityControl";
									settings.UseSubmitBehavior = false;
									settings.Text = "Nueva";
									settings.Images.Image.IconID = IconID.ActionsAdd16x16office2013;
									settings.Width = Unit.Percentage(100);
									settings.ClientSideEvents.Click = "AddNewQualityControl";
								}).GetHtml()
							</td>

							<td>
								<div class="btn-group" style="width: 100%;">
									<button type="button" class="btn-default dropdown-toggle custom-button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
										<img class="dxIcon_actions_add_16x16 dx-vam" src="/DXR.axd?r=1_35-2Z17d" alt="" style="margin-right: 4px;" id="AddNewImg"><span>Nueva</span><span class="caret"></span>
									</button>
									<ul class="dropdown-menu dropdown-menu-right">
										<li><a href="javascript:;" onclick="AddNewQualityControl();">Nueva</a></li>
										<li><a href="javascript:;" onclick="AddNewQualityControlFromRMP();">Desde Recepción MP</a></li>
									</ul>
								</div>
							</td>
						</tr>
					</table>
				</td>*@
		</tr>
	</table>
}
