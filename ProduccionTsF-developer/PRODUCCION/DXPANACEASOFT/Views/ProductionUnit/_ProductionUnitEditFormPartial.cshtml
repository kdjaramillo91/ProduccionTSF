
@model  DXPANACEASOFT.Models.ProductionUnit
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

<table class="table table-condensed">

    <tr>
        <td style="width: 8%;">
            @Html.DevExpress().LabelFor(m => m.id_branchOffice, settings =>
            {
                settings.Text = "Sucursal:*";
                settings.AssociatedControlName = "id_branchOffice";
            }).GetHtml()
        </td>
        <td>
            @{
                int? id_branchOffice = (Model != null && Model.id_branchOffice != 0) ? (int?)Model.id_branchOffice : null;
                int idCompany = (ViewBag.idCompany != null) ? ViewBag.idCompany : 0;
            }
            @Html.DevExpress().ComboBoxFor(m => m.id_branchOffice, settings =>
            {
                settings.Properties.ClientInstanceName = "id_branchOffice";

                settings.Properties.ValueField = "id";
                settings.Properties.TextField = "name";
                settings.Properties.ValueType = typeof(int);
                settings.Width = Unit.Percentage(100);
                settings.Properties.NullText = "Seleccione sucursal";
                settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                settings.ShowModelErrors = true;
                settings.Properties.ClientSideEvents.Validation = "OnProductionUnitValidation";
            }).BindList(DataProviderBranchOffice.BranchOffices(idCompany)).Bind(id_branchOffice).GetHtml()
        </td>
        <td style="width: 8%;">
            @Html.DevExpress().LabelFor(m => m.name, settings =>
            {
                settings.Text = "Nombre:*";
                settings.AssociatedControlName = "name";

            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.name, settings =>
            {
                settings.Properties.ClientInstanceName = "name";
                settings.Properties.ClientInstanceName = "ProductionUnitName";
                settings.Width = Unit.Percentage(100);
                settings.Properties.NullText = "Nombre";
                settings.ShowModelErrors = true;
                settings.Properties.ClientSideEvents.Validation = "OnProductionUnitNameValidation";

            }).GetHtml()
        </td>
        <td style="width: 8%;">
            @Html.DevExpress().LabelFor(m => m.code, settings =>
            {
                settings.Text = "Código:*";
                settings.AssociatedControlName = "code";

            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.code, settings =>
            {
                settings.Properties.ClientInstanceName = "code";
                settings.Properties.ClientInstanceName = "code";
                settings.Width = Unit.Percentage(100);
                settings.Properties.NullText = "Código";
                settings.ShowModelErrors = true;
                settings.Properties.ClientSideEvents.Validation = "OnProductionUnitCodeValidation";
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().LabelFor(m => m.description, settings =>
            {
                settings.Text = "Descripción:";
                settings.AssociatedControlName = "description";

            }).GetHtml()
        </td>
        <td colspan="7">
            @Html.DevExpress().MemoFor(m => m.description, settings =>
            {
                settings.Properties.ClientInstanceName = "description";
                settings.Width = Unit.Percentage(100);
                settings.Properties.NullText = "";
                settings.ShowModelErrors = true;

            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().LabelFor(m => m.isActive, settings =>
            {
                settings.Text = "¿Activo?:";
                settings.AssociatedControlName = "isActive";

            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().CheckBoxFor(m => m.isActive, settings =>
            {
                settings.Properties.ClientInstanceName = "isActive";
                settings.Width = Unit.Percentage(100);

            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td colspan="6" style="text-align: right;">
            @Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnUpdate";
                settings.Text = "Actualizar";
                settings.RenderMode = ButtonRenderMode.Button;
                settings.ImagePosition = ImagePosition.Left;
                settings.Images.Image.IconID = IconID.ActionsSave16x16devav;
                settings.UseSubmitBehavior = false;
                settings.ClientSideEvents.Click = "ButtonUpdate_Click";
            }).GetHtml()
            @Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnCancel";
                settings.Text = "Cancelar";
                settings.RenderMode = ButtonRenderMode.Button;
                settings.ImagePosition = ImagePosition.Left;
                settings.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                settings.UseSubmitBehavior = false;
                settings.ClientSideEvents.Click = "ButtonCancel_Click";
            }).GetHtml()
        </td>
    </tr>
    <tr id="productionUnit_AlertRow" style="display: none;">
        <td colspan="6">
            <div class="alert alert-danger fade in" style="margin-top: 18px;">
                <button type="button" class="close" data-dismiss="alert" aria-label="close" title="close" style="top: 0px; right: 0px;"><span aria-hidden="true">&times;</span></button>
                <span id="productionUnit_ErrorMessage"></span>
            </div>
        </td>
    </tr>
</table>

<script src="~/Scripts/productionunit/editform.js"></script>
