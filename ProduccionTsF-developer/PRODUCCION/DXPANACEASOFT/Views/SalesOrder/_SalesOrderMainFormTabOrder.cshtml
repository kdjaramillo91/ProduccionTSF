
@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.SalesOrder

@{
    //var code_purchaseReason = (Model != null && Model.PurchaseReason != null && Model.PurchaseReason.id != 0) ? Model.PurchaseReason.code : "";
    string codeState = (Model != null && Model.Document.DocumentState.code != "") ? Model.Document.DocumentState.code : "";
    bool fromSalesRequest = Model.SalesOrderDetail.FirstOrDefault(fod => fod.SalesOrderDetailSalesRequest != null && fod.SalesOrderDetailSalesRequest.Count() > 0) != null;
}
    
<table id="tableTabOrder" class="table table-condensed" style="margin: 0px;">
    <tr>
        <td style="width: 10%;">
            @Html.DevExpress().LabelFor(m => m.id_customer, settings =>
            {
                settings.Name = "id_customerLabel";
                settings.Text = "Cliente:";
                settings.AssociatedControlName = "id_customer";
            }).GetHtml()
        </td>
        <td style="width: 25%;">
            @{
                int? id_customer = (Model != null && Model.id_customer != 0) ? (int?)Model.id_customer : null;
            }
            @Html.DevExpress().ComboBoxFor(m => m.id_customer, settings =>
       {
           settings.Name = "id_customer";
           settings.Properties.ClientInstanceName = "id_customer";
           settings.Width = Unit.Percentage(100);
           settings.Properties.CallbackPageSize = 15;

           settings.Properties.ValueField = "id";
           settings.Properties.TextField = "fullname_businessName";
           settings.Properties.ValueType = typeof(int);
           //settings.Properties.Width = Unit.Percentage(100);

           settings.ReadOnly = codeState != "01" || fromSalesRequest;
           settings.ShowModelErrors = true;
           settings.Properties.ClientSideEvents.SelectedIndexChanged = "SalesOrderCustomer_SelectedIndexChanged";
           settings.Properties.ClientSideEvents.Validation = "OnCustomerValidation";

       }).BindList(DataProviderPerson.Customers()).Bind(id_customer).GetHtml()
        </td>
        <td style="width: 10%;">
            @Html.DevExpress().LabelFor(m => m.id_priceList, settings =>
            {
                settings.Name = "id_priceListLabel";
                settings.Text = "Lista de Precio/Cotización:";
                settings.AssociatedControlName = "id_priceList";
            }).GetHtml()
        </td>
        <td>
            @{
                int? id_priceList = (Model != null && Model.id_priceList != 0) ? (int?)Model.id_priceList : null;
            }
            @Html.DevExpress().ComboBoxFor(m => m.id_priceList, settings =>
       {
           settings.Name = "id_priceList";
           settings.Properties.ClientInstanceName = "id_priceList";
           settings.Width = Unit.Percentage(100);

           settings.CallbackRouteValues = new { Controller = "SalesOrder", Action = "GetPriceList" };
           settings.Properties.CallbackPageSize = 15;

           settings.Properties.ValueField = "id";
           settings.Properties.TextField = "name";
           settings.Properties.ValueType = typeof(int);
           //settings.Properties.Width = Unit.Percentage(100);
           settings.ReadOnly = codeState != "01" || fromSalesRequest;
           settings.ShowModelErrors = true;
           settings.Properties.ClientSideEvents.BeginCallback = "OnPriceListBeginCallback";
           settings.Properties.ClientSideEvents.Validation = "OnPriceListValidation";
           settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnPriceList_SelectedIndexChanged";

       }).BindList(DataProviderPriceList.SaleApprovedPriceLists((int?)ViewData["id_company"], id_priceList, id_customer)).Bind(id_priceList).GetHtml()
        </td>
        <td style="width: 10%;">
            @Html.DevExpress().LabelFor(m => m.id_employeeSeller, settings =>
            {
                settings.Name = "id_employeeSellerLabel";
                settings.Text = "Vendedor:";
                settings.AssociatedControlName = "id_employeeSeller";
            }).GetHtml()
        </td>
        <td>
            @{
                int? id_employeeSeller = (Model != null && Model.id_employeeSeller != 0) ? (int?)Model.id_employeeSeller : null;
            }
            @Html.DevExpress().ComboBoxFor(m => m.id_employeeSeller, settings =>
       {
           settings.Name = "id_employeeSeller";
           settings.Properties.ClientInstanceName = "id_employeeSeller";
           settings.Properties.ValueField = "id";
           settings.Properties.TextField = "fullname_businessName";
           settings.Properties.ValueType = typeof(int);
           settings.Width = Unit.Percentage(100);
           settings.ReadOnly = codeState != "01";
           settings.ShowModelErrors = true;
           settings.Properties.ClientSideEvents.Validation = "OnEmployeeSellerValidation";
       }).BindList(DataProviderPerson.RolsByCompanyAndCurrent((int?)ViewData["id_company"],id_employeeSeller, "Vendedor")).Bind(id_employeeSeller).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().LabelFor(m => m.requiredLogistic, settings =>
            {
                settings.Name = "requiredLogisticLabel";
                settings.Text = "Requiere Logística:";
                settings.AssociatedControlName = "requiredLogistic";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().CheckBoxFor(m => m.requiredLogistic, settings =>
            {
                settings.Name = "requiredLogistic";
                settings.Properties.ClientInstanceName = "requiredLogistic";
                settings.ShowModelErrors = true;
                settings.ReadOnly = codeState != "01";
                settings.Properties.ClientSideEvents.Validation = "OnLogisticValidation";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().LabelFor(m => m.Document.reference, settings =>
            {
                settings.Name = "referenceLabel";
                settings.Text = "Referencia:";
                settings.AssociatedControlName = "reference";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.Document.reference, settings =>
       {
           settings.Name = "reference";
           settings.Properties.ClientInstanceName = "reference";
           settings.Width = Unit.Percentage(100);
           settings.ReadOnly = codeState != "01";
           settings.ShowModelErrors = true;
           settings.Properties.ClientSideEvents.Validation = "OnValidation";
       }).GetHtml()
        </td>
        <td colspan="2">
            &nbsp;
        </td>
    </tr>
</table>
