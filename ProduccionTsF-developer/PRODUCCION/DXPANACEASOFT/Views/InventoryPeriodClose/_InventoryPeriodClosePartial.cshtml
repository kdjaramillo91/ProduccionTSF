@using System.Drawing
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@{
    var grid = Html.DevExpress().GridView<InventoryPeriod>(settings =>
    {
        settings.Name = "gvInventoryPeriod";
        settings.CallbackRouteValues = new { Controller = "InventoryPeriodClose", Action = "InventoryPeriodClosePartial" };

        settings.Width = Unit.Percentage(100);

        settings.SettingsSearchPanel.Visible = true;
        settings.Styles.SearchPanel.CssClass = "searchPanel";

        settings.CommandColumn.Visible = true;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.ShowSelectCheckbox = true;
        settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.Page;
        settings.CommandColumn.Width = Unit.Percentage(3);

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.Settings.ShowFooter = true;
        settings.Settings.ShowFilterRowMenu = true;

        settings.Settings.ShowTitlePanel = true;
        settings.Styles.TitlePanel.CssClass = "titleContainer";

        settings.Settings.ShowFooter = true;

        settings.ClientSideEvents.Init = "OnGridViewInit";
        settings.ClientSideEvents.SelectionChanged = "OnGridViewSelectionChanged";
        settings.ClientSideEvents.EndCallback = "OnGridViewEndCallback";

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.SetTitlePanelTemplateContent(c =>
        {
            ViewContext.Writer.Write(@"<span id=""lblTitle"">Listado de Periodo</span>");
        });

        settings.SetFooterRowTemplateContent(c =>
        {
            ViewContext.Writer.Write(@"<span id=""lblInfo""></span>");
            if (settings.CommandColumn.SelectAllCheckboxMode != GridViewSelectAllCheckBoxMode.AllPages)
            {
                ViewContext.Writer.Write(
                    @"<a id=""lnkSelectAllRows"" style=""cursor: pointer;"" onclick=""gvResultsSelectAllRows()"">Seleccionar Todos</a>
                      <a id=""lnkClearSelection"" style=""cursor: pointer;"" onclick=""gvResultsClearSelection()"">Anular Selección</a>"
                );
            }
        });

        //MASTER DETAILS
        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;
        settings.SettingsDetail.ShowDetailRow = false;



        settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
        settings.Styles.Header.Font.Bold = true;

        //Document

        settings.Columns.Add(m => m.id, column =>
        {
            column.Caption = "Número";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = Unit.Percentage(5);

        });

        settings.Columns.Add(m => m.year, column =>
        {
            column.Caption = "Año";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = Unit.Percentage(10);
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "id_warehouse";
            
            column.Caption = "Bodega";
            column.Visible = true;
            //column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = Unit.Percentage(30);
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var ColProp = column.PropertiesEdit as ComboBoxProperties;
            ColProp.DataSource = DataProviderWarehouse.WarehouseByCompany((int?)ViewData["id_company"]);
            ColProp.ValueField = "id";
            ColProp.TextField = "name";
            ColProp.ValueType = typeof(int);

            column.SetDataItemTemplateContent(c =>
            {
                int? id_warehouse = (int?)DataBinder.Eval(c.DataItem, "id_warehouse");
                var warehouse = DataProviderWarehouse.WarehouseById(id_warehouse);
                string text = "";
                if (warehouse != null)
                {
                    text = warehouse.name;


                }


                ViewContext.Writer.Write(text);
            });




        });

        settings.Columns.Add(column =>
        {
            //column.FieldName = "id_PeriodType";
            column.Caption = "Tipo de Periodo";
            column.Visible = true;
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = Unit.Percentage(30);

            column.SetDataItemTemplateContent(c =>
            {
                int? id_PeriodType = (int?)DataBinder.Eval(c.DataItem, "id_PeriodType");
                var advance = DataProviderAdvanceParameters.AdvanceParametersDetailByid(id_PeriodType);
                string text = "";
                if (advance !=null)
                {
                    text = advance.description;


                }


                ViewContext.Writer.Write(text);
            });

            //column.EditorProperties().ComboBox(p =>
            //{

            //    p.DataSource = DataProviderAdvanceParameters.AdvanceParametersByCode("TPGV1");
            //    p.TextField = "name";
            //    p.ValueField = "id";
            //    p.ValueType = typeof(int);



            //});


        });





        settings.Columns.Add(m => m.isActive, column =>
        {
            column.Caption = "Activo";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            column.Width = Unit.Percentage(5);
        });



        // COMMAND COLUMN

        MVCxGridViewCommandColumn commandColumn = new MVCxGridViewCommandColumn();
        commandColumn.ShowEditButton = false;
        commandColumn.ShowDeleteButton = false;
        commandColumn.Visible = true;
        commandColumn.VisibleIndex = 14;
        commandColumn.Caption = "Acciones";
        commandColumn.Width = Unit.Percentage(3);

        commandColumn.CustomButtons.Add(
            new GridViewCommandColumnCustomButton
            {
                ID = "btnEditRow",
                Text = "Editar"
            }
        );
        settings.ClientSideEvents.CustomButtonClick = "GridViewlgvInventoryPeriodCustomCommandButton_Click";
        settings.Columns.Add(commandColumn);
    });


    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()

@functions {
    String GetUserName(int id)
    {
        var user = DataProviderUser.UserById(id);
        return user.username;
    }
}
