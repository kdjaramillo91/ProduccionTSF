@using System.Drawing
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@model List<DXPANACEASOFT.Models.BusinessOportunityPhase>

@{
    var grid = Html.DevExpress().GridView<BusinessOportunityPhase>(settings => {
        settings.Name = "gvBusinessOportunityPhases" + ViewData["id_businessOportunity"];


        settings.CallbackRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityViewPhasesPartial" };

        settings.ClientSideEvents.BeginCallback = "BusinessOportunity_OnBeginCallback";

        settings.CommandColumn.Visible = true;

        settings.Width = Unit.Percentage(100);

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Settings.ShowTitlePanel = true;
        settings.Styles.TitlePanel.CssClass = "titleContainer";

        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
        settings.SettingsDetail.ShowDetailRow = true;
        settings.SetDetailRowTemplateContent(c =>
        {
            //int id_item = (int)DataBinder.Eval(c.DataItem, "id");
            BusinessOportunityPhase detail = (BusinessOportunityPhase)Model[c.ItemIndex];

            //Item detail = DataProviderItem.Item(id_item);
            if (detail != null)
            {
                //Html.RenderAction("_BusinessOportunityPhasesDetailPartial", new { item = detail });
                Html.RenderPartial("_BusinessOportunityPhasesDetailPartial", detail);
            }
        });
        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView gv = s as MVCxGridView;
            if (gv == null)
            {
                e.Properties["cpIdBusinessOportunity"] = 0;
            }
            e.Properties["cpIdBusinessOportunity"] = ViewData["id_businessOportunity"];
        };

        settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
        settings.Styles.Header.Font.Bold = true;

        //settings.CustomJSProperties = (s, e) =>
        //{
        //    MVCxGridView gv = s as MVCxGridView;
        //    if (gv == null) return;

        //    //e.Properties["cpVisibleRowCount"] = gv.VisibleRowCount;
        //    //e.Properties["cpFilteredRowCountWithoutPage"] = GetFilteredRowCountWithoutPage(gv);

        //    //e.Properties["cpEditingRowIDPhaseDetail"] = (gv.IsEditing && gv.GetRowValues(gv.EditingRowVisibleIndex, "id") != null) ? gv.GetRowValues(gv.EditingRowVisibleIndex, "id") : (new List<PurchaseOrderDetailPurchaseRequest>());
        //    e.Properties["cpEditingRowIDPhaseDetail"] = gv.GetRowValues(gv.EditingRowVisibleIndex, "id");

        //    //List<PurchaseOrderDetail> rows = (Model as List<PurchaseOrderDetail>);
        //    //rows = (rows != null) ? rows.Where(d => d.isActive).ToList() : new List<PurchaseOrderDetail>();

        //    //e.Properties["cpRowsCount"] = rows.Count;
        //};

        settings.Columns.Add(column =>
        {
            column.FieldName = "startDatePhase";
            column.Name = "startDatePhase";
            column.Width = Unit.Percentage(10);
            column.Caption = "Fecha de Inicio";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "endDatePhase";
            column.Name = "endDatePhase";
            column.Width = Unit.Percentage(10);
            column.Caption = "Fecha de Fin";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "id_employee";
            column.Name = "executive";
            column.Caption = "Ejecutivo";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = Unit.Percentage(10);

            column.SetDataItemTemplateContent(c =>
            {
                var id_employee = (int?)DataBinder.Eval(c.DataItem, "id_employee");
                var employee = DataProviderPerson.Person(id_employee);
                //BusinessOportunityPlanningDetail detail = (BusinessOportunityPlanningDetail)Model[c.ItemIndex];
                string text = (employee != null ? employee.fullname_businessName : "");
                ViewContext.Writer.Write(text);

            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "phaseName";
            column.Name = "phaseName";
            column.Caption = "Etapa";
            column.Width = Unit.Percentage(10);
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "advance";
            column.Name = "advance";
            column.Caption = "% de Avance";
            column.Width = Unit.Percentage(5);
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                var advance = (decimal)DataBinder.Eval(c.DataItem, "advance");
                advance /= 100;
                //BusinessOportunityPlanningDetail detail = (BusinessOportunityPlanningDetail)Model[c.ItemIndex];
                string text = advance.ToString("0.00%");
                ViewContext.Writer.Write(text);

            });
        });

        settings.Columns.Add(column =>
        {
            column.Name = "potentialAmount";
            column.Caption = "Monto Potencial";
            column.Width = Unit.Percentage(5);
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                //var id = (int)DataBinder.Eval(c.DataItem, "id_item");
                BusinessOportunityPhase detail = (BusinessOportunityPhase)Model[c.ItemIndex];

                decimal potentialAmount = (detail != null && detail.BusinessOportunity != null && detail.BusinessOportunity.BusinessOportunityPlaninng != null) ? detail.BusinessOportunity.BusinessOportunityPlaninng.amount : 0;

                //15: Oportunidad de Venta y 16: Oportunidad de Compra
                string text = potentialAmount.ToString("C2");
                ViewContext.Writer.Write(text);

            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "weightedAmount";
            column.Name = "weightedAmount";
            column.Caption = "Monto Ponderado";
            column.Width = Unit.Percentage(5);
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                var weightedAmount = (decimal)DataBinder.Eval(c.DataItem, "weightedAmount");
                //BusinessOportunityPlanningDetail detail = (BusinessOportunityPlanningDetail)Model[c.ItemIndex];
                string text = weightedAmount.ToString("C2");
                ViewContext.Writer.Write(text);

            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "referencePhase";
            column.Name = "referencePhase";
            column.Caption = "Referencia";
            column.Width = Unit.Percentage(10);
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                var referencePhase = (string)DataBinder.Eval(c.DataItem, "referencePhase");
                ViewContext.Writer.Write(referencePhase);

            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "descriptionPhase";
            column.Name = "descriptionPhase";
            column.Caption = "Descripción";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                var descriptionPhase = (string)DataBinder.Eval(c.DataItem, "descriptionPhase");
                ViewContext.Writer.Write(descriptionPhase);

            });
        });

    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()