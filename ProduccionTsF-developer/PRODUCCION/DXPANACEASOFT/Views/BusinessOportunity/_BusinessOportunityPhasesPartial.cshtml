@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@model List<DXPANACEASOFT.Models.BusinessOportunityPhase>

@{
    var grid = Html.DevExpress().GridView<BusinessOportunityPhase>(settings => {
        settings.Name = "gvBusinessOportunityPhases";


        settings.CallbackRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhasesPartial" };
        
        settings.ClientSideEvents.EndCallback = "BusinessOportunityPhase_OnEndCallback";

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhasesPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhasesPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhasesPartialDelete" };

        settings.SettingsEditing.Mode = GridViewEditingMode.EditForm;

        settings.SettingsText.PopupEditFormCaption = "Editar Fase";
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsPopup.EditForm.Modal = true;
        settings.SettingsPopup.EditForm.Width = 640;
        settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;

        settings.CommandColumn.Visible = true;

        settings.Width = Unit.Percentage(100);

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Settings.ShowTitlePanel = true;
        settings.Styles.TitlePanel.CssClass = "titleContainer";

        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
        settings.SettingsDetail.ShowDetailRow = true;
        settings.SetDetailRowTemplateContent(c =>
        {
            BusinessOportunityPhase detail = (BusinessOportunityPhase)Model[c.ItemIndex];
            
            if (detail != null)
            {
                
                Html.RenderPartial("_BusinessOportunityPhasesDetailPartial", detail);
            }
        });

        settings.Styles.Header.Font.Bold = true;

        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView gv = s as MVCxGridView;
            if (gv == null) return;

            e.Properties["cpEditingRowIDPhaseDetail"] = gv.GetRowValues(gv.EditingRowVisibleIndex, "id");

            List<BusinessOportunityPhase> rows = (Model as List<BusinessOportunityPhase>);
            rows = (rows != null) ? rows.ToList() : new List<BusinessOportunityPhase>();

            e.Properties["cpRowsCount"] = rows.Count;
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "startDatePhase";
            column.Name = "startDatePhase";
            column.Width = Unit.Percentage(10);
            column.Caption = "Fecha de Inicio";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "endDatePhase";
            column.Name = "endDatePhase";
            column.Width = Unit.Percentage(10);
            column.Caption = "Fecha de Fin";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "id_employee";
            column.Name = "executive";
            column.Caption = "Ejecutivo";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = Unit.Percentage(10);

            column.SetDataItemTemplateContent(c =>
            {
                var id_employee = (int?)DataBinder.Eval(c.DataItem, "id_employee");
                var employee = DataProviderPerson.Person(id_employee);
                string text = (employee != null ? employee.fullname_businessName : "");
                ViewContext.Writer.Write(text);

            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "phaseName";
            column.Name = "phaseName";
            column.Caption = "Etapa";
            column.Width = Unit.Percentage(10);
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "advance";
            column.Name = "advance";
            column.Caption = "% de Avance";
            column.Width = Unit.Percentage(5);
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                var advance = (decimal)DataBinder.Eval(c.DataItem, "advance");
                advance /= 100;
                string text = advance.ToString("0.00%");
                ViewContext.Writer.Write(text);

            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "weightedAmount";
            column.Name = "weightedAmount";
            column.Caption = "Monto Ponderado";
            column.Width = Unit.Percentage(5);
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;

            column.SetDataItemTemplateContent(c =>
            {
                var weightedAmount = (decimal)DataBinder.Eval(c.DataItem, "weightedAmount");
                string text = weightedAmount.ToString("C2");
                ViewContext.Writer.Write(text);

            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "referencePhase";
            column.Name = "referencePhase";
            column.Caption = "Referencia";
            column.Width = Unit.Percentage(10);
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                var referencePhase = (string)DataBinder.Eval(c.DataItem, "referencePhase");
                ViewContext.Writer.Write(referencePhase);

            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "descriptionPhase";
            column.Name = "descriptionPhase";
            column.Caption = "Descripción";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                var descriptionPhase = (string)DataBinder.Eval(c.DataItem, "descriptionPhase");
                ViewContext.Writer.Write(descriptionPhase);

            });
        });

        MVCxGridViewCommandColumn commandColumn = new MVCxGridViewCommandColumn
        {
            ShowEditButton = true,
            ShowDeleteButton = true,
            Visible = true,
            VisibleIndex = 10,
            Caption = "Acciones",
            Width = Unit.Percentage(5)
        };

        settings.Columns.Add(commandColumn);

        #region EditorLayout

        settings.SetEditFormTemplateContent(c =>
        {
            BusinessOportunityPhase detail = new BusinessOportunityPhase();
            if (c.ItemIndex >= 0)
            {
                detail = Model[c.ItemIndex];
            }
            Html.RenderPartial("_BusinessOportunityPhasesEditPartial", detail);
        });

        #endregion
    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()