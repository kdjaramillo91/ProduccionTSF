@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@model List<DXPANACEASOFT.Models.BusinessOportunityCompetition>

@{
    var grid = Html.DevExpress().GridView<BusinessOportunityCompetition>(settings =>
    {
        settings.Name = "gvBusinessOportunityCompetitions";


        settings.CallbackRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityCompetitionsPartial" };

        //settings.ClientSideEvents.BeginCallback = "BusinessOportunityPhase_OnBeginCallback";

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityCompetitionsPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityCompetitionsPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityCompetitionsPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.VisibleIndex = 4;
        settings.CommandColumn.Caption = "Acciones";
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.Width = Unit.Percentage(100);

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.CommandColumn.Width = Unit.Percentage(8);

        settings.Styles.Header.Font.Bold = true;

        settings.Columns.Add(column =>
        {
            column.FieldName = "id_competitor";
            column.Caption = "Competidor";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;

            column.SetDataItemTemplateContent(c =>
            {
                var id = (int?)DataBinder.Eval(c.DataItem, "id_competitor");
                //BusinessOportunityPartner detail = (BusinessOportunityPartner)Model[c.ItemIndex];
                var detail = DataProviderPerson.Person(id);
                string person = (detail != null) ? detail.fullname_businessName : "";
                //string codeBusinessOportunityDocumentType = (detail != null && detail.BusinessOportunityPlaninng != null && detail.BusinessOportunityPlaninng.BusinessOportunity != null && detail.BusinessOportunityPlaninng.BusinessOportunity.Document != null && detail.BusinessOportunityPlaninng.BusinessOportunity.Document.DocumentType != null) ? detail.BusinessOportunityPlaninng.BusinessOportunity.Document.DocumentType.code : "";

                //15: Oportunidad de Venta y 16: Oportunidad de Compra
                ViewContext.Writer.Write(person);

            });

            column.EditorProperties().ComboBox(p =>
            {
                p.ClientInstanceName = "id_competitor";
                p.DataSource = DataProviderPerson.Persons((int)ViewData["id_company"]);

                p.ValueField = "id";
                p.TextField = "fullname_businessName";
                p.ValueType = typeof(int);

                p.CallbackPageSize = 15;
                p.DropDownStyle = DropDownStyle.DropDownList;
                p.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                p.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                //p.Columns.Add("masterCode", "Código", Unit.Percentage(50));
                //p.Columns.Add("name", "Nombre del Producto", Unit.Percentage(70));
                //p.Columns.Add("barCode", "EAN", Unit.Percentage(50));

                //p.Columns.Add("ItemPurchaseInformation.MetricUnit.code", "UM", Unit.Percentage(20));

                p.ClientSideEvents.Init = "CompetitorCombo_OnInit";
                //p.ClientSideEvents.DropDown = "ItemCombo_DropDown";
                //p.ClientSideEvents.SelectedIndexChanged = "ItemCombo_SelectedIndexChanged";
                p.ClientSideEvents.Validation = "OnPersonValidation";
                p.CallbackRouteValues = new { Controller = "BusinessOportunity", Action = "GetCompetitor"/*, TextField = "CityName"*/ };
                p.ClientSideEvents.BeginCallback = "BusinessOportunityCompetitor_BeginCallback";
                p.ClientSideEvents.EndCallback = "BusinessOportunityCompetitor_EndCallback";
                //p.ClientSideEvents.ValueChanged = "ItemsCombo_ValueChanged";}
            });
        });

        //settings.Columns.Add(m => m.id_competitor, column =>
        //{
        //    column.Caption = "Competidor";
        //    column.ColumnType = MVCxGridViewColumnType.DateEdit;

        //    column.EditorProperties().ComboBox(comboBox =>
        //    {
        //        comboBox.ClientInstanceName = "id_competitor";
        //        comboBox.Width = Unit.Percentage(100);

        //        comboBox.DataSource = DataProviderPerson.Persons((int)ViewData["id_company"]);

        //        comboBox.ValueField = "id";
        //        comboBox.TextField = "fullname_businessName";
        //        comboBox.ValueType = typeof(int);
        //    });
        //});

        settings.Columns.Add(column =>
        {
            column.FieldName = "referenceCompetition";
            column.Caption = "Referencia";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                string referenceCompetition = (string)DataBinder.Eval(c.DataItem, "referenceCompetition");

                ViewContext.Writer.Write(referenceCompetition);
            });

            column.EditorProperties().TextBox(p =>
            {
                p.ClientInstanceName = "referenceCompetition";

                //p.ClientSideEvents.Validation = "OnReferenciaValidation";
                p.Width = Unit.Percentage(100);
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "descriptionCompetition";
            column.Caption = "Descripción";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                string descriptionCompetition = (string)DataBinder.Eval(c.DataItem, "descriptionCompetition");

                ViewContext.Writer.Write(descriptionCompetition);
            });

            column.EditorProperties().TextBox(p =>
            {
                p.ClientInstanceName = "descriptionCompetition";

                p.Width = Unit.Percentage(100);
            });

        });
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()