@using DXPANACEASOFT.Models

@model List<DXPANACEASOFT.Models.BusinessOportunityPhaseAttachment>

@{
    var grid = Html.DevExpress().GridView<BusinessOportunityPhaseAttachment>(settings =>
    {
        settings.Name = "gvBusinessOportunityPhaseAttachments";


        settings.CallbackRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhaseAttachmentsPartial" };

        settings.ClientSideEvents.BeginCallback = "BusinessOportunityPhase_OnBeginCallback";


        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhaseAttachmentsPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhaseAttachmentsPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhaseAttachmentsPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;

        settings.Width = Unit.Percentage(100);

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.CommandColumn.Width = Unit.Percentage(8);

        settings.Styles.Header.Font.Bold = true;

        settings.Columns.Add(column =>
        {
            column.FieldName = "attachmentPhase";
            column.Caption = "Documento Adjunto";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                string attachmentPhase = (string)DataBinder.Eval(c.DataItem, "attachmentPhase");
                int id = (int)DataBinder.Eval(c.DataItem, "id");
                int id_businessOportunityPhase = (int)DataBinder.Eval(c.DataItem, "id_businessOportunityPhase");
                ViewContext.Writer.Write(Html.ActionLink(attachmentPhase, "download-attachmentPhase", new { id_businessOportunityPhase = id_businessOportunityPhase, id = id }));
            });

            column.SetEditItemTemplateContent(c =>
            {
                BusinessOportunityPhaseAttachment businessOportunityPhaseAttachment = c.ItemIndex >= 0 ? (BusinessOportunityPhaseAttachment)Model[c.ItemIndex]
                                                                                         : new BusinessOportunityPhaseAttachment();
                Html.RenderPartial("Attachment/_BusinessOportunityAttachedPhaseUpLoadPartial", businessOportunityPhaseAttachment);
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "referencePhaseAttachment";
            column.Caption = "Referencia";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                string referencePhaseAttachment = (string)DataBinder.Eval(c.DataItem, "referencePhaseAttachment");

                ViewContext.Writer.Write(referencePhaseAttachment);
            });

            column.EditorProperties().TextBox(p =>
            {
                p.ClientInstanceName = "referencePhaseAttachment";

                //p.ClientSideEvents.Validation = "OnReferenciaValidation";
                p.Width = Unit.Percentage(100);
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "descriptionPhaseAttachment";
            column.Caption = "Descripción";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                string descriptionPhaseAttachment = (string)DataBinder.Eval(c.DataItem, "descriptionPhaseAttachment");

                ViewContext.Writer.Write(descriptionPhaseAttachment);
            });

            column.EditorProperties().TextBox(p =>
            {
                p.ClientInstanceName = "descriptionPhaseAttachment";

                p.Width = Unit.Percentage(100);
            });

        });

    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
