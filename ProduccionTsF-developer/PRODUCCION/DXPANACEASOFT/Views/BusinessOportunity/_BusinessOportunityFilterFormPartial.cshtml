
@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.BusinessOportunity

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formFilterBusinessOportunity", name = "formFilterBusinessOportunity" }))
{
    <table class="table table-condensed" style="border: 0px solid #ffffff; margin-bottom: 0px;">
        <tr>
            <td style="width: 30%">
                <table class="table table-condensed" style="border: 0px solid #ffffff;">
                    <tr style="border-bottom: 1px Solid #C0C0C0;">
                        <td colspan="2">
                            <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Documento</span>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 10%;">
                            @Html.DevExpress().LabelFor(m => m.Document.DocumentType.name, settings =>
                            {
                                settings.Name = "documentTypeLabel";
                                settings.Text = "Tipo de Oportunidad:";
                                settings.AssociatedControlName = "documentType";
                            }).GetHtml()
                        </td>
                        <td>
                            @*@{
                                int? id_documentType = (Model != null && Model.Document != null && Model.Document.id_documentType != 0) ? (int?)Model.Document.id_documentType : null;
                            }*@
                            @Html.DevExpress().ComboBoxFor(m => m.Document.id_documentType, settings =>
                       {
                           settings.Name = "id_documentType";
                           settings.Properties.ClientInstanceName = "id_documentType";
                           settings.Width = Unit.Percentage(100);
                           //settings.ClientEnabled = codeState != "01";//Pendiente
                           settings.Properties.ValueField = "id";
                           settings.Properties.TextField = "name";
                           settings.Properties.ValueType = typeof(int);
                           settings.Properties.Width = Unit.Percentage(100);
                           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                           settings.Properties.EnableSynchronization = DefaultBoolean.False;
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                           //settings.ReadOnly = codeState != "01";//Pendiente
                           //settings.ShowModelErrors = true;
                           settings.Properties.NullDisplayText = "Todas";
                           settings.Properties.NullText = "Todas";
                           //settings.Properties.ClientSideEvents.Validation = "OnDocumentTypeValidation";
                           settings.Properties.ClientSideEvents.SelectedIndexChanged = "DocumentType_SelectedIndexChanged";

                       }).BindList(DataProviderDocumentType.DocumentTypeOpportunities((int?)ViewData["id_company"])).Bind(null).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 10%">
                            @Html.DevExpress().LabelFor(m => m.Document.id_documentState, settings =>
                            {
                                settings.Name = "documentStateLabel";
                                settings.Text = "Estado:";
                                settings.AssociatedControlName = "id_documentState";
                            }).GetHtml()
                        </td>
                        @*@{
                            var id_documentType = Model.Document.DocumentType == null ? (int?)null : Model.Document.DocumentType.id;
                        }*@
                        <td>
                            @Html.DevExpress().ComboBox(settings =>
                            {
                                settings.Name = "id_documentState";
                                settings.Properties.ClientInstanceName = "id_documentState";
                                settings.Width = Unit.Percentage(100);
                                settings.Properties.ValueField = "id";
                                settings.Properties.TextField = "name";
                                settings.Properties.ValueType = typeof(int);

                                settings.Properties.NullDisplayText = "Todos";
                                settings.Properties.NullText = "Todos";

                                settings.Properties.Width = Unit.Percentage(100);
                                settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                                settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                                settings.Properties.EnableSynchronization = DefaultBoolean.False;
                                settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                            }).BindList(DataProviderDocumentState.DocumentStatesByDocumentType(null, (int?)ViewData["id_company"])).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().LabelFor(m => m.Document.number, settings =>
                            {
                                settings.Name = "numberLabel";
                                settings.Text = "Número:";
                                settings.AssociatedControlName = "number";
                            }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().TextBoxFor(m => m.Document.number, settings =>
                            {
                                settings.Name = "number";
                                settings.Properties.ClientInstanceName = "number";
                                settings.Width = Unit.Percentage(100);

                                settings.Properties.NullDisplayText = "Todos";
                                settings.Properties.NullText = "Todos";

                            }).GetHtml()
                        </td>
                    </tr>
                    @*<tr>
                        <td>
                            @Html.DevExpress().LabelFor(m => m.Document.reference, settings =>
                            {
                                settings.Name = "referenceLabel";
                                settings.Text = "Referencia:";
                                settings.AssociatedControlName = "reference";
                            }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().TextBoxFor(m => m.Document.reference, settings =>
                            {
                                settings.Name = "reference";
                                settings.Properties.ClientInstanceName = "reference";
                                settings.Width = Unit.Percentage(100);

                                settings.Properties.NullDisplayText = "Todas";
                                settings.Properties.NullText = "Todas";

                            }).GetHtml()
                        </td>
                    </tr>*@
                </table>
            </td>
            <td style="width: 30%">
                <table class="table table-condensed" style="border: 0px solid #ffffff;">
                    <tr style="border-bottom: 1px Solid #C0C0C0;">
                        <td colspan="3">
                            <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Fechas</span>
                            @*<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Emisi&oacute;n y Autorizaci&oacute;n</span>*@
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().LabelFor(m => m.Document.emissionDate, settings =>
                            {
                                settings.Name = "startEmissionDateLabel";
                                settings.Text = "Emisión:";
                                settings.AssociatedControlName = "startEmissionDate";
                            }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().DateEditFor(m => m.Document.emissionDate, settings =>
                       {
                           settings.Name = "startEmissionDate";
                           settings.Properties.ClientInstanceName = "startEmissionDate";
                           settings.Width = Unit.Percentage(100);

                           settings.Properties.NullDisplayText = "Desde";
                           settings.Properties.NullText = "Desde";

                           settings.Properties.DisplayFormatInEditMode = true;
                           settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                           settings.Properties.EditFormat = EditFormat.Custom;
                           settings.Properties.EditFormatString = "dd/MM/yyyy";

                           settings.Properties.ClientSideEvents.Validation = "OnRangeEmissionDateValidation";

                           //settings.Properties.CalendarProperties.Columns = 2;
                           //settings.Properties.DateRangeSettings.MinDayCount = 1;
                           //settings.Properties.DateRangeSettings.MaxDayCount = 90;

                       }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().DateEditFor(m => m.Document.emissionDate, settings =>
                       {
                           settings.Name = "endEmissionDate";
                           settings.Properties.ClientInstanceName = "endEmissionDate";
                           settings.Width = Unit.Percentage(100);

                           settings.Properties.NullDisplayText = "Hasta";
                           settings.Properties.NullText = "Hasta";

                           settings.Properties.DisplayFormatInEditMode = true;
                           settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                           settings.Properties.EditFormat = EditFormat.Custom;
                           settings.Properties.EditFormatString = "dd/MM/yyyy";

                           settings.Properties.ClientSideEvents.Validation = "OnRangeEmissionDateValidation";

                           //settings.Properties.CalendarProperties.Columns = 2;
                           //settings.Properties.DateRangeSettings.StartDateEditID = "startEmissionDate";
                           //settings.Properties.DateRangeSettings.MinDayCount = 1;
                           //settings.Properties.DateRangeSettings.MaxDayCount = 90;

                           //settings.Properties.DropDownButton.Visible = false;

                       }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().LabelFor(m => m.startDate, settings =>
                            {
                                settings.Name = "startDateLabel";
                                settings.Text = "Inicio:";
                                settings.AssociatedControlName = "startStartDate";
                            }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().DateEditFor(m => m.startDate, settings =>
                       {
                           settings.Name = "startStartDate";
                           settings.Properties.ClientInstanceName = "startStartDate";
                           settings.Width = Unit.Percentage(100);

                           settings.Properties.NullDisplayText = "Desde";
                           settings.Properties.NullText = "Desde";

                           settings.Properties.DisplayFormatInEditMode = true;
                           settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                           settings.Properties.EditFormat = EditFormat.Custom;
                           settings.Properties.EditFormatString = "dd/MM/yyyy";
                           settings.Properties.ClientSideEvents.Validation = "OnRangeStartDateValidation";

                           //settings.Properties.CalendarProperties.Columns = 2;
                           //settings.Properties.DateRangeSettings.MinDayCount = 1;
                           //settings.Properties.DateRangeSettings.MaxDayCount = 90;

                       }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().DateEditFor(m => m.startDate, settings =>
                       {
                           settings.Name = "endStartDate";
                           settings.Properties.ClientInstanceName = "endStartDate";
                           settings.Width = Unit.Percentage(100);

                           settings.Properties.NullDisplayText = "Hasta";
                           settings.Properties.NullText = "Hasta";

                           settings.Properties.DisplayFormatInEditMode = true;
                           settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                           settings.Properties.EditFormat = EditFormat.Custom;
                           settings.Properties.EditFormatString = "dd/MM/yyyy";
                           settings.Properties.ClientSideEvents.Validation = "OnRangeStartDateValidation";

                           //settings.Properties.CalendarProperties.Columns = 2;
                           //settings.Properties.DateRangeSettings.StartDateEditID = "startAuthorizationDate";
                           //settings.Properties.DateRangeSettings.MinDayCount = 1;
                           //settings.Properties.DateRangeSettings.MaxDayCount = 90;
                       }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().LabelFor(m => m.endDate, settings =>
                            {
                                settings.Name = "endDateLabel";
                                settings.Text = "Cierre:";
                                settings.AssociatedControlName = "startEndDate";
                            }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().DateEditFor(m => m.startDate, settings =>
                       {
                           settings.Name = "startEndDate";
                           settings.Properties.ClientInstanceName = "startEndDate";
                           settings.Width = Unit.Percentage(100);

                           settings.Properties.NullDisplayText = "Desde";
                           settings.Properties.NullText = "Desde";

                           settings.Properties.DisplayFormatInEditMode = true;
                           settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                           settings.Properties.EditFormat = EditFormat.Custom;
                           settings.Properties.EditFormatString = "dd/MM/yyyy";
                           settings.Properties.ClientSideEvents.Validation = "OnRangeEndDateValidation";

                           //settings.Properties.CalendarProperties.Columns = 2;
                           //settings.Properties.DateRangeSettings.MinDayCount = 1;
                           //settings.Properties.DateRangeSettings.MaxDayCount = 90;

                       }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().DateEditFor(m => m.endDate, settings =>
                       {
                           settings.Name = "endEndDate";
                           settings.Properties.ClientInstanceName = "endEndDate";
                           settings.Width = Unit.Percentage(100);

                           settings.Properties.NullDisplayText = "Hasta";
                           settings.Properties.NullText = "Hasta";

                           settings.Properties.DisplayFormatInEditMode = true;
                           settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                           settings.Properties.EditFormat = EditFormat.Custom;
                           settings.Properties.EditFormatString = "dd/MM/yyyy";
                           settings.Properties.ClientSideEvents.Validation = "OnRangeEndDateValidation";

                           //settings.Properties.CalendarProperties.Columns = 2;
                           //settings.Properties.DateRangeSettings.StartDateEditID = "startAuthorizationDate";
                           //settings.Properties.DateRangeSettings.MinDayCount = 1;
                           //settings.Properties.DateRangeSettings.MaxDayCount = 90;
                       }).GetHtml()
                        </td>
                    </tr>
                </table>
            </td>
            <td style="width: 30%">
                <table class="table table-condensed" style="border: 0px solid #ffffff">
                    <tr style="border-bottom: 1px Solid #C0C0C0;">
                        <td colspan="2">
                            <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Oportunidad de Negocio</span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().LabelFor(m => m.name, settings =>
                            {
                                settings.Name = "nameLabel";
                                settings.Text = "Nombre:";
                                settings.AssociatedControlName = "name";
                            }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().TextBoxFor(m => m.name, settings =>
                            {
                                settings.Name = "nameOportunity";
                                settings.Properties.ClientInstanceName = "nameOportunity";
                                settings.Width = Unit.Percentage(100);

                                settings.Properties.NullDisplayText = "Todos";
                                settings.Properties.NullText = "Todos";

                            }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().LabelFor(m => m.id_businessPartner, settings =>
                            {
                                settings.Text = "Socio del Negocio:";
                                settings.AssociatedControlName = "id_businessPartner";
                            }).GetHtml()
                        </td>
                        <td>
                            @*@{
                                int? id_businessPartner = (Model != null && Model.id_businessPartner != 0) ? (int?)Model.id_businessPartner : null;
                                string codeDocumentType = (Model != null && Model.Document != null && Model.Document.DocumentType != null) ? Model.Document.DocumentType.code : "";
                            }*@
                            @Html.DevExpress().ComboBoxFor(m => m.id_businessPartner, settings =>
                       {
                           settings.Properties.ClientInstanceName = "id_businessPartner";
                           settings.Width = Unit.Percentage(100);

                           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                           settings.Properties.EnableSynchronization = DefaultBoolean.False;
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                           settings.Properties.NullDisplayText = "Todos";
                           settings.Properties.NullText = "Todos";

                           settings.Properties.ValueField = "id";
                           settings.Properties.TextField = "fullname_businessName";
                           settings.Properties.ValueType = typeof(int);
                           //settings.ReadOnly = codeState != "01";//Pendiente
                           //settings.ShowModelErrors = true;
                           //settings.Properties.ClientSideEvents.Validation = "OnPersonValidation";
                       }).BindList(DataProviderPerson.ProvidersAndCustomers((int)ViewData["id_company"])).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().LabelFor(m => m.contactPerson, settings =>
                            {
                                settings.Name = "contactPersonLabel";
                                settings.Text = "Contacto:";
                                settings.AssociatedControlName = "contactPerson";
                            }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().TextBoxFor(m => m.contactPerson, settings =>
                            {
                                settings.Name = "contactPerson";
                                settings.Properties.ClientInstanceName = "contactPerson";
                                settings.Width = Unit.Percentage(100);

                                settings.Properties.NullDisplayText = "Todos";
                                settings.Properties.NullText = "Todos";

                            }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().LabelFor(m => m.id_executivePerson, settings =>
                            {
                                settings.Text = "Ejecutivo:";
                                settings.AssociatedControlName = "id_executivePerson";
                            }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().ComboBoxFor(m => m.id_executivePerson, settings =>
                       {
                           settings.Properties.ClientInstanceName = "id_executivePerson";
                           settings.Width = Unit.Percentage(100);

                           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                           settings.Properties.EnableSynchronization = DefaultBoolean.False;
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                           settings.Properties.ValueField = "id";
                           settings.Properties.TextField = "fullname_businessName";
                           settings.Properties.ValueType = typeof(int);
                           settings.Properties.NullDisplayText = "Todos";
                           settings.Properties.NullText = "Todos";
                           //settings.ReadOnly = codeState != "01";//Pendiente
                           //settings.ShowModelErrors = true;
                           //settings.Properties.ClientSideEvents.Validation = "OnPersonValidation";
                       }).BindList(DataProviderPerson.RolsByCompany((int)ViewData["id_company"], "Ejecutivo")).Bind(null).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 10%;">
                            @Html.DevExpress().LabelFor(m => m.BusinessOportunityResults.BusinessOportunityState.name, settings =>
                            {
                                settings.Name = "businessOportunityStateLabel";
                                settings.Text = "Estado de la Oportunidad:";
                                settings.AssociatedControlName = "businessOportunityState";
                            }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().ComboBoxFor(m => m.BusinessOportunityResults.id_businessOportunityState, settings =>
                       {
                           settings.Name = "id_businessOportunityState";
                           settings.Properties.ClientInstanceName = "id_businessOportunityState";
                           settings.Width = Unit.Percentage(100);
                           //settings.ClientEnabled = codeState != "01";//Pendiente
                           settings.Properties.ValueField = "id";
                           settings.Properties.TextField = "name";
                           settings.Properties.ValueType = typeof(int);
                           settings.Properties.Width = Unit.Percentage(100);
                           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                           settings.Properties.EnableSynchronization = DefaultBoolean.False;
                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                           settings.Properties.NullDisplayText = "Todos";
                           settings.Properties.NullText = "Todos";

                       }).BindList(DataProviderDocumentState.BusinessOportunityStatesByCompany((int?)ViewData["id_company"])).GetHtml()
                        </td>
                    </tr>
                </table>
            </td>
            <td>
                <table class="table table-condensed" style="border: 0px solid #ffffff;">
                    <tr style="border-bottom: 1px Solid #C0C0C0;">
                        <td>
                            <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Acciones</span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().Button(settings =>
                            {
                                settings.Name = "btnSearch";
                                settings.UseSubmitBehavior = false;
                                settings.Text = "Buscar";
                                settings.Images.Image.IconID = IconID.ActionsSearch16x16devav;
                                settings.Width = Unit.Percentage(100);
                                settings.ClientSideEvents.Click = "btnSearch_click";
                            }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().Button(settings =>
                            {
                                settings.Name = "Clear";
                                settings.UseSubmitBehavior = false;
                                settings.Text = "Limpiar";
                                settings.Images.Image.IconID = IconID.ActionsClear16x16;
                                settings.Width = Unit.Percentage(100);
                                settings.ClientSideEvents.Click = "btnClear_click";
                            }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().Button(settings =>
                            {
                                settings.Name = "btnNewOportunity";
                                settings.UseSubmitBehavior = false;
                                settings.Text = "Nueva";
                                settings.Images.Image.IconID = IconID.ActionsAdd16x16office2013;
                                settings.Width = Unit.Percentage(100);
                                settings.ClientSideEvents.Click = "AddNewOportunity";
                            }).GetHtml()
                        </td>
                        
                        @*<td>
                            <div class="btn-group" style="width: 100%;">
                                <button type="button" class="btn-default dropdown-toggle custom-button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img class="dxIcon_actions_add_16x16 dx-vam" src="/DXR.axd?r=1_35-2Z17d" alt="" style="margin-right: 4px;" id="AddNewImg"><span>Nueva</span><span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-right">
                                    <li><a href="javascript:;" onclick="AddNewOportunity('SALE');">Oportunidad de Venta</a></li>
                                    <li><a href="javascript:;" onclick="AddNewOportunity('PURCHASE');">Oportunidad Compra</a></li>
                                </ul>
                            </div>
                        </td>*@
                    </tr>
                </table>
            </td>
        </tr>
    </table>
}
