@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@model List<DXPANACEASOFT.Models.BusinessOportunityPhaseActivity>

@{
    var grid = Html.DevExpress().GridView<BusinessOportunityPhaseActivity>(settings =>
    {
        settings.Name = "gvBusinessOportunityPhaseActivities";


        settings.CallbackRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhaseActivitiesPartial" };

        settings.ClientSideEvents.BeginCallback = "BusinessOportunityPhase_OnBeginCallback";


        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhaseActivitiesPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhaseActivitiesPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "BusinessOportunity", Action = "BusinessOportunityPhaseActivitiesPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;

        settings.Width = Unit.Percentage(100);

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.CommandColumn.Width = Unit.Percentage(8);

        settings.Styles.Header.Font.Bold = true;

        settings.Columns.Add(column =>
        {
            column.FieldName = "id_businessOportunityActivity";
            column.Caption = "Actividad";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;

            column.EditorProperties().ComboBox(p =>
            {
                p.ClientInstanceName = "id_businessOportunityActivity";
                p.DataSource = DataProviderBusinessOportunity.AllBusinessOportunityActivitiesByCompany((int?)ViewData["id_company"]);
                p.ValueField = "id";
                p.TextField = "name";
                //p.TextFormatString = "{1}";
                p.ValueType = typeof(int);
                p.CallbackPageSize = 30;
                p.Width = Unit.Percentage(100);
                p.DropDownStyle = DropDownStyle.DropDownList;
                p.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                p.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                //p.Columns.Add("masterCode", "Código", 70);//, Unit.Percentage(50));
                //p.Columns.Add("name", "Nombre del Producto", 200);//, Unit.Percentage(70));
                ////p.Columns.Add("barCode", "EAN", Unit.Percentage(50));
                //p.Columns.Add("ItemInventory.MetricUnit.code", "UM", 50);//, Unit.Percentage(20));
                //p.ClientSideEvents.Init = "ItemCombo_OnInit";
                //p.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                //p.ClientSideEvents.SelectedIndexChanged = "DetailsItemCombo_SelectedIndexChanged";
                p.ClientSideEvents.Validation = "OnBusinessOportunityActivityValidation";
                //p.ClientSideEvents.ValueChanged = "ItemsCombo_ValueChanged";}
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "id_state";
            column.Caption = "Estado";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;

            column.EditorProperties().ComboBox(p =>
            {
                p.ClientInstanceName = "id_state";
                p.DataSource = DataProviderBusinessOportunity.AllBusinessOportunityActivityStatesByCompany((int?)ViewData["id_company"]);
                p.ValueField = "id";
                p.TextField = "name";
                //p.TextFormatString = "{1}";
                p.ValueType = typeof(int);
                p.CallbackPageSize = 30;
                p.Width = Unit.Percentage(100);
                p.DropDownStyle = DropDownStyle.DropDownList;
                p.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                p.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                //p.Columns.Add("masterCode", "Código", 70);//, Unit.Percentage(50));
                //p.Columns.Add("name", "Nombre del Producto", 200);//, Unit.Percentage(70));
                ////p.Columns.Add("barCode", "EAN", Unit.Percentage(50));
                //p.Columns.Add("ItemInventory.MetricUnit.code", "UM", 50);//, Unit.Percentage(20));
                //p.ClientSideEvents.Init = "ItemCombo_OnInit";
                //p.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                //p.ClientSideEvents.SelectedIndexChanged = "DetailsItemCombo_SelectedIndexChanged";
                p.ClientSideEvents.Validation = "OnStateValidation";
                //p.ClientSideEvents.ValueChanged = "ItemsCombo_ValueChanged";}
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "referencePhaseActivity";
            column.Caption = "Referencia";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                string referencePhaseActivity = (string)DataBinder.Eval(c.DataItem, "referencePhaseActivity");

                ViewContext.Writer.Write(referencePhaseActivity);
            });

            column.EditorProperties().TextBox(p =>
            {
                p.ClientInstanceName = "referencePhaseActivity";

                //p.ClientSideEvents.Validation = "OnReferenciaValidation";
                p.Width = Unit.Percentage(100);
            });

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "descriptionPhaseActivity";
            column.Caption = "Descripción";
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                string descriptionPhaseActivity = (string)DataBinder.Eval(c.DataItem, "descriptionPhaseActivity");

                ViewContext.Writer.Write(descriptionPhaseActivity);
            });

            column.EditorProperties().TextBox(p =>
            {
                p.ClientInstanceName = "descriptionPhaseActivity";

                p.Width = Unit.Percentage(100);
            });

        });

    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
