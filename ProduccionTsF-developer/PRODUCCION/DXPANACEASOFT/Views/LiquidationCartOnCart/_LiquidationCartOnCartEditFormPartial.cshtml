@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@model DXPANACEASOFT.Models.LiquidationCartOnCart

@{
	int id_liquidationCartOnCart = (Model != null) ? Model.id : 0;
	string codeDocumentState = (Model.Document != null) ? (Model.Document.DocumentState != null ? Model.Document.DocumentState.code : "") : "";
	string _codeProcessType = (Model != null && Model.ProductionLot != null && Model.ProductionLot.ProcessType != null) ? Model.ProductionLot.ProcessType.code : "";


	string codeEntero = "";
	string codeCola = "";
	if (codeDocumentState == "01")
	{
		<script src="~/Scripts/liquidationcartoncart/_liquidationCartOnCartDetailsEditForm.js"></script>
	}

	if (Model != null && Model.LiquidationCartOnCartDetail != null && Model.LiquidationCartOnCartDetail.Count > 0)
	{
		var lstCartDetail = Model.LiquidationCartOnCartDetail.ToList();
		if (lstCartDetail.Where(w => w.Item.ItemProcessType.FirstOrDefault(fod => fod.ProcessType.code.Equals("ENT")) != null).Count() > 0)
		{
			codeEntero = "Y";
		}
		if (lstCartDetail.Where(w => w.Item.ItemProcessType.FirstOrDefault(fod => fod.ProcessType.code.Equals("COL")) != null).Count() > 0)
		{
			codeCola = "Y";
		}
	}
}

@Html.Hidden("codeEnteroReport", codeEntero)
@Html.Hidden("codeColaReport", codeCola)

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formEditLiquidationCartOnCart", name = "formEditLiquidationCartOnCart" }))
{
	if (ViewData["EditMessage"] != null)
	{
		@Html.Raw(ViewData["EditMessage"]);
	}

	@Html.Hidden("id_liquidationCartOnCart", id_liquidationCartOnCart)
	@Html.Hidden("codeDocumentState", codeDocumentState)
	@Html.Hidden("codProcessType", _codeProcessType)


	@Html.DevExpress().PageControl(tabs =>
{
    tabs.Name = "tabControl";
    tabs.Width = Unit.Percentage(100);
    tabs.ActiveTabIndex = 2;


    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabDocument";
        tab.Text = "Documento";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            Html.RenderPartial("_LiquidationCartOnCartDocumentFormEdit", Model.Document);
        });
    });
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabProccess";
        tab.Text = "Proceso    ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            Html.RenderPartial("_ProductionLotMainFormTab", Model);
        });
    });
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabLiquidationCartOnCartDetails";
        tab.Text = "Liquidación Carro por Carro";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabStyle.Width = Unit.Percentage(100);
        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            var liquidationCartOnCartDetail = (Model != null && Model.LiquidationCartOnCartDetail != null) ? Model.LiquidationCartOnCartDetail.OrderBy(od => od.id).ToList()
                                                                                                           : new List<LiquidationCartOnCartDetail>();
            //var liquidationCartOnCartDetail = (Model != null && Model.LiquidationCartOnCartDetail != null) ? Model.LiquidationCartOnCartDetail.Where(w => (w.InventoryMovePlantTransferDetail.FirstOrDefault(fod => fod.InventoryMovePlantTransfer.InventoryMove.Document.DocumentState.code == "01" ||
            //                                                                                                                                               fod.InventoryMovePlantTransfer.InventoryMove.Document.DocumentState.code == "03") == null)).ToList()
            //                                                                                               : new List<LiquidationCartOnCartDetail>();
            Html.RenderPartial("_LiquidationCartOnCartHeadFormDetailPartial", Model);
            if (codeDocumentState == "01")
            {
                Html.RenderPartial("_LiquidationCartOnCartFilterDetail");
                Html.RenderPartial("LiquidationCartOnCartButtons/_GridMessageWarningDetail");
                //Html.RenderPartial("ProductionLotGridMessageErrors/_GridMessageErrorsDetail");
                Html.RenderPartial("_GridMessageErrorDetail");
                Html.RenderPartial("LiquidationCartOnCartButtons/_LiquidationCartOnCartDetailsActionsButtons");
                Html.RenderPartial("_LiquidationCartOnCartEditFormDetailPartial", liquidationCartOnCartDetail.OrderBy(od => od.id).ToList());
            }
            else
            {
                ViewData["id_liquidationCartOnCart"] = (Model != null) ? Model.id : 0;
                Html.RenderPartial("_LiquidationCartOnCartViewsDetailPartial", liquidationCartOnCartDetail.OrderBy(od => od.id).ToList());
            }
        });
    });
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabLiquidationCartOnCartDetails";
        tab.Text = "Liquidación Carro por Carro Recepcionado";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabStyle.Width = Unit.Percentage(100);
        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            ViewData["id_liquidationCartOnCart"] = (Model != null) ? Model.id : 0;
            var inventoryMovePlantTransferDetail = (Model != null) ? Model.InventoryMovePlantTransferDetail.Where(w => (w.InventoryMovePlantTransfer.InventoryMove.Document.DocumentState.code == "01" ||
                                                                                           w.InventoryMovePlantTransfer.InventoryMove.Document.DocumentState.code == "03"))
                                                                                .OrderBy(od => od.LiquidationCartOnCartDetail.id_ProductionCart).ThenBy(x => x.LiquidationCartOnCartDetail.id_Client).ThenBy(x => x.LiquidationCartOnCartDetail.id_ItemToWarehouse).ToList()
                                        : new List<InventoryMovePlantTransferDetail>();
            //var liquidationCartOnCartDetail = (Model != null && Model.LiquidationCartOnCartDetail != null) ? Model.LiquidationCartOnCartDetail.Where(w=> (w.InventoryMovePlantTransferDetail.FirstOrDefault(fod => fod.InventoryMovePlantTransfer.InventoryMove.Document.DocumentState.code == "01" ||
            //                                                                                                                                              fod.InventoryMovePlantTransfer.InventoryMove.Document.DocumentState.code == "03") != null)).ToList()
            //                                                                                               : new List<LiquidationCartOnCartDetail>();
            Html.RenderPartial("_LiquidationCartOnCartViewsReceivedDetailPartial", inventoryMovePlantTransferDetail);
        });
    });
}).GetHtml()


	<table class="table table-condensed">
		<tr style="border-top: 1px Solid #C0C0C0;">
			<td colspan="6" style="text-align: right">
				@{
					Html.DevExpress().Button(button =>
					{
						button.Name = "btnUpdate_EditForm";
						button.Text = "Actualizar";
						button.RenderMode = ButtonRenderMode.Button;
						button.ImagePosition = ImagePosition.Left;
						button.Images.Image.IconID = IconID.ActionsSave16x16devav;
						button.ClientEnabled = codeDocumentState == "01";//Pendiente 01
																		 //button.UseSubmitBehavior = false;
																		 //button.EnableClientSideAPI = true;
							button.ClientSideEvents.Click = "ButtonUpdate_Click";
					}).Render();

					ViewContext.Writer.Write("&nbsp;&nbsp;");

					Html.DevExpress().Button(button =>
					{
						button.Name = "btnCancel_EditForm";
						button.Text = "Cerrar";
						button.RenderMode = ButtonRenderMode.Button;
						button.ImagePosition = ImagePosition.Left;
						button.Images.Image.IconID = IconID.ActionsClose16x16office2013;
							//button.ClientEnabled = true;
							button.UseSubmitBehavior = false;
							//button.EnableClientSideAPI = true;
							button.ClientSideEvents.Click = "ButtonCancel_Click";
					}).Render();
				}
			</td>
		</tr>
	</table>
}

<script src="~/Scripts/liquidationcartoncart/editform.js"></script>


