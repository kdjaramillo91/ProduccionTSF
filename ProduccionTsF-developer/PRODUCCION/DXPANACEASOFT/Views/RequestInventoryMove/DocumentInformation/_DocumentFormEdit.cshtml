@*@using DXPANACEASOFT.DataProviders*@

@model DXPANACEASOFT.Models.DocumentP.DocumentDTO.DocumentTansferP

@{
    string codeState = (Model != null && Model.codeDocumentStateTransferP != null) ? Model.codeDocumentStateTransferP : "";
    string number = (Model != null) ? Model.numberTransferP : "";
}
<table id="tableTabDocument" class="table table-condensed" style="margin: 0px;">
    <tr>
        <td style="width: 10%;">
            @Html.DevExpress().Label(settings =>
            {
                settings.Name = "NatureMoveLabel";
                settings.Text = "Naturaleza de Movimiento:";
                settings.AssociatedControlName = "documentType";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().ComboBoxFor(m => m.idNatureMoveHeadP, settings =>
            {
                settings.Name = "idNatureMoveTransferP";
                settings.Properties.ClientInstanceName = "idNatureMoveTransferP";
                settings.Width = Unit.Percentage(100);
                settings.Properties.ValueField = "idNatureF";
                settings.Properties.TextField = "descNatureF";
                settings.Properties.ValueType = typeof(int);
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = this.Model.ReadOnlyBeRemissionGuide || !codeState.Equals("01");
                settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                settings.Properties.EnableSynchronization = DefaultBoolean.False;
                settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                settings.Properties.NullDisplayText = "Todos";
                settings.Properties.NullText = "Todos";
            }).BindList(ViewData["_NatureMoveEdit"]).Bind(Model.idNatureMoveHeadP).GetHtml()
        </td>
        <td style="width: 10%;">
            @Html.DevExpress().Label(settings =>
            {
                settings.Name = "numberLabel";
                settings.Text = "No. Documento:";
                settings.AssociatedControlName = "number";

            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.sequentialTransferP, settings =>
            {
                settings.Name = "sequentialTransferP";
                settings.Properties.ClientInstanceName = "sequentialTransferP";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = true;
            }).GetHtml()
        </td>
        <td style="width: 10%;">
            @Html.DevExpress().Label(settings =>
            {
                settings.Name = "documentStateLabel";
                settings.Text = "Estado:";
                settings.AssociatedControlName = "documentState";
            }).GetHtml()
        </td>
        <td>
            @Html.HiddenFor(m => m.idDocumentStateTransferP, new { @id = "id_documentState" })
            @Html.DevExpress().TextBoxFor(m => m.nameDocumentStateTransferP, settings =>
            {
                settings.Name = "documentState";
                settings.Properties.ClientInstanceName = "documentState";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = true;
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().Label(settings =>
            {
                settings.Name = "emissionDateLabel";
                settings.Text = "Fecha de Emisión:";
                settings.AssociatedControlName = "emissionDate";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().DateEditFor(m => m.emissionDateTransferP, settings =>
            {
                settings.Name = "emissionDate";
                settings.Properties.ClientInstanceName = "emissionDate";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = codeState  != "01";
                settings.Properties.DisplayFormatString = "dd/MM/yyyy HH:mm";
                settings.Properties.TimeSectionProperties.Visible = true;
                settings.Properties.TimeSectionProperties.Adaptive = true;
                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Custom;
                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = "HH:mm";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(settings =>
            {
                settings.Name = "warehouseLabelEdit";
                settings.Text = "Bodega:";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().ComboBoxFor(m => m.idWarehouseHeadP, settings =>
            {
                settings.Name = "idWarehouseF";
                settings.Properties.ClientInstanceName = "idWarehouseF";
                settings.Width = Unit.Percentage(100);
                settings.Properties.ValueField = "idWarehouseF";
                settings.Properties.TextField = "descWarehouseF";
                settings.Properties.ValueType = typeof(int);
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = this.Model.ReadOnlyBeRemissionGuide || !codeState.Equals("01");
                settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                settings.Properties.EnableSynchronization = DefaultBoolean.False;
                settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                settings.Properties.NullDisplayText = "Todos";
                settings.Properties.NullText = "Todos";
            }).BindList(ViewData["_WarehouseEdit"]).Bind(Model.idWarehouseHeadP).GetHtml()
        </td>
        <td></td>
        <td></td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().Label(settings =>
            {
                settings.Name = "descriptionLabel";
                settings.Text = "Descripción:";
                settings.AssociatedControlName = "description";
            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().MemoFor(m => m.descriptionTransferP, settings =>
            {
                settings.Name = "description";
                settings.Properties.ClientInstanceName = "description";
                settings.ReadOnly = codeState != "01";
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
        </td>
    </tr>
</table>