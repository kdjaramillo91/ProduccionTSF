@using DevExpress.Data
@using System.Drawing
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@model List<DXPANACEASOFT.Models.ProductionLotPayment>

@{
    var grid = Html.DevExpress().GridView<ProductionLotPayment>(settings =>
    {
        settings.Name = "gvProductionLotReceptionDetailCloses" + ViewData["id_productionLot"];
        settings.CallbackRouteValues = new { Controller = "ProductionLotReception", Action = "ProductionLotReceptionDetailProductionLotClosesPartial" };

        settings.ClientSideEvents.BeginCallback = "ProductionLotReceptionDetail_OnBeginCallback";

        settings.CommandColumn.Visible = false;
        settings.Width = Unit.Percentage(100);

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView gv = s as MVCxGridView;
            if (gv == null)
            {
                e.Properties["cpIdProductionLot"] = 0;
            }
            e.Properties["cpIdProductionLot"] = ViewData["id_productionLot"];
        };

        settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
        settings.Styles.Header.Font.Bold = true;

        #region ColumnsAdd

        settings.Columns.Add(column =>
        {
            column.FieldName = "id_item";
            column.Caption = "Producto";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            column.PropertiesEdit.ClientInstanceName = "id_item";
            column.ReadOnly = true;

            column.SetDataItemTemplateContent(c =>
            {
                int? id_item = (int?)DataBinder.Eval(c.DataItem, "id_item");
                Item item = DataProviderItem.Item(id_item);

                string text = (item != null) ? item.name : "";

                ViewContext.Writer.Write(text);
            });

        });

        settings.Columns.Add(column =>
        {
            column.Name = "metricUnit";
            column.PropertiesEdit.ClientInstanceName = "metricUnit";
            column.Caption = "UM";
            column.Width = Unit.Percentage(5);
            column.UnboundType = UnboundColumnType.String;
            column.ReadOnly = true;

            column.SetDataItemTemplateContent(c =>
            {
                int? id_item = (int?)DataBinder.Eval(c.DataItem, "id_item");
                Item item = DataProviderItem.Item(id_item);

                string text = string.Empty;

                if (item != null)
                {
                    text = (item.ItemPurchaseInformation != null) ? item.ItemPurchaseInformation.MetricUnit.code : "";
                }

                ViewContext.Writer.Write(text);
            });
        });

        settings.Columns.Add(column =>
        {

            column.FieldName = "quantity";
            //column.Name = "quantity";
            //column.PropertiesEdit.ClientInstanceName = "quantity";
            column.Caption = "Cantidad";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            //column.UnboundType = UnboundColumnType.Decimal;
            //column.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            column.Width = Unit.Percentage(10);
            //column.ReadOnly = true;


        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "adjustMore";
            column.Caption = "Ajustar(+)";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.Width = Unit.Percentage(10);

        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "adjustLess";
            column.Caption = "Ajustar(-)";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.Width = Unit.Percentage(10);

        });

        settings.Columns.Add(column =>
        {

            column.FieldName = "totalMU";
            //column.Name = "totalMU";
            //column.PropertiesEdit.ClientInstanceName = "totalMU";
            column.Caption = "Cantidad Ajustada";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            //column.UnboundType = UnboundColumnType.Decimal;
            //column.CellStyle.HorizontalAlign = HorizontalAlign.Right;
            column.Width = Unit.Percentage(10);
            //column.ReadOnly = true;

        });


        #endregion

    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()

