@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@model DXPANACEASOFT.Models.LiquidationFreightRiver

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formFilterLiquidationFreightRiver", name = "formFilterLiquidationFreightRiver" }))
{
    <table class="table table-condensed" style="border: 0px solid #ffffff; margin-bottom: 0px;">
    <tr>
        <td style="width: 30%">
            <table class="table table-condensed" style="border: 0px solid #ffffff;">
                <tr style="border-bottom: 1px Solid #C0C0C0;">
                    <td colspan="2">
                        <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Documento</span>
                    </td>
                </tr>
                <tr>
                    <td style="width: 35%">
                        @Html.DevExpress().LabelFor(m => m.Document.id_documentState, settings =>
                   {
                       settings.Name = "documentStateLabel";
                       settings.Text = "Estado:";
                       settings.AssociatedControlName = "id_documentState";
                   }).GetHtml()
                    </td>
                    <td>
                        @Html.DevExpress().ComboBox(settings =>
                   {
                       settings.Name = "id_documentState";
                       settings.Properties.ClientInstanceName = "id_documentState";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.ValueField = "id";
                       settings.Properties.TextField = "name";
                       settings.Properties.ValueType = typeof(int);
                       settings.Properties.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Todos";
                       settings.Properties.NullText = "Todos";

                       settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                       settings.Properties.EnableSynchronization = DefaultBoolean.False;
                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                   }).BindList(DataProviderDocumentState.DocumentStates((int)ViewData["id_company"])).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DevExpress().LabelFor(m => m.Document.number, settings =>
                   {
                       settings.Name = "numberLabel";
                       settings.Text = "Número:";
                       settings.AssociatedControlName = "number";
                   }).GetHtml()
                    </td>
                    <td>
                        @Html.DevExpress().TextBoxFor(m => m.Document.number, settings =>
                   {
                       settings.Name = "number";
                       settings.Properties.ClientInstanceName = "number";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Todos";
                       settings.Properties.NullText = "Todos";
                   }).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DevExpress().Label(settings =>
                   {
                       settings.Name = "numberGuideLabel";
                       settings.Text = "Número Guía:";
                       settings.AssociatedControlName = "numberGuide";
                   }).GetHtml()
                    </td>
                    <td>
                        @Html.DevExpress().TextBox(settings =>
                   {
                       settings.Name = "numberGuide";
                       settings.Properties.ClientInstanceName = "numberGuide";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Todos";
                       settings.Properties.NullText = "Todos";
                   }).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <table class="table table-condensed" style="border: 0px solid #ffffff;">
                            <tr style="border-bottom: 1px Solid #C0C0C0;">
                                <td colspan="4">
                                    <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Guia Remision</span>
                                </td>
                            </tr>
                
                            <tr>
                                <td>
                                    @Html.DevExpress().Label(settings =>
                               {
                                   settings.Name = "providerremisionabel";
                                   settings.Text = "Proveedor:";
                                   settings.AssociatedControlName = "id_providerremision";
                               }).GetHtml()
                                </td>
                                <td colspan="2">

                                    @Html.DevExpress().ComboBox(settings =>
                               {
                                   settings.Name = "id_providerremision";
                                   settings.Properties.ClientInstanceName = "id_providerremision";
                                   settings.Width = Unit.Percentage(100);

                                   settings.Properties.ValueField = "id";
                                   settings.Properties.TextField = "name";
                                   settings.Properties.ValueType = typeof(int);
                                   settings.Properties.Width = Unit.Percentage(100);

                                   settings.Properties.NullDisplayText = "Todos";
                                   settings.Properties.NullText = "Todos";

                                   settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                                   settings.Properties.EnableSynchronization = DefaultBoolean.False;
                                   settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                               }).BindList(DataProviderPerson.ProvidersShrimpPerson()).GetHtml()

                         
                                </td>
                            </tr>
                
                        </table>

                      
                    </td>
                  
                </tr>
            </table>
        </td>
        <td style="width: 55%">
            <table class="table table-condensed" style="border: 0px solid #ffffff;">
                <tr style="border-bottom: 1px Solid #C0C0C0;">
                    <td colspan="4">
                        <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Emisi&oacute;n y Transporte</span>
                    </td>
                </tr>
                <tr>
                    <td style="width: 35%;">
                        @Html.DevExpress().LabelFor(m => m.Document.emissionDate, settings =>
                   {
                       settings.Name = "startEmissionDateLabel";
                       settings.Text = "Fecha Emisión:";
                       settings.AssociatedControlName = "startEmissionDate";
                   }).GetHtml()
                    </td>
                    <td>
                        @Html.DevExpress().DateEditFor(m => m.Document.emissionDate, settings =>
                   {
                       settings.Name = "startEmissionDate";
                       settings.Properties.ClientInstanceName = "startEmissionDate";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Desde";
                       settings.Properties.NullText = "Desde";

                       settings.Properties.DisplayFormatInEditMode = true;
                       settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                       settings.Properties.EditFormat = EditFormat.Custom;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";

                       settings.Properties.CalendarProperties.Columns = 2;
                       settings.Properties.DateRangeSettings.MinDayCount = 1;
                       settings.Properties.DateRangeSettings.MaxDayCount = 90;

                   }).GetHtml()
                    </td>
                    <td>
                        @Html.DevExpress().DateEditFor(m => m.Document.emissionDate, settings =>
                   {
                       settings.Name = "endEmissionDate";
                       settings.Properties.ClientInstanceName = "endEmissionDate";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Hasta";
                       settings.Properties.NullText = "Hasta";

                       settings.Properties.DisplayFormatInEditMode = true;
                       settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                       settings.Properties.EditFormat = EditFormat.Custom;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";

                       settings.Properties.CalendarProperties.Columns = 2;
                       settings.Properties.DateRangeSettings.StartDateEditID = "startEmissionDate";
                       settings.Properties.DateRangeSettings.MinDayCount = 1;
                       settings.Properties.DateRangeSettings.MaxDayCount = 90;

                   }).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DevExpress().LabelFor(m => m.Document.emissionDate, settings =>
                   {
                       settings.Name = "startAuthorizationDateLabel";
                       settings.Text = "Fecha Autorización:";
                       settings.AssociatedControlName = "startAuthorizationDate";
                   }).GetHtml()
                    </td>
                    <td>
                        @Html.DevExpress().DateEditFor(m => m.Document.authorizationDate, settings =>
                   {
                       settings.Name = "startAuthorizationDate";
                       settings.Properties.ClientInstanceName = "startAuthorizationDate";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Desde";
                       settings.Properties.NullText = "Desde";

                       settings.Properties.DisplayFormatInEditMode = true;
                       settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                       settings.Properties.EditFormat = EditFormat.Custom;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";

                       settings.Properties.CalendarProperties.Columns = 2;
                       settings.Properties.DateRangeSettings.MinDayCount = 1;
                       settings.Properties.DateRangeSettings.MaxDayCount = 90;

                   }).GetHtml()
                    </td>
                    <td>
                        @Html.DevExpress().DateEditFor(m => m.Document.authorizationDate, settings =>
                   {
                       settings.Name = "endAuthorizationDate";
                       settings.Properties.ClientInstanceName = "endAuthorizationDate";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Hasta";
                       settings.Properties.NullText = "Hasta";

                       settings.Properties.DisplayFormatInEditMode = true;
                       settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                       settings.Properties.EditFormat = EditFormat.Custom;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";

                       settings.Properties.CalendarProperties.Columns = 2;
                       settings.Properties.DateRangeSettings.StartDateEditID = "startAuthorizationDate";
                       settings.Properties.DateRangeSettings.MinDayCount = 1;
                       settings.Properties.DateRangeSettings.MaxDayCount = 90;

                   }).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DevExpress().Label(settings =>
                   {
                       settings.Name = "providertransportLabel";
                       settings.Text = "Compañía que factura:";
                       settings.AssociatedControlName = "id_providertransport";
                   }).GetHtml()
                    </td>
                    <td colspan="2">

                        @Html.DevExpress().ComboBox(settings =>
                   {
                       settings.Name = "id_providertransport";
                       settings.Properties.ClientInstanceName = "id_providertransport";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.ValueField = "id";
                       settings.Properties.TextField = "name";
                       settings.Properties.ValueType = typeof(int);
                       settings.Properties.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Todos";
                       settings.Properties.NullText = "Todos";

                       settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                       settings.Properties.EnableSynchronization = DefaultBoolean.False;
                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                   }).BindList(DataProviderPerson.PersonsTransportist((int)ViewData["id_company"])).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DevExpress().Label(settings =>
                   {
                       settings.Name = "ownerLabel";
                       settings.Text = "Dueño:";
                       settings.AssociatedControlName = "ownerLabel";
                   }).GetHtml()
                    </td>
                    <td colspan="2">

                        @Html.DevExpress().ComboBox(settings =>
                   {
                       settings.Name = "id_owner";
                       settings.Properties.ClientInstanceName = "id_owner";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.ValueField = "id";
                       settings.Properties.TextField = "name";
                       settings.Properties.ValueType = typeof(int);
                       settings.Properties.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Todos";
                       settings.Properties.NullText = "Todos";

                       settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                       settings.Properties.EnableSynchronization = DefaultBoolean.False;
                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                   }).BindList(DataProviderPerson.PersonsTransportistDriver((int)ViewData["id_company"])).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DevExpress().Label(settings =>
                   {
                       settings.Name = "carRegistrationLabel";
                       settings.Text = "Placa:";
                       settings.AssociatedControlName = "carRegistration";
                   }).GetHtml()
                    </td>
                    <td colspan="2">
                        @Html.DevExpress().TextBox(settings =>
                   {
                       settings.Name = "carRegistration";
                       settings.Properties.ClientInstanceName = "carRegistration";
                       settings.Width = Unit.Percentage(100);

                       settings.Properties.NullDisplayText = "Todos";
                       settings.Properties.NullText = "Todos";
                   }).GetHtml()
                    </td>
                </tr>
            </table>
        </td>
    
        <td style="width: 15%">
            <table class="table table-condensed" style="border: 0px solid #ffffff;">
                <tr style="border-bottom: 1px Solid #C0C0C0;">
                    <td>
                        <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Acciones</span>
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DevExpress().Button(settings =>
                   {
                       settings.Name = "btnSearch";
                       settings.UseSubmitBehavior = false;
                       settings.Text = "Buscar";
                       settings.Images.Image.IconID = IconID.ActionsSearch16x16devav;
                       settings.Width = Unit.Percentage(100);
                       settings.ClientSideEvents.Click = "btnSearch_click";
                   }).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.DevExpress().Button(settings =>
                   {
                       settings.Name = "Clear";
                       settings.UseSubmitBehavior = false;
                       settings.Text = "Limpiar";
                       settings.Images.Image.IconID = IconID.ActionsClear16x16;
                       settings.Width = Unit.Percentage(100);
                       settings.ClientSideEvents.Click = "btnClear_click";
                   }).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="btn-group" style="width: 100%;">
                            <button type="button" class="btn-default custom-button" onclick="AddNewGuideRemissionRiverManual()" aria-haspopup="true" aria-expanded="false">
                                <img class="dxIcon_actions_add_16x16 dx-vam" src="/DXR.axd?r=1_35-2Z17d" alt="" style="margin-right: 4px;" id="AddNewImg"><span>Nueva</span>
                            </button>
                     
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="btn-group" style="width: 100%;">
                            <button type="button" class="btn-default dropdown-toggle custom-button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <img src="~/Content/image/print_preview.png" alt="" style="margin-right: 4px;" id="PrintReports"><span>Reportes</span><span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-right">
                                @{
                                    if (IsEnabled(13))
                                    {
                                        <li><a href="javascript:;" onclick="PRLiquidationRiverVehicle();">Rotaci&oacute;n Transportista</a></li>
                                    }
                                }
                                
                            </ul>
                        </div>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>





}

@functions{

    bool IsEnabled(int id_permission)
    {
        int id_user = (int)ViewData["id_user"];
        int id_menu = (int)ViewData["id_menu"];

        User user = DataProviderUser.UserById(id_user);

        if (user == null)
            return false;

        UserMenu userMenu = user.UserMenu.FirstOrDefault(m => m.Menu.id == id_menu);

        if (userMenu == null)
            return false;

        Permission permission = userMenu.Permission.FirstOrDefault(p => p.id == id_permission);

        return (permission != null);
    }

}

