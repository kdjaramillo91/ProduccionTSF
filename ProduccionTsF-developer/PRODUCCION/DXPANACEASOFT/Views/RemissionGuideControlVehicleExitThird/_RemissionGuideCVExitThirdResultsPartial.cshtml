@using DevExpress.Data
@using System.Drawing
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@{
	var grid = Html.DevExpress().GridView<RemissionGuide>(settings =>
	{
		settings.Name = "gvRemissionGuideControlVehicleExitThird";
		settings.CallbackRouteValues = new { Controller = "RemissionGuideControlVehicleExitThird", Action = "RemissionGuidePartial" };

		settings.Width = Unit.Percentage(100);
		settings.CommandColumn.Visible = true;
		settings.CommandColumn.Width = Unit.Percentage(3);
		settings.CommandColumn.ShowSelectCheckbox = true;
		settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.Page;

		settings.KeyFieldName = "id";

		settings.SettingsPager.Visible = true;
		settings.Settings.ShowGroupPanel = true;
		settings.Settings.ShowFilterRow = true;
		settings.SettingsBehavior.AllowSelectByRowClick = true;
		settings.Settings.ShowFooter = true;
		settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
		settings.Settings.ShowFilterRowMenu = true;

		settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
		settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
		settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
		settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
		settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

		settings.ClientSideEvents.Init = "OnGridViewRemissionGuideControlVehicleExitThirdInit";
		settings.ClientSideEvents.SelectionChanged = "OnGridViewRemissionGuideControlVehicleExitThirdSelectionChanged";
		settings.ClientSideEvents.EndCallback = "OnGridViewRemissionGuideControlVehicleExitThirdEndCallback";

		//Panel para cantidad de registros
		settings.CustomJSProperties = (s, e) =>
		{
			MVCxGridView gv = s as MVCxGridView;
			if (gv == null) return;

			e.Properties["cpVisibleRowCount"] = gv.VisibleRowCount;
			e.Properties["cpFilteredRowCountWithoutPage"] = GetFilteredRowCountWithoutPage(gv);
		};

		settings.SetFooterRowTemplateContent(c =>
		{
			ViewContext.Writer.Write(@"<span id=""lblInfo""></span>");

		});

		settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
		settings.Styles.Header.Font.Bold = true;

		settings.Columns.Add(m => m.Document.number, column =>
		{
			column.Caption = "No. Guía";
			column.Width = Unit.Percentage(8);
			column.ColumnType = MVCxGridViewColumnType.TextBox;
		});
		settings.Columns.Add(m => m.Person2.processPlant, column =>
		{
			column.Caption = "Proceso";
			column.Width = Unit.Percentage(8);
			column.ColumnType = MVCxGridViewColumnType.TextBox;
		});
		settings.Columns.Add(m => m.Document.emissionDate, column =>
		{
			column.Caption = "Fecha de Emisión";
			column.CellStyle.HorizontalAlign = HorizontalAlign.Left;

			column.ColumnType = MVCxGridViewColumnType.DateEdit;
			((DateEditProperties)column.PropertiesEdit).DisplayFormatString = "dd/MM/yyyy";
			((DateEditProperties)column.PropertiesEdit).EditFormatString = "dd/MM/yyyy";
		});
		//guia_externa
		settings.Columns.Add(m => m.Guia_Externa, column =>
		{
			column.Caption = "Guía Externa";
			column.ColumnType = MVCxGridViewColumnType.TextBox;
			column.Width = Unit.Percentage(8);
		});
		settings.Columns.Add(m => m.RemissionGuideControlVehicle.entranceDateProductionBuilding, column =>
		{
			column.Caption = "Fecha de Entrada";
			column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
			column.ColumnType = MVCxGridViewColumnType.DateEdit;
			((DateEditProperties)column.PropertiesEdit).DisplayFormatString = "dd/MM/yyyy";
			((DateEditProperties)column.PropertiesEdit).EditFormatString = "dd/MM/yyyy";
		});
		settings.Columns.Add(m => m.RemissionGuideControlVehicle.entranceTimeProductionBuilding, column =>
		{
			column.Caption = "Hora de Entrada";
			column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
			column.ColumnType = MVCxGridViewColumnType.TextBox;
		});
		settings.Columns.Add(m => m.RemissionGuideTransportation.carRegistration, column =>
		{
			column.Caption = "Placa";
			column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
			column.ColumnType = MVCxGridViewColumnType.TextBox;
		});

		settings.Columns.Add(m => m.RemissionGuideTransportation.driverName, column =>
		{
			column.Caption = "Conductor";
			column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
			column.ColumnType = MVCxGridViewColumnType.TextBox;
		});
	});

	if (ViewData["EditError"] != null)
	{
		grid.SetEditErrorText((string)ViewData["EditError"]);
	}
}
@grid.Bind(Model).GetHtml()

@functions {
    int GetFilteredRowCountWithoutPage(MVCxGridView grid)
    {
        int selectedRowsOnPage = 0;
        string[] values = new string[] { "id" };
        foreach (var key in grid.GetCurrentPageRowValues(values))
        {
            if (grid.Selection.IsRowSelectedByKey(key))
                selectedRowsOnPage++;
        }
        return grid.Selection.FilteredCount - selectedRowsOnPage;
    }

}
