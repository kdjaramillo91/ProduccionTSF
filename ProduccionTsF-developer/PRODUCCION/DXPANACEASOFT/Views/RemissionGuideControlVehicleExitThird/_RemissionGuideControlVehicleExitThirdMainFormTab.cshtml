@using DXPANACEASOFT.DataProviders

@using DXPANACEASOFT.Models.DTOModel
@model DXPANACEASOFT.Models.DTOModel.ControlVehicleDto

@{
	TempData.Keep("remissionGuideForControlVehicleExitThird");
	string codeState = (Model != null && Model.DocumentStateCode != null ) ? Model.DocumentStateCode : "";
	var exitdpb = Model.exitDateProductionBuilding;

	string aSettingFESACA = DataProviderSetting.ValueSetting("FESACA");
	string labelPup = DataProviderSetting.ValueSetting("EUPPPRIM");
}

@Html.Hidden("entranceDateProductionBuildingT", Model.entranceDateProductionBuilding)
@Html.Hidden("entranceTimeProductionBuildingT", Model.entranceTimeProductionBuilding)
@Html.Hidden("exitdpb", exitdpb)

<div id="detailRGCVEcont">
    <table id="RemissionGuideControlVehicleEntranceTable" class="table table-condenced" style="margin: 0px;">
        <tr style="border-bottom: 1px Solid #C0C0C0;">
            <td colspan="4">
                <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Información General</span>
            </td>
        </tr>
        <!--PROVEEDOR Y UNIDAD DE PRODUCCIÓN-->
        <tr>
            <td>
                @Html.DevExpress().Label(settings =>
            {
                settings.Name = "providerAuxLabel";
                settings.Text = "Proveedor:";
                settings.AssociatedControlName = "providerAuxLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.providerNameAux, settings =>
            {
                settings.Name = "providerNameAux";
                settings.Properties.ClientInstanceName = "providerNameAux";
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Label(settings =>
            {
                settings.Name = "productionUnitProviderAuxLabel";
                settings.Text = Model.productionUnitProviderAuxLab;
                settings.AssociatedControlName = "productionUnitProviderAuxLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.productionUnitProviderAux, settings =>
            {
                settings.Name = "productionUnitProviderAuxLab";
                settings.Properties.ClientInstanceName = "productionUnitProviderAuxLab";
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
            </td>
        </tr>
        <!--PISCINA Y TOTAL LIBRAS-->
        <tr>
            <td>
                @Html.DevExpress().Label(settings =>
            {
                settings.Name = "poolNameAuxLabel";
                settings.Text = "Piscina:";
                settings.AssociatedControlName = "poolNameAuxLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.poolNameAux, settings =>
            {
                settings.Name = "poolNameAux";
                settings.Properties.ClientInstanceName = "poolNameAux";
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Label(settings =>
            {
                settings.Name = "totalPoundsAuxLabel";
                settings.Text = "Total Libras:";
                settings.AssociatedControlName = "totalPoundsAuxLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(m => m.totalPoundsAux, settings =>
            {
                settings.Name = "totalPoundsAux";
                settings.Properties.NumberType = SpinEditNumberType.Float;
                settings.Properties.DisplayFormatString = "N2";
            }).GetHtml()
            </td>
        </tr>
        <!--Zona y Sitio-->
        <tr>
            <td>
                @Html.DevExpress().Label(settings =>
            {
                settings.Name = "zoneNameLabel";
                settings.Text = "Zona:";
                settings.AssociatedControlName = "zoneNameLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.zoneNameAux, settings =>
            {
                settings.Name = "zoneNameAux";
                settings.Properties.ClientInstanceName = "zoneNameAux";
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Label(settings =>
            {
                settings.Name = "siteNameAuxLabel";
                settings.Text = "Sitio:";
                settings.AssociatedControlName = "siteNameAuxLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.siteNameAux, settings =>
            {
                settings.Name = "siteNameAux";
                settings.Properties.ClientInstanceName = "siteNameAux";
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
            </td>
        </tr>
        <!--Dirección de Destino y Vía de Transporte-->
        <tr>
            <td>
                @Html.DevExpress().Label(settings =>
            {
                settings.Name = "addressTargetAuxLabel";
                settings.Text = "Dirección Destino:";
                settings.AssociatedControlName = "addressTargetAuxLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.addressTargetAux, settings =>
            {
                settings.Name = "addressTargetAux";
                settings.Properties.ClientInstanceName = "addressTargetAux";
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Label(settings =>
            {
                settings.Name = "shippingTypeAuxLabel";
                settings.Text = "Vía de Transporte:";
                settings.AssociatedControlName = "shippingTypeAuxLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.shippingTypeAux, settings =>
            {
                settings.Name = "shippingTypeAux";
                settings.Properties.ClientInstanceName = "shippingTypeAux";
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
            </td>
        </tr>
        <!--Chofer-->
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
			{
				settings.Name = "driverNameAuxLabel";
				settings.Text = "Chofer:";
				settings.AssociatedControlName = "driverNameAuxLabel";
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.driverNameAux, settings =>
			{
				settings.Name = "driverNameAux";
				settings.Properties.ClientInstanceName = "driverNameAux";
				settings.Width = Unit.Percentage(100);
			}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().Label(settings =>
				{
					settings.Name = "id_personProcessPlantLabel";
					settings.Text = "Proceso:";
				}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.PersonProcessPlant, settings =>
				{
					settings.Name = "id_personProcessPlant";
					settings.Properties.ClientInstanceName = "id_personProcessPlant";
					settings.Width = Unit.Percentage(100);
					settings.ReadOnly = true;
				}).GetHtml()
			</td>
			

		</tr>
        <!--Guia Externa-->
		<tr>
			<td>
				@Html.DevExpress().LabelFor(m => m.RemissionGuide.Guia_Externa, settings =>
		   {
			   settings.Name = "GuiaExternaLabel";
			   settings.Text = "Guía Externa:";
			   settings.AssociatedControlName = "Guía_Externa";
		   }).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.RemissionGuide.Guia_Externa, settings =>
		   {
			   settings.Name = "Guia_Externa";
			   settings.Properties.ClientInstanceName = "Guia_Externa";
			   settings.Width = Unit.Percentage(100);
			   settings.ReadOnly = codeState != "01";
			   settings.Properties.MaxLength = 20;

			  // settings.Properties.NullDisplayText = "Todos";
			  // settings.Properties.NullText = "Todos";
		   }).GetHtml()
			</td>
		</tr>
        <tr style="border-bottom: 1px Solid #C0C0C0;">
            <td colspan="4">
                <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Llegada a Planta</span>
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.entranceDateProductionBuilding, settings =>
            {
                settings.Name = "entranceDateProductionBuildingLabel";
                settings.Text = "Fecha:";
                settings.AssociatedControlName = "entranceDateProductionBuildingLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().DateEditFor(m => m.entranceDateProductionBuilding, settings =>
           {
               settings.Name = "entranceDateProductionBuilding";
               settings.Properties.ClientInstanceName = "entranceDateProductionBuilding";
               settings.Properties.UseMaskBehavior = true;
               settings.Properties.EditFormat = EditFormat.Custom;
               settings.Properties.EditFormatString = "dd/MM/yyyy";
               settings.Properties.DisplayFormatString = "dd/MM/yyyy";
               settings.Width = Unit.Percentage(100);
               settings.ReadOnly = true;
               //settings.Properties.ClientSideEvents.Validation = "entranceDateProductionUnitProviderBuildingValidation";
               //settings.Properties.ClientSideEvents.ValueChanged = "entranceDateProductionUnitProviderBuildingValueChanged";
               //settings.Properties.ClientSideEvents.Init = "entranceDateProductionUnitProviderBuildingOnInit";
               settings.ShowModelErrors = false;
           }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().LabelFor(m => m.entranceTimeProductionBuilding, settings =>
                {
                    settings.Name = "entranceTimeProductionBuildingLabel";
                    settings.Text = "Hora:";
                    settings.AssociatedControlName = "entranceTimeProductionBuildingLabel";
                }).GetHtml()
            </td>
            <td>
                @{
                    TimeSpan? entranceTimeProductionBuilding = (Model != null) ? (TimeSpan?)Model.entranceTimeProductionBuilding : null;
                }

                @Html.DevExpress().TimeEdit(settings =>
           {
               settings.Name = "entranceTimeProductionBuilding";
               settings.Properties.ClientInstanceName = "entranceTimeProductionBuilding";

               settings.Properties.EditFormat = EditFormat.Time;
               settings.Properties.EditFormatString = "HH:mm";
               settings.Properties.DisplayFormatString = "HH:mm";
               settings.Width = Unit.Percentage(100);
               if (entranceTimeProductionBuilding != null)
               {
                   settings.DateTime = new DateTime(2018, 1, 1, entranceTimeProductionBuilding.Value.Hours, entranceTimeProductionBuilding.Value.Minutes, 0);
               }
               settings.ReadOnly = true;
               settings.ShowModelErrors = false;

           }).GetHtml()
            </td>
        </tr>
        <tr style="border-bottom: 1px Solid #C0C0C0;">
            <td colspan="4">
                <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Salida de Planta</span>
            </td>
        </tr>
        <tr>
            <!-- CODIGO VA AQUI-->
            <td>
                @Html.DevExpress().LabelFor(m => m.exitDateProductionBuilding, settings =>
            {
                settings.Name = "exitDateProductionBuildingLabel";
                settings.Text = "Fecha:";
                settings.AssociatedControlName = "exitDateProductionBuildingLabel";
            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().DateEditFor(m => m.exitDateProductionBuilding, settings =>
               {
                   settings.Name = "exitDateProductionBuilding";
                   settings.Properties.ClientInstanceName = "exitDateProductionBuilding";
                   settings.Properties.UseMaskBehavior = true;
                   settings.Properties.EditFormat = EditFormat.Custom;
                   settings.Properties.EditFormatString = "dd/MM/yyyy";
                   settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                   settings.Width = Unit.Percentage(100);
                   settings.Properties.ClientSideEvents.Validation = "exitDateProductionBuildingValidation";
                   settings.Properties.ClientSideEvents.ValueChanged = "exitDateProductionBuildingValueChanged";
                   settings.Properties.ClientSideEvents.Init = "exitDateProductionBuildingOnInit";
                   settings.ShowModelErrors = false;
                   settings.Properties.MinDate = new DateTime(2010,1,1);
                   settings.ReadOnly = (aSettingFESACA == "SI") ? true : false;
               }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().LabelFor(m => m.exitTimeProductionBuilding, settings =>
                {
                    settings.Name = "exitTimeProductionBuildingLabel";
                    settings.Text = "Hora:";
                    settings.AssociatedControlName = "exitTimeProductionBuildingLabel";
                }).GetHtml()
            </td>
            <td>
                @{
                    TimeSpan? exitTimeProductionBuilding = (Model != null) ? (TimeSpan?)Model.exitTimeProductionBuilding : null;
                }

                @Html.DevExpress().TimeEdit(settings =>
		   {
			   settings.Name = "exitTimeProductionBuilding";
			   settings.Properties.ClientInstanceName = "exitTimeProductionBuilding";

			   settings.Properties.EditFormat = EditFormat.Time;
			   settings.Properties.EditFormatString = "HH:mm";
			   settings.Properties.DisplayFormatString = "HH:mm";
			   settings.Width = Unit.Percentage(100);
			   settings.ReadOnly = (aSettingFESACA == "SI") ? true : false;
			   if (exitTimeProductionBuilding != null)
			   {
				   settings.DateTime = new DateTime(2018, 1, 1, exitTimeProductionBuilding.Value.Hours, exitTimeProductionBuilding.Value.Minutes, 0);
			   }
			   if (exitTimeProductionBuilding == null && aSettingFESACA == "SI")
			   {
				   settings.DateTime = DateTime.Now;
			   }
			   settings.ShowModelErrors = false;
			   settings.Properties.ClientSideEvents.Validation = "exitTimeProductionBuildingValidation";
			   settings.Properties.ClientSideEvents.ValueChanged = "exitTimeProductionBuildingValueChanged";

		   }).GetHtml()
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.ObservationExit, settings =>
            {
                settings.Name = "ObservationExitLabel";
                settings.Text = "Observación:";
                settings.AssociatedControlName = "ObservationExitLabel";
            }).GetHtml()
            </td>
            <td colspan="5">
                @Html.DevExpress().TextBoxFor(m => m.ObservationExit, settings =>
            {
                settings.Name = "ObservationExit";
                settings.Properties.ClientInstanceName = "ObservationExit";
                settings.Width = Unit.Percentage(100);
                settings.ShowModelErrors = false;
            }).GetHtml()
            </td>
        </tr>

    </table>


</div>
