
@using System.Drawing
@using DXPANACEASOFT.Models.DTOModel

@{
	var grid = Html.DevExpress().GridView<ClosePlateTunnelCoolResultConsultDTO>(settings =>
	{
		settings.Name = "GridViewClosingMachinesTurn";
		settings.CallbackRouteValues = new
		{
			Controller = "ClosePlateTunnelCool",
			Action = "GridViewClosePlateTunnelCool",
		};

		settings.KeyFieldName = "id";

		settings.SettingsPager.Visible = true;
		settings.Settings.ShowGroupPanel = true;
		settings.Settings.ShowFilterRow = true;
		settings.Settings.ShowFilterRowMenu = true;
		settings.Settings.ShowFooter = true;

		settings.SettingsBehavior.AllowSelectByRowClick = true;
		settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
		settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
		settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
		settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
		settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

		settings.Width = Unit.Percentage(100);

		settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
		settings.Styles.Header.Font.Bold = true;

		settings.ClientSideEvents.RowClick = "OnGridFocusedRowChanged";

		settings.Columns.Add(column =>
		{
			column.FieldName = "id";
			column.Name = "id";
			column.Visible = false;
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "canEdit";
			column.Name = "canEdit";
			column.Visible = false;
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "canAproved";
			column.Name = "canAproved";
			column.Visible = false;
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "canReverse";
			column.Name = "canReverse";
			column.Visible = false;
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "canAnnul";
			column.Name = "canAnnul";
			column.Visible = false;
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "number";
			column.Caption = "No. de Cierre";
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "closeDate";
			column.Caption = "Fecha de Cierre";
			column.ColumnType = MVCxGridViewColumnType.DateEdit;
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "closeTime";
			column.Caption = "Hora de Cierre";
			column.ColumnType = MVCxGridViewColumnType.TimeEdit;
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "startEmissionDate";
			column.Caption = "Fecha de Apertura";
			column.ColumnType = MVCxGridViewColumnType.DateEdit;
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "machineForProd";
			column.Caption = "Máquina";
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "plantProcess";
			column.Caption = "Proceso";
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "turn";
			column.Caption = "Turno";
		});

		settings.Columns.Add(column =>
		{
			column.FieldName = "state";
			column.Caption = "Estado";
		});

		MVCxGridViewCommandColumn commandColumn = new MVCxGridViewCommandColumn
		{
			ShowEditButton = false,
			ShowDeleteButton = false,
			Visible = true,
			VisibleIndex = 14,
			Caption = "Acción",
			Width = Unit.Percentage(8)
		};

		commandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton
		{
			ID = "btnShowRow",
			Text = "Mostrar"
		});

		settings.ClientSideEvents.CustomButtonClick = "GridViewBtnShow_Click";
		settings.ClientSideEvents.RowDblClick = "GridViewBtnShow_Click";
		settings.Columns.Add(commandColumn);

	});
}
@grid.Bind(Model).GetHtml()