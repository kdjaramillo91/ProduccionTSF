@using DXPANACEASOFT.DataProviders

@model DXPANACEASOFT.Models.Document
@{
    string codeState = (Model != null && Model.DocumentState.code != "") ? Model.DocumentState.code : "";
}
<table class="table table-condensed" style="margin: 0px;">
    <tr>
        <td style="width: 10%;">
            @Html.DevExpress().LabelFor(m => m.DocumentType.name, settings =>
            {
                settings.Name = "documentTypeLabel";
                settings.Text = "Tipo de Documento:";
                settings.AssociatedControlName = "documentType";
            }).GetHtml()
        </td>
        <td>
            @{
                int? id_documentType = (Model != null && Model.id_documentType != 0) ? (int?)Model.id_documentType : null;
            }
            @Html.DevExpress().ComboBoxFor(m => m.id_documentType, settings =>
           {
               settings.Name = "id_documentType";
               settings.Properties.ClientInstanceName = "id_documentType";
               settings.Width = Unit.Percentage(100);
               settings.Properties.ValueField = "id";
               settings.Properties.TextField = "name";
               settings.Properties.ValueType = typeof(int);
               settings.Properties.Width = Unit.Percentage(100);
               settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
               settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
               settings.Properties.EnableSynchronization = DefaultBoolean.False;
               settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
               //settings.Enabled = codeState == "01";
               settings.ReadOnly = id_documentType != null;
               settings.ShowModelErrors = true;
               settings.Properties.ClientSideEvents.Validation = "OnPriceListDocumentTypeValidation";
               settings.Properties.ClientSideEvents.SelectedIndexChanged = "ComboDocumentType_SelectedIndexChanged";

           }).BindList(DataProviderDocumentType.DocumentTypesOfPriceListByCompany((int?)ViewData["id_company"])).Bind(id_documentType).GetHtml()
        </td>
        @*<td>
            @Html.HiddenFor(m => m.id_documentType, new { @id = "id_documentType" })
            @Html.DevExpress().TextBoxFor(m => m.DocumentType.name, settings =>
            {
                settings.Name = "documentTypeName";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = true;
            }).GetHtml()
        </td>*@
        <td style="width: 10%;">
            @Html.DevExpress().LabelFor(m => m.number, settings =>
            {
                settings.Name = "numberLabel";
                settings.Text = "No. Documento:";
                settings.AssociatedControlName = "number";

            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().TextBoxFor(m => m.number, settings =>
            {
                settings.Name = "number";
                settings.Properties.ClientInstanceName = "number";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = true;
            }).GetHtml()
        </td>
        <td style="width: 10%;">
            @Html.DevExpress().LabelFor(m => m.DocumentState.name, settings =>
            {
                settings.Name = "documentStateLabel";
                settings.Text = "Estado:";
                settings.AssociatedControlName = "documentState";
            }).GetHtml()
        </td>
        <td>
            @Html.HiddenFor(m => m.id_documentState, new { @id = "id_documentState" })
            @Html.DevExpress().TextBoxFor(m => m.DocumentState.name, settings =>
            {
                settings.Name = "documentStateName";
                settings.Width = Unit.Percentage(100);
                settings.ReadOnly = true;
            }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().LabelFor(m => m.emissionDate, settings =>
            {
                settings.Name = "emissionDateLabel";
                settings.Text = "Fecha de Emisión:";
                settings.AssociatedControlName = "emissionDate";
            }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().DateEditFor(m => m.emissionDate, settings =>
           {
               settings.Name = "emissionDate";
               settings.Properties.ClientInstanceName = "emissionDate";
               settings.Width = Unit.Percentage(100);
               settings.ReadOnly = codeState != "01"; //(@Model.id != 0);
                //settings.Properties.DropDownButton.Visible = false;
               settings.Properties.ClientSideEvents.Validation = "OnPriceListEmissionDateValidation";
           }).GetHtml()
        </td>
        <td>
            @*@Html.DevExpress().Label( settings =>
            {
                settings.Name = "accessKeyLabel";
                settings.Text = "";
                settings.AssociatedControlName = "accessKey";
            }).GetHtml()*@
        </td>
        <td colspan="3">
            @*@Html.DevExpress().Label(settings =>
           {
               settings.Name = "accessKeyLabel2";
               settings.Text = "";
               settings.AssociatedControlName = "accessKey2";
           }).GetHtml()*@
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().LabelFor(m => m.description, settings =>
            {
                settings.Name = "descriptionLabel";
                settings.Text = "Descripción:";
                settings.AssociatedControlName = "description";
            }).GetHtml()
        </td>
        <td colspan="5">
            @Html.DevExpress().MemoFor(m => m.description, settings =>
           {
               settings.Name = "description";
               settings.Properties.ClientInstanceName = "description";
               settings.ReadOnly = codeState != "01";
               settings.Width = Unit.Percentage(100);
           }).GetHtml()
        </td>
    </tr>
</table>

<script src="~/Scripts/pricelist/_priceListTabDocumentEditForm.js"></script>