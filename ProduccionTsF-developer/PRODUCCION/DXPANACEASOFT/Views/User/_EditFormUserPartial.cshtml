@using System.Web.Mvc.Html
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@model DXPANACEASOFT.Models.User

@{
	var id_user = (Model != null) ? Model.id : 0;
	var passwordAux = (Model != null) ? Model.password : "";
	var modelUserObjectPermissions = Model.ObjectPermissionUser.Where(e => e.id_user == id_user).ToList();
}

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formEditUser", name = "formEditUser" }))
{
	@Html.Hidden("id_user", id_user)
	@Html.Hidden("passwordAux", passwordAux)

	<table class="table table-condenced">
		<tr style="border-bottom: 1px Solid #C0C0C0;">
			<td colspan="8">
				<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Editar Usuarios</span>
			</td>
		</tr>
		<tr>
			<td style="width: 10%;">
				@Html.DevExpress().Label(settings =>
				{
					settings.Text = "Nombre de Usuario:*";
					settings.AssociatedControlName = "username";
				}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.username, settings =>
				{
					settings.Name = "username";
					settings.Properties.ClientInstanceName = "username";

					settings.ShowModelErrors = true;
					settings.Properties.ClientSideEvents.Validation = "OnUserNameValidation";

				}).GetHtml()
			</td>
			<td style="width: 10%;">
				@Html.DevExpress().Label(settings =>
				{
					settings.Text = "Contraseña:*";
					settings.AssociatedControlName = "password";
				}).GetHtml()
			</td>
			<td>
				@{

				}
				@Html.DevExpress().TextBox(settings =>
		   {
			   settings.Name = "passwordName";
			   settings.Properties.ClientInstanceName = "passwordName";
			   settings.Properties.Password = true;

			   settings.ShowModelErrors = true;
			   settings.Properties.ClientSideEvents.Validation = "OnPasswordValidation";

			   //settings.Text = passwordAux;
			   settings.Properties.ClientSideEvents.Init = "Init_PasswordName";
			   //settings.ReadOnly = (id_user != 0);
			   //settings.Enabled = (id_user == 0);

		   }).GetHtml()
				@*Bind((Model != null) ? Model.password : "").GetHtml()*@
			</td>
			<td style="width: 10%;">
				@Html.DevExpress().Label(settings =>
				{
					settings.Text = "Grupo:*";
					settings.AssociatedControlName = "id_group";
				}).GetHtml()
			</td>
			<td>
				@{
					var id_group = (Model != null && Model.id_group != 0) ? (int?)Model.id_group : null;
				}
				@Html.DevExpress().ComboBoxFor(m => m.id_group, settings =>
				{
					settings.Name = "id_group";
					settings.Properties.ClientInstanceName = "id_group";
					settings.Properties.Password = true;

					settings.Properties.ValueField = "id";
					settings.Properties.TextField = "name";
					settings.Properties.ValueType = typeof(int);

					settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
					settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
					settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

					settings.ShowModelErrors = true;
					settings.Properties.ClientSideEvents.Validation = "OnGroupValidation";
					settings.Properties.ClientSideEvents.SelectedIndexChanged = "GroupSelectedIndexChange";

				}).BindList(DataProviderUserGroup.UserGroups()).Bind(id_group).GetHtml()
			</td>
			<td style="width: 10%;">
				@Html.DevExpress().Label(settings =>
				{
					settings.Text = "Empleado:";
					settings.AssociatedControlName = "id_employee";
				}).GetHtml()
			</td>
			<td>
				@{
					var id_employee = (Model != null && Model.id_employee != 0) ? (int?)Model.id_employee : null;
				}
				@Html.DevExpress().ComboBoxFor(m => m.id_employee, settings =>
				{
					settings.Name = "id_employee";
					settings.Properties.ClientInstanceName = "id_employee";
					settings.Properties.Password = true;

					settings.Properties.ValueField = "id";
					settings.Properties.TextField = "fullname_businessName";
					settings.Properties.ValueType = typeof(int);

					settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
					settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
					settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

					settings.ShowModelErrors = true;
					settings.Properties.ClientSideEvents.Validation = "OnEmployeeValidation";

				}).BindList(DataProviderPerson.Employees()).Bind(id_employee).GetHtml()
			</td>
		</tr>
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
				{
					settings.Text = "Puntos de Emisión*:";
					settings.AssociatedControlName = "isActive";
				}).GetHtml()
			</td>
			<td colspan="7">
				@{
					var emissionsPoints = (Model != null && Model.EmissionPoint != null && Model.EmissionPoint.Count() > 0 && Model.EmissionPoint.FirstOrDefault(fod => fod.name == null) == null) ? Model.EmissionPoint.ToList() : new List<EmissionPoint>();
				}
				@Html.DevExpress().TokenBox(p =>
		   {
			   p.Name = "EmissionPoint";
			   p.Properties.ClientInstanceName = "EmissionPoint";

			   p.Width = Unit.Percentage(100);

			   p.Properties.ValueField = "id";
			   p.Properties.TextField = "name";

			   p.Properties.AllowCustomTokens = false;

			   foreach (var emissionPoint in emissionsPoints)
			   {
				   if (emissionPoint.name != null) p.Properties.Tokens.Add(emissionPoint.name);
			   }
			   p.Properties.ClientSideEvents.Validation = "OnEmissionPointValidation";
			   //p.Properties.Tokens
			   p.ShowModelErrors = true;

		   }).BindList(DataProviderEmissionPoint.EmissionPoints((int?)ViewData["id_company"])).GetHtml()
			</td>
		</tr>
		<tr>
			<td>
				@Html.DevExpress().Label(settings =>
				{
					settings.Text = "¿Activo?:";
					settings.AssociatedControlName = "isActive";
				}).GetHtml()
			</td>
			<td>
				@Html.DevExpress().CheckBoxFor(m => m.isActive, settings =>
				{
					settings.Properties.ClientInstanceName = "isActive";

					settings.Width = Unit.Percentage(100);
				}).GetHtml()
			</td>
		</tr>
		<tr style="border-bottom: 1px Solid #C0C0C0;">
			@*<td colspan="8">
						<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Men&uacute;es y Permisos</span>
					</td>
				</tr>
				<tr>*@
			<td colspan="8">
				
				@Html.DevExpress().PageControl(pageControl =>
			   {
				   pageControl.Name = "ItemPageControl";
				   pageControl.SetDefaultSettings();
				   pageControl.TabPages.Add(tabPage =>
				   {
					   tabPage.Name = "DataMenuTabPage";
					   tabPage.Text = "Menúes y Permisos";
					   tabPage.SetContent(() =>
					   {
						   Html.RenderPartial("_CallbackPanelPartial");
					   });
				   });

				   if (id_user > 0)
				   {
					   pageControl.TabPages.Add(tabPage =>
					   {
						   tabPage.Name = "DataObjetosTabPage";
						   tabPage.Text = "Objetos";
						   tabPage.SetContent(() =>
						   {
							   var modelObjectUser = Model.ObjectPermissionUser ?? new List<ObjectPermissionUser>();
							   //Html.RenderPartial("_UserObjectEditToolBarPartial");
							   Html.RenderPartial("_UserObjectEditGridViewPartial", modelObjectUser.ToList());
						   });

					   }); 
				   }
			   }).GetHtml()
			</td>
		</tr>
		<tr>
			<td colspan="8" style="text-align: right;">
				@Html.DevExpress().Button(settings =>
				{
					settings.Name = "btnUpdate";
					settings.Text = "Actualizar";
					settings.RenderMode = ButtonRenderMode.Button;
					settings.ImagePosition = ImagePosition.Left;
					settings.Images.Image.IconID = IconID.ActionsSave16x16devav;
					settings.UseSubmitBehavior = false;
					settings.ClientSideEvents.Click = "ButtonUpdate_Click";
				}).GetHtml()
				@Html.DevExpress().Button(settings =>
				{
					settings.Name = "btnCancel";
					settings.Text = "Cancelar";
					settings.RenderMode = ButtonRenderMode.Button;
					settings.ImagePosition = ImagePosition.Left;
					settings.Images.Image.IconID = IconID.ActionsClose16x16office2013;
					settings.UseSubmitBehavior = false;
					settings.ClientSideEvents.Click = "ButtonCancel_Click";
				}).GetHtml()
			</td>
		</tr>
	</table>
}

<script src="~/Scripts/shared/md5.min.js"></script>
<script src="~/Scripts/user/editform.js"></script>
<script src="~/Scripts/user/validation.js"></script>
