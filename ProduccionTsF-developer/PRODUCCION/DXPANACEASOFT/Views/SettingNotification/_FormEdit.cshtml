
@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.SettingNotification


<div class="row" style="padding-bottom: 2px; display: none">
    @Html.DevExpress().TextBoxFor(model => model.id, settings =>
    {
        settings.Name = "idSettingNotification";
        settings.Width = Unit.Percentage(100);
        settings.ReadOnly = true;
    }).GetHtml()
</div>
<div class="row" style="padding-bottom: 2px;">
    <div class="col-lg-2">
        Titulo:
    </div>
    <div class="col-lg-10">
        @Html.DevExpress().TextBoxFor(model => model.title, settings =>
        {
            settings.Name = "title";
            settings.Properties.NullText = "Nombre o Titulo de la Notificación";
            settings.Width = Unit.Percentage(100);
            settings.ShowModelErrors = true;
        }).GetHtml()
    </div>
</div>
<div class="row" style="padding-bottom: 2px;">
    <div class="col-lg-2">
        Descripción:
    </div>
    <div class="col-lg-10">
        @Html.DevExpress().MemoFor(model => model.description, settings =>
        {
            settings.Name = "description";
            settings.Properties.NullText = "Detalles que desee especificar";
            settings.Width = Unit.Percentage(100);
            settings.Height = Unit.Pixel(30);
            settings.ShowModelErrors = true;
        }).GetHtml()
    </div>
</div>
<div class="row" style="padding-bottom: 2px;">
    <div class="col-lg-2">
        Tipo de Documento:
    </div>
    <div class="col-lg-10">
        @{
            int? id_documentType = (Model != null && Model.id_documentType != 0) ? Model.id_documentType : (int?)null;
        }
        @Html.DevExpress().ComboBoxFor(model => model.id_documentType, settings =>
        {
            settings.Name = "id_documentType";
            settings.Width = Unit.Percentage(100);
            settings.Properties.TextField = "name";
            settings.Properties.ValueField = "id";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.NullText = "Tipo de Documento que cambia";
            settings.ShowModelErrors = true;
        }).BindList(DataProviderDocumentType.DocumentTypes()).Bind(id_documentType).GetHtml()
    </div>
</div>
<div class="row" style="padding-bottom: 2px;">
    <div class="col-lg-2">
        Modificado A:
    </div>
    <div class="col-lg-10">
        @{
            int? id_documentState = (Model != null && Model.id_documentState != 0) ? Model.id_documentState : (int?)null;
        }
        @Html.DevExpress().ComboBoxFor(model => model.id_documentState, settings =>
        {
            settings.Name = "id_documentState";
            settings.Width = Unit.Percentage(100);
            settings.Properties.TextField = "name";
            settings.Properties.ValueField = "id";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.NullText = "Nuevo Estado del Tipo de Documento";
            settings.ShowModelErrors = true;
        }).BindList(DataProviderDocumentState.DocumentStates()).Bind(id_documentState).GetHtml()
    </div>
</div>
<div class="row" style="padding-bottom: 2px;">
    <div class="col-lg-2">
        Enviar Correo:
    </div>
    <div class="col-lg-10">
        @Html.DevExpress().CheckBoxFor(model => model.sendByMail, settings =>
        {
            settings.Name = "sendByMail";
            settings.Width = Unit.Percentage(100);
            settings.Properties.ValueType = typeof(bool);
            settings.ShowModelErrors = true;
        }).GetHtml()
    </div>
</div>
<div class="row" style="padding-bottom: 2px;">
    <div class="col-lg-2">
        Notificar A:
    </div>
    <div class="col-lg-10">
        @Html.DevExpress().MemoFor(model => model.addressesMails, settings =>
        {
            settings.Name = "addressesMails";
            settings.Width = Unit.Percentage(100);
            settings.Height = Unit.Pixel(30);
            settings.Properties.NullText = "Escriba los correos separados por (;)";
            settings.ShowModelErrors = true;
        }).GetHtml()
    </div>
</div>

<div class="row" style="padding-bottom: 2px;">
    <table style="margin: 10px;" class="pull-right">
        <tr>
            <td style="padding: 5px;">
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnUpdate";
                    settings.Text = "Actualizar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsRemove16x16;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonUpdate_Click";
                }).GetHtml()
            </td>
            <td style="padding: 5px;">
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnCancel";
                    settings.Text = "Cerrar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonCancel_Click";
                }).GetHtml()
            </td>
        </tr>
    </table>
</div>