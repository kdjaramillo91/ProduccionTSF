@using System.Globalization
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@model DXPANACEASOFT.Models.RemissionGuideRiver

@{
    int id_remissionGuideriver = (Model != null) ? Model.id : 0;
    
    string codeDocumentState = (Model.Document != null) ? (Model.Document.DocumentState != null ? Model.Document.DocumentState.code : "") : "";
}

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formEditRemissionGuideRiver", name = "formEditRemissionGuideRiver" }))
{
    if (ViewData["EditMessage"] != null)
    {
        @Html.Raw(ViewData["EditMessage"]);
    }

    //@Html.Hidden("id_remissionriverGuide", id_remissionGuideriver)

    @Html.Hidden("id_remissionriverGuide", id_remissionGuideriver, new { idremissionriverGuide = id_remissionGuideriver })
    @Html.Hidden("codeDocumentState", codeDocumentState)
    

    @Html.DevExpress().PageControl(tabs =>
{
    tabs.Name = "tabControl";
    tabs.Width = Unit.Percentage(100);
    tabs.EnableClientSideAPI = true;

    tabs.ClientSideEvents.Init = "TabControl_Init";
    tabs.ClientSideEvents.ActiveTabChanged = "TabControl_ActiveTabChanged";

    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabDocument";
        tab.Text = "Documento    ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            var document = (Model != null && Model.Document != null) ? Model.Document : new Document();
            Html.RenderPartial("DocumentTemplates/_DocumentFormEdit", document);
        });
    });
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabRemissionGuide";
        tab.Text = "Guia de Remisión    ";

        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            Html.RenderPartial("_RemissionGuideRiverMainFormTabRemissionGuide");
        });
    });

    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabDetails";
        tab.Text = "Detalles   ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {

            List<RemissionGuideRiverDetail> details = (Model != null && Model.RemissionGuideRiverDetail != null)
                                                    ? Model.RemissionGuideRiverDetail.Where(d => d.isActive).ToList()
                                                    : new List<RemissionGuideRiverDetail>();
            if (codeDocumentState == "01")
            {
                Html.RenderPartial("RemissionGuideRiverButtons/_RemissionGuideRiverDetailsActionsButtons");
                Html.RenderPartial("_Details", details);
            }
            else
            {
                Html.RenderPartial("_RemissionGuideRiverDetailViewDetailsPartial", details);
            }
        });
    });

    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabTransportation";
        tab.Text = "Transporte   ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            RemissionGuideRiverTransportation transportation = (Model != null && Model.RemissionGuideRiverTransportation != null) ? Model.RemissionGuideRiverTransportation : new RemissionGuideRiverTransportation();

            transportation.RemissionGuideRiver = Model ?? new RemissionGuideRiver();
            Html.RenderPartial("_Transportation", transportation);
            Html.RenderPartial("_LiquidationInformation", Model);
        });
    });

    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabSecuritySeals";
        tab.NewLine = true;
        tab.Text = "Sellos    ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            List<RemissionGuideRiverSecuritySeal> securitySeals = (Model != null && Model.RemissionGuideRiverSecuritySeal != null)
                                                                ? Model.RemissionGuideRiverSecuritySeal.ToList()
                                                                : new List<RemissionGuideRiverSecuritySeal>();
            if (codeDocumentState == "01")
            {
                Html.RenderPartial("RemissionGuideRiverButtons/_RemissionGuideRiverSecuritySealsActionsButtons");
                Html.RenderPartial("_SecuritySealsRiver", securitySeals);
            }
            else
            {
                Html.RenderPartial("_RemissionGuideRiverDetailViewSecuritySealsPartial", securitySeals);
            }
        });
    });
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabAssignedStaff";
        tab.Text = "Personal Asignado    ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {

            List<RemissionGuideRiverAssignedStaff> assignedStaff = (Model != null && Model.RemissionGuideRiverAssignedStaff != null)
                                                                ? Model.RemissionGuideRiverAssignedStaff.Where(d => d.isActive).ToList()
                                                                : new List<RemissionGuideRiverAssignedStaff>();

            if (codeDocumentState == "01")
            {
                Html.RenderPartial("RemissionGuideRiverButtons/_RemissionGuideRiverAssignedStaffActionsButtons");
                Html.RenderPartial("_AssignedStaffRiver", assignedStaff);
            }
            else
            {
                Html.RenderPartial("_RemissionGuideRiverDetailViewAssignedStaffPartial", assignedStaff);
            }
        });
    });
    tabs.TabPages.Add(tab =>
    {
        tab.Name = "tabDispatchMaterials";
        tab.Text = "Materiales de Despacho   ";
        tab.TabStyle.Width = Unit.Percentage(100);

        tab.TabImage.Width = Unit.Pixel(16);
        tab.TabImage.Height = Unit.Pixel(16);
        tab.TabImage.Align = ImageAlign.Right;
        tab.TabImage.Url = "/Content/image/noimage.png";
        tab.ActiveTabImage.Align = ImageAlign.Right;
        tab.ActiveTabImage.Url = "/Content/image/noimage.png";

        tab.SetContent(() =>
        {
            List<RemissionGuideRiverDispatchMaterial> dispatchMaterials = (Model != null && Model.RemissionGuideRiverDispatchMaterial != null) ? Model.RemissionGuideRiverDispatchMaterial.ToList() : new List<RemissionGuideRiverDispatchMaterial>();

            Html.RenderPartial("_RemissionGuideRiverDetailViewDispatchMaterialsPartial", dispatchMaterials);
        });
    });

}).GetHtml()

    <table class="table table-condensed">
        <tr style="border-top: 1px Solid #C0C0C0;">
            <td colspan="6" style="text-align: right; margin-top: 5px;">
                @{
                    Html.DevExpress().Button(button =>
                    {

                        button.Name = "btnUpdate";
                        button.Text = "Actualizar";
                        button.RenderMode = ButtonRenderMode.Button;
                        button.ImagePosition = ImagePosition.Left;
                        button.Images.Image.IconID = IconID.ActionsSave16x16devav;
                        button.UseSubmitBehavior = false;
                        button.ClientVisible = IsEnabled(11);
                        button.ValidateInvisibleEditors = true;
                        button.ClientSideEvents.Click = "ButtonUpdate_Click";
                        button.ClientEnabled = codeDocumentState == "01"; //Pendiente
                    }).Render();

                    ViewContext.Writer.Write("&nbsp;&nbsp;");

                    Html.DevExpress().Button(button =>
                    {
                        button.Name = "btnClose";
                        button.Text = "Cerrar";
                        button.RenderMode = ButtonRenderMode.Button;
                        button.ImagePosition = ImagePosition.Left;
                        button.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                        button.UseSubmitBehavior = false;
                        button.ClientSideEvents.Click = "ButtonCancel_Click";
                    }).Render();
                }
            </td>
        </tr>
    </table>
}


<script src="~/Scripts/remissionguideriver/editform.js"></script>

@functions{

    bool IsEnabled(int id_permission)
    {
        int id_user = (int)ViewData["id_user"];
        int id_menu = (int)ViewData["id_menu"];

        User user = DataProviderUser.UserById(id_user);

        if (user == null)
            return false;

        UserMenu userMenu = user.UserMenu.FirstOrDefault(m => m.Menu.id == id_menu);

        if (userMenu == null)
            return false;

        Permission permission = userMenu.Permission.FirstOrDefault(p => p.id == id_permission);

        return (permission != null);
    }

}
