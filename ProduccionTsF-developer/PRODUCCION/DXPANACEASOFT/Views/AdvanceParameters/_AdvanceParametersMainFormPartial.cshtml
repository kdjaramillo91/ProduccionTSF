@using System.Globalization
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@model DXPANACEASOFT.Models.AdvanceParameters

@{
    int id_AdvanceParameters = (Model != null) ? Model.id : 0;
    TimeSpan? TimeInit = (Model != null) ? (TimeSpan?)Model.valueTime : null;
    var dateTimeTimeInitLiquidationAux = (TimeInit == null) ? new DateTime(2014,1,1,0,0,0) :
                                                                                     new DateTime(2014, 1, 1,TimeInit.Value.Hours, TimeInit.Value.Minutes, TimeInit.Value.Seconds);
}


@{
    if (ViewData["EditMessage"] != null)
    {
        @Html.Raw(ViewData["EditMessage"]);
    }

    @Html.Hidden("id_AdvanceParameters", id_AdvanceParameters)


    <div id="GridMessageError" style="display: none;">
      
    </div>
    <table class="table table-condenced" style="margin: 0px;">
        <tr style="border-bottom: 1px Solid #C0C0C0;">
            <td colspan="6">
                <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Información</span>
            </td>
        </tr>
        <tr>

            <td>
                @Html.DevExpress().LabelFor(m => m.code, settings =>
                {
                    settings.Name = "codeLabel";
                    settings.Text = "Código:";
                    settings.AssociatedControlName = "code";
                }).GetHtml()


            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.code, settings =>
                {
                    settings.Name = "code";
                    settings.Properties.ClientInstanceName = "code";
                    settings.Properties.NullText = "Código";
                    settings.Width = Unit.Percentage(100);
                    settings.Height = Unit.Percentage(100);
                    settings.Properties.ClientSideEvents.Validation = "OnCodeValidation";
                    settings.ShowModelErrors = true;
                    settings.Properties.MaxLength = 20;
                    settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
                }).GetHtml()

            </td>
            <td>
                @Html.DevExpress().LabelFor(m => m.description, settings =>
                {
                    settings.Name = "descriptionLabel";
                    settings.Text = "Descripción:";
                    settings.AssociatedControlName = "code";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.description, settings =>
                {
                    settings.Name = "description";
                    settings.Properties.ClientInstanceName = "description";
                    settings.Properties.NullText = "Descripción";
                    settings.Width = Unit.Percentage(100);
                    settings.Height = Unit.Percentage(100);
                    settings.Properties.ClientSideEvents.Validation = "OnNameValidation";
                    settings.ShowModelErrors = true;
                    settings.Properties.MaxLength = 50;
                    settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
                }).GetHtml()
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.valueVarchar, settings =>
                {
                    settings.Name = "valueVarcharLabel";
                    settings.Text = "Valor Texto:";
                    settings.AssociatedControlName = "valueVarchar";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TextBoxFor(m => m.valueVarchar, settings =>
                {
                    settings.Name = "valueVarchar";
                    settings.Properties.ClientInstanceName = "valueVarchar";
                    settings.Properties.NullText = "Valor de Texto";
                    settings.Width = Unit.Percentage(100);
                    settings.Height = Unit.Percentage(100);
                    //settings.Properties.ClientSideEvents.Validation = "OnValueChar";
                    settings.ShowModelErrors = true;
                    settings.Properties.MaxLength = 20;
                    settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().LabelFor(m => m.valueInteger, settings =>
                {
                    settings.Name = "valueIntegerLabel";
                    settings.Text = "Valor Numérico:";
                    settings.AssociatedControlName = "valueInteger";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(m => m.valueInteger, settings =>
                {
                    settings.Name = "valueInteger";
                    settings.Properties.ClientInstanceName = "valueInteger";
                    settings.Width = Unit.Percentage(100);
                    //settings.Properties.ClientSideEvents.Validation = "OnValueChar";
                    settings.ShowModelErrors = true;
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.valueDecimal, settings =>
                {
                    settings.Name = "valueDecimalLabel";
                    settings.Text = "Valor Décimal:";
                    settings.AssociatedControlName = "valueDecimal";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(m => m.valueDecimal, settings =>
                {
                    settings.Name = "valueDecimal";
                    settings.Properties.ClientInstanceName = "valueDecimal";
                    settings.Width = Unit.Percentage(100);
                    settings.Properties.DisplayFormatString = "N2";
                    settings.ShowModelErrors = true;
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().LabelFor(m => m.valueDate, settings =>
                {
                    settings.Name = "valueDateLabel";
                    settings.Text = "Valor Fecha:";
                    settings.Properties.DisplayFormatString = "N2";
                    settings.AssociatedControlName = "valueInteger";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().DateEditFor(m => m.valueDate, settings =>
                {
                    settings.Name = "valueDate";
                    settings.Properties.ClientInstanceName = "valueDate";
                    settings.Width = Unit.Percentage(92);
                }).GetHtml()
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.valueTime, settings =>
                {
                    settings.Name = "valueTimeLabel";
                    settings.Text = "Valor Tiempo:";
                    settings.AssociatedControlName = "valueTime";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().TimeEdit(timeEdit =>
                 {
                     timeEdit.Name = "valueTime";
                     timeEdit.Properties.ClientInstanceName = "valueTime";
                     timeEdit.Width = Unit.Percentage(92);
                     timeEdit.Properties.DisplayFormatInEditMode = true;
                     timeEdit.Properties.EditFormatString = "HH:mm:ss";
                     timeEdit.Properties.DisplayFormatString = "HH:mm:ss";
                     timeEdit.Properties.EditFormat = EditFormat.Custom;
                     timeEdit.ShowModelErrors = false;
                     timeEdit.DateTime = dateTimeTimeInitLiquidationAux;
                     timeEdit.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;

                 }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().LabelFor(m => m.hasDetail, settings =>
               {
                   settings.Name = "hasDetailLabel";
                   settings.Text = "¿Detalle?:";
                   settings.AssociatedControlName = "hasDetail";
               }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().CheckBoxFor(m => m.hasDetail, settings =>
             {
                 settings.Name = "hasDetail";
                 //settings.ReadOnly = (@Model.id != 0);
             }).GetHtml()
            </td>

        </tr>

    </table>

    <table class="table table-condensed">
        <tr style="border-top: 1px Solid #C0C0C0;">
            <td colspan="6" style="text-align: right; margin-top: 5px;">
                @{
                    Html.DevExpress().Button(button =>
                    {

                        button.Name = "btnUpdate";
                        button.Text = "Actualizar";
                        button.RenderMode = ButtonRenderMode.Button;
                        button.ImagePosition = ImagePosition.Left;
                        button.Images.Image.IconID = IconID.ActionsSave16x16devav;
                        button.UseSubmitBehavior = false;
                        button.ValidateInvisibleEditors = true;
                        button.ClientSideEvents.Click = "ButtonUpdate_Click";
               
                    }).Render();

                    ViewContext.Writer.Write("&nbsp;&nbsp;");

                    Html.DevExpress().Button(button =>
                    {
                        button.Name = "btnClose";
                        button.Text = "Cerrar";
                        button.RenderMode = ButtonRenderMode.Button;
                        button.ImagePosition = ImagePosition.Left;
                        button.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                        button.UseSubmitBehavior = false;
                        button.ClientSideEvents.Click = "ButtonCancel_Click";
                    }).Render();
                }
            </td>
        </tr>
    </table>
}

<script src="~/Scripts/AdvanceParameters/editform.js"></script>

<script src="~/Scripts/AdvanceParameters/validations.js"></script>