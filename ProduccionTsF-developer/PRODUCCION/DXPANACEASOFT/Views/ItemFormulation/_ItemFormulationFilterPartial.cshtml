@using DXPANACEASOFT.DataProviders
@using TipoBusqueda = DXPANACEASOFT.Controllers.ItemFormulationController
@model DXPANACEASOFT.Models.Item

<table id="itemFormulationQueryForm" class="table table-condenced" style="border: 0px solid #ffffff; margin-bottom: 0px;">
	<tr>
		<td style="width: 30%">
			<table class="table table-condensed" style="border: 0px solid #ffffff;">
				<tr style="border-bottom: 1px solid #c0c0c0">
					<td olspan="2">
						<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px">Productos</span>
					</td>
				</tr>
				<tr>
					<td style="width: 30%">
						@Html.DevExpress().Label(settings =>
							{
								settings.Text = "Producto Origen:*";
							}).GetHtml()
					</td>
					<td>
						@Html.DevExpress().ComboBox(settings =>
						{
							settings.Name = "id_itemOrigin";
							settings.Properties.ClientInstanceName = "id_itemOrigin";
							settings.Properties.ValueType = typeof(int);
							settings.Width = Unit.Percentage(100);
							settings.Properties.CallbackPageSize = 20;

							settings.Properties.ValueField = "id";
							settings.Properties.TextFormatString = "{0} | {1}";
							settings.Properties.Columns.Add("masterCode", "Código", 20);
							settings.Properties.Columns.Add("name", "Producto", 80);

							settings.Properties.NullDisplayText = "Seleccione un producto";

							settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
							settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
							settings.Properties.EnableSynchronization = DefaultBoolean.False;
							settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
							
							settings.Properties.ClientSideEvents.Validation = "OnItemOriginValidation";
							settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnItemOriginSelectionIndexChanged";

						}).BindList(DataProviderItem.AllItemsWithFormulation((int?)ViewData["id_company"])).GetHtml()
					</td>
				</tr>
				<tr>
					<td style="width: 30%">
						@Html.DevExpress().Label(settings =>
							{
								settings.Text = "Tipo de Búsqueda:*";
							}).GetHtml()
					</td>
					<td>
						@Html.DevExpress().ComboBox(settings =>
					   {
						   settings.Name = "TipoProductoQueryText";
						   settings.Width = Unit.Percentage(100);

						   var p = settings.Properties;
						   p.ClientInstanceName = "TipoProductoQueryText";
						   p.ValueField = "Key";
						   p.TextField = "Value";
						   p.ValueType = typeof(TipoBusqueda.TipoBusquedaProducto);

						   p.DropDownStyle = DropDownStyle.DropDownList;
						   p.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
						   p.EnableSynchronization = DefaultBoolean.False;
						   p.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

						   settings.Properties.ClientSideEvents.Validation = "OnTipoProductoValidation";
						   settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnTipoProductoSelecionIndexChanged";

					   }).BindList(TipoBusqueda.GetTipoBusquedaReporte()).GetHtml()
					</td>
				</tr>
			</table>
		</td>
		<td style="width: 20%"></td>
		<td style="width: 15%">
			<table class="table table-condensed" style="border: 0px solid #ffffff;">
				<tr style="border-bottom: 1px Solid #C0C0C0">
					<td>
						<span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Acciones</span>
					</td>
				</tr>
				<tr>
					<td>
						@Html.DevExpress().Button(settings =>
						{
							settings.Name = "btnSearch";
							settings.UseSubmitBehavior = false;
							settings.Text = "Buscar";
							settings.ToolTip = "Buscar";
							settings.Images.Image.IconID = IconID.ActionsSearch16x16devav;
							settings.Width = Unit.Percentage(100);
							settings.ClientSideEvents.Click = "OnConsultarDatosButtonClick";
						}).GetHtml()
					</td>
				</tr>
				<tr>
					<td>
						@Html.DevExpress().Button(settings =>
						{
							settings.Name = "btnClear";
							settings.UseSubmitBehavior = false;
							settings.Text = "Limpiar";
							settings.ToolTip = "Limpiar";
							settings.Images.Image.IconID = IconID.ActionsClear16x16;
							settings.Width = Unit.Percentage(100);
							settings.ClientSideEvents.Click = "OnLimpiarFiltrosButtonClick";

						}).GetHtml()
					</td>
				</tr>
				<tr>
					<td>
						@Html.DevExpress().Button(settings =>
						{
							settings.Name = "btnCopy";
							settings.UseSubmitBehavior = false;
							settings.Text = "Copiar";
							settings.ToolTip = "Copiar";
							settings.Images.Image.IconID = IconID.EditCopy16x16office2013;
							settings.Width = Unit.Percentage(100);
							settings.ClientEnabled = false;
							settings.UseSubmitBehavior = false;
							settings.EnableClientSideAPI = true;
							settings.ClientSideEvents.Click = "CopyItemsFormulation";
						}).GetHtml()
					</td>
				</tr>
			</table>
		</td>
	</tr>
</table>

<script src="~/Scripts/ItemFormulation/index.js"></script>