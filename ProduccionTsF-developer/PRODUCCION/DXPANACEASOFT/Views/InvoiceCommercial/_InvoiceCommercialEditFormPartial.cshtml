@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@model DXPANACEASOFT.Models.InvoiceCommercial

@{
	int id_invoiceCommercial = (Model != null) ? Model.id : 0;
	string codeDocumentState = (Model.Document != null) ? (Model.Document.DocumentState != null ? Model.Document.DocumentState.code : "") : "";

	if (codeDocumentState == "01")
	{
        <script src="~/Scripts/invoicecommercial/_invoiceCommercialDetailsEditForm.js"></script>
    }
}

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formEditInvoiceCommercial", name = "formEditInvoiceCommercial" }))
{
    if (ViewData["EditMessage"] != null)
    {
        @Html.Raw(ViewData["EditMessage"]);
    }
     
    if (ViewData["EditError"] != null)
    {
        @Html.Raw(ViewData["EditError"]);
    }

    @Html.Hidden("id_invoiceCommercial", id_invoiceCommercial)
    @Html.Hidden("codeDocumentState", codeDocumentState)

    

    @Html.DevExpress().PageControl(tabs =>
{
	tabs.Name = "tabControl";
	tabs.Width = Unit.Percentage(100);

	//tabs.ClientSideEvents.ActiveTabChanged = "TabControl_ActiveTabChanged";

	tabs.TabPages.Add(tab =>
	{
		tab.Name = "tabDocument";
		tab.Text = "Documento    ";
		tab.TabStyle.Width = Unit.Percentage(100);

		tab.TabImage.Width = Unit.Pixel(16);
		tab.TabImage.Height = Unit.Pixel(16);
		tab.TabImage.Align = ImageAlign.Right;
		tab.TabImage.Url = "/Content/image/noimage.png";
		tab.ActiveTabImage.Align = ImageAlign.Right;
		tab.ActiveTabImage.Url = "/Content/image/noimage.png";

		tab.SetContent(() =>
		{
			Html.RenderPartial("_InvoiceCommercialDocumentFormEditMain", Model);
		});
	});
	tabs.TabPages.Add(tab =>
	{
		tab.Name = "tabInvoiceCommercial";
		tab.Text = "Factura Comercial    ";
		tab.TabStyle.Width = Unit.Percentage(100);

		tab.TabImage.Width = Unit.Pixel(16);
		tab.TabImage.Height = Unit.Pixel(16);
		tab.TabImage.Align = ImageAlign.Right;
		tab.TabImage.Url = "/Content/image/noimage.png";
		tab.ActiveTabImage.Align = ImageAlign.Right;
		tab.ActiveTabImage.Url = "/Content/image/noimage.png";

		tab.SetContent(() =>
		{
			Html.RenderPartial("_InvoiceCommercialMainFormTab", Model);
			Html.RenderPartial("_InvoiceCommercialMainDaeFormTab", Model);
			//Html.RenderPartial("_InvoiceCommercialMainContainerFormTab", Model);
		});
	});
	tabs.TabPages.Add(tab =>
	{
		tab.Name = "tabInvoiceCommercialDetails";
		tab.Text = "Detalles    ";
		tab.TabStyle.Width = Unit.Percentage(100);

		tab.TabStyle.Width = Unit.Percentage(100);
		tab.TabImage.Width = Unit.Pixel(16);
		tab.TabImage.Height = Unit.Pixel(16);
		tab.TabImage.Align = ImageAlign.Right;
		tab.TabImage.Url = "/Content/image/noimage.png";
		tab.ActiveTabImage.Align = ImageAlign.Right;
		tab.ActiveTabImage.Url = "/Content/image/noimage.png";

		tab.SetContent(() =>
		{
			var invoiceCommercialsDetail = (Model != null && Model.InvoiceCommercialDetail != null) ? Model.InvoiceCommercialDetail.Where(r=> r.isActive).ToList() : new List<InvoiceCommercialDetail>();
			Html.RenderPartial("_InvoiceCommercialHeadFormDetailPartial", Model);

			if (codeDocumentState == "01")
			{
				//if (Model != null && Model.Document != null && Model.Document.id_documentOrigen == null)
				//{
				Html.RenderPartial("DocumentTemplates/_DocumentDetailsActionsButtonsFC");
				//}
				Html.RenderPartial("_InvoiceCommercialEditFormDetailPartial", invoiceCommercialsDetail.ToList());
			}
			else
			{
				ViewData["id_invoiceCommercial"] = (Model != null) ? Model.id : 0;
				Html.RenderPartial("_InvoiceCommercialDetailViewsPartial", invoiceCommercialsDetail.ToList());
			}

			Html.RenderPartial("_InvoiceCommercialEditFormDetaiTotallPartial", Model);

		});
	});
	tabs.TabPages.Add(tab =>
	{
		tab.Name = "tabAttachedDocument";
		tab.Text = "Documentación    ";
		tab.TabStyle.Width = Unit.Percentage(100);

		tab.TabImage.Width = Unit.Pixel(16);
		tab.TabImage.Height = Unit.Pixel(16);
		tab.TabImage.Align = ImageAlign.Right;
		tab.TabImage.Url = "/Content/image/noimage.png";
		tab.ActiveTabImage.Align = ImageAlign.Right;
		tab.ActiveTabImage.Url = "/Content/image/noimage.png";

		tab.SetContent(() =>
		{
			List<InvoiceCommercialDocument> documents = (Model != null && Model.InvoiceCommercialDocument != null)
															? Model.InvoiceCommercialDocument.ToList()
															: new List<InvoiceCommercialDocument>();

			Html.RenderPartial("_InvoiceCommercialMainFormDocuments", this.Model);

			if (codeDocumentState == "01")//01: PENDIENTE
			{
				Html.RenderPartial("_InvoiceCommercialMainFormTabAttachedDocuments", documents.OrderByDescending(od => od.id).ToList());

			}
			else
			{
				ViewData["id_invoice"] = id_invoiceCommercial;
				Html.RenderPartial("_InvoiceCommercialAttachedDocumentsPartial", documents.OrderByDescending(od => od.id).ToList());
			}

		});
	});

}).GetHtml()


    <table class="table table-condensed">
        <tr style="border-top: 1px Solid #C0C0C0;">
            <td colspan="6" style="text-align: right">
                @{

                    Html.DevExpress().Button(button =>
                    {
                        button.Text = "Actualizar";
                        button.Name = "btnUpdate_EditForm";
                        button.RenderMode = ButtonRenderMode.Button;
                        button.ImagePosition = ImagePosition.Left;
                        button.Images.Image.IconID = IconID.ActionsSave16x16devav;
                        button.ClientEnabled = Model.btnUpdateFoot_CSI.isRequired;
                        //button.UseSubmitBehavior = false;
                        //button.EnableClientSideAPI = true;
                        button.ClientSideEvents.Click = "ButtonUpdate_Click";

                    }).Render();

                    ViewContext.Writer.Write("&nbsp;&nbsp;");

                    Html.DevExpress().Button(button =>
                    {
                        button.Name = "btnCancel_EditForm";
                        button.Text = "Cerrar";
                        button.RenderMode = ButtonRenderMode.Button;
                        button.ImagePosition = ImagePosition.Left;
                        button.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                        //button.ClientEnabled = true;
                        button.UseSubmitBehavior = false;
                        //button.EnableClientSideAPI = true;
                        button.ClientSideEvents.Click = "ButtonCancel_Click";
                    }).Render();
                }
            </td>
        </tr>
    </table>
}

<script src="~/Scripts/invoicecommercial/editform.js"></script>
<script src="~/Scripts/invoicecommercial/_invoiceCommercialMainFormTab.js"></script>
<script src="~/Scripts/shared/ps.genericfunctions.js"></script>



