@using System.Globalization
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@using ValidationSettings = System.Web.UI.ValidationSettings
@model DXPANACEASOFT.Models.InvoiceCommercial


@{
    int? id_ShippingAgency2 = (Model != null && Model.id_shippingAgency != null) ? (int?)Model.id_shippingAgency : null;
    int? id_ShippingLine = (Model != null && Model.id_shippingLine != 0) ? (int?)Model.id_shippingLine : null;
    int i1 = 0;

    DocumentState documentState = (Model != null && Model.Document != null && Model.Document.DocumentState != null) ? Model.Document.DocumentState : DataProviderDocumentState.DocumentStateByCodeByCompany((int)ViewData["id_company"], "01");
    List<tbsysDocumentDocumentStateControlsState> _ControlsState = DataProviderControlState.ControlStateByDocumentByState("70", documentState.code);

}
@Html.DevExpress().ComboBoxFor(m => m.id_shippingLine, settings =>
{
    settings.Name = "id_shippingLine";
    settings.Properties.ClientInstanceName = "id_shippingLine";
    settings.Properties.ValueField = "id";
    settings.Properties.TextFormatString = "{1}";
    settings.Properties.ValueType = typeof(int);
    settings.Width = Unit.Percentage(100);
    settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
    settings.CallbackRouteValues = new { Controller = "InvoiceCommercial", Action = "GetShippingLine"/*, TextField = "CityName"*/ };
    //settings.Properties.CallbackPageSize = 15;
    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
    settings.Properties.Columns.Add("code", "Cod.", 50);
    settings.Properties.Columns.Add("description", "Linea Naviera", 160);
    settings.ShowModelErrors = true;
    

    settings.Properties.ClientSideEvents.Validation = "OnUpdateImagenWhenRequiredField2";
    settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
    settings.CustomJSProperties = (s, e) =>
    {

        e.Properties["cpTabContainer"] = "tabInvoicCommercial";
        if (_ControlsState.FirstOrDefault(r => r.controlName == "id_shippingLine").isRequired)
        {
            e.Properties["cpMessageError"] = "Campo Obligatorio.";
            e.Properties["cpIsRequired"] = "true";
        }
        e.Properties["cpTabControl"] = "tabControl";
        e.Properties["cpCallBack"] = "validatshippingLine";
        e.Properties["cpMessageErrorFormart"] = "Debe ingresar Línea Naviera";
    };









}).BindList(DataProviderShippingLine.InvoiceExteriorShippingLineByShippingAgencyandCurrent(id_ShippingAgency2, id_ShippingLine)).Bind(id_ShippingLine).GetHtml()
