@using DevExpress.Data
@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models

@{
    var metricUnitUMTPAux = DataProviderSetting.ValueSetting("UMTP");
    var id_metricUnitUMTPValueAux = int.Parse(metricUnitUMTPAux != null ? metricUnitUMTPAux : "0");
    var metricUnitUMTP = DataProviderMetricUnit.MetricUnitById(id_metricUnitUMTPValueAux);
}

@{
    var grid = Html.DevExpress().GridView<SalesRequestDetail>(settings =>
    {
        settings.Name = "gvSalesRequestDetails";
        settings.CallbackRouteValues = new { Controller = "ProductionSchedule", Action = "SalesRequestDetailsPartial" };

        settings.Width = Unit.Percentage(100);
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = Unit.Percentage(3);
        settings.CommandColumn.ShowSelectCheckbox = true;
        settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.Page;

        settings.KeyFieldName = "id";//"id_purchaseRequest;id_item";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.Settings.ShowFooter = true;
        settings.Settings.ShowFilterRowMenu = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.ClientSideEvents.Init = "SalesRequestDetailsOnGridViewInit";
        settings.ClientSideEvents.SelectionChanged = "SalesRequestDetailsOnGridViewSelectionChanged";
        settings.ClientSideEvents.EndCallback = "SalesRequestDetailsOnGridViewEndCallback";

        //Panel para cantidad de registros
        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView gv = s as MVCxGridView;
            if (gv == null) return;

            e.Properties["cpVisibleRowCount"] = gv.VisibleRowCount;
            e.Properties["cpFilteredRowCountWithoutPage"] = GetFilteredRowCountWithoutPage(gv);
        };

        settings.SetFooterRowTemplateContent(c =>
        {
            ViewContext.Writer.Write(@"<span id=""lblInfo""></span>");
            if (settings.CommandColumn.SelectAllCheckboxMode != GridViewSelectAllCheckBoxMode.AllPages)
            {
                ViewContext.Writer.Write(
                    @"<a id=""lnkSelectAllRows"" style=""cursor: pointer;"" onclick=""SalesRequestDetailsSelectAllRow();"">Seleccionar Todos</a>
                      <a id=""lnkClearSelection"" style=""cursor: pointer;"" onclick=""SalesRequestDetailsClearSelection();"">Anular Selección</a>"
                );
            }
        });

        //No. de Cotización
        settings.Columns.Add(column =>
        {
            //column.FieldName = "id_purchaseRequest";
            column.Caption = "No. de Cotización";
            column.Width = Unit.Percentage(8);
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            column.SetDataItemTemplateContent(c =>
            {
                SalesRequestDetail salesRequestDetail = (SalesRequestDetail)Model[c.ItemIndex];
                string text = "";
                if (salesRequestDetail.SalesRequestDetailSalesQuotation != null && salesRequestDetail.SalesRequestDetailSalesQuotation.Count() > 0) {
                    text = salesRequestDetail.SalesRequestDetailSalesQuotation.FirstOrDefault().SalesQuotation.Document.number;
                }

                ViewContext.Writer.Write(text);
            });

        });

        //No.de Requerimiento de Pedido
        settings.Columns.Add(m => m.SalesRequest.Document.number, column =>
        {
            //column.FieldName = "id_purchaseRequest";
            column.Caption = "No. de Requerimiento";
            column.Width = Unit.Percentage(8);
            column.ColumnType = MVCxGridViewColumnType.TextBox;


        });
        settings.Columns.Add(m => m.SalesRequest.Customer.Person.fullname_businessName, column =>
        {
            //column.FieldName = "id_item";id_item
            column.Caption = "Cliente";
            column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
            column.ColumnType = MVCxGridViewColumnType.TextBox;

        });
        //id_item
        settings.Columns.Add(m => m.Item.name, column =>
        {
            //column.FieldName = "id_item";id_item
            column.Caption = "Item";
            column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
            column.ColumnType = MVCxGridViewColumnType.TextBox;

            //column.SetDataItemTemplateContent(c =>
            //{
            //    PurchaseRequestDetail detail = (PurchaseRequestDetail)Model[c.ItemIndex];
            //    ViewContext.Writer.Write(detail.Item.name);
            //});

        });
        //settings.Columns.Add(m => m.Provider.Person.fullname_businessName, column =>
        //{
        //    //column.FieldName = "id_item";id_item
        //    column.Caption = "Proveedor Propuesto";
        //    column.CellStyle.HorizontalAlign = HorizontalAlign.Left;
        //    column.ColumnType = MVCxGridViewColumnType.TextBox;

        //    //column.SetDataItemTemplateContent(c =>
        //    //{
        //    //    PurchaseRequestDetail detail = (PurchaseRequestDetail)Model[c.ItemIndex];
        //    //    ViewContext.Writer.Write(detail.Item.name);
        //    //});

        //});

        //quantityOutstandingOrder
        settings.Columns.Add(m => m.quantityOutstandingOrder, column =>
        {
            column.FieldName = "quantityOutstandingOrder";
            column.Caption = "Cant. Aprobada Pendiente";
            column.UnboundType = UnboundColumnType.Decimal;
            column.PropertiesEdit.DisplayFormatString = "N2";
            column.Width = Unit.Percentage(5);
            //column.ColumnType = MVCxGridViewColumnType.TextBox;

            //column.SetDataItemTemplateContent(c =>
            //{
            //    decimal quantityOutstandingPurchase = (decimal)DataBinder.Eval(c.DataItem, "quantityOutstandingPurchase");
            //    ViewContext.Writer.Write(quantityOutstandingPurchase.ToString("N2"));
            //});
        });

        //id_metricUnitSales
        settings.Columns.Add(m => m.id_metricUnitTypeUMPresentation, column =>
        {
            column.Name = "id_metricUnitTypeUMPresentation";
            column.Caption = "UM";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = Unit.Percentage(3);
            //column.ReadOnly = true;
            //column.PropertiesEdit.ClientInstanceName = "metricUnit";

            column.CellStyle.HorizontalAlign = HorizontalAlign.Center;

            column.SetDataItemTemplateContent(c =>
            {
                var id_metricUnitTypeUMPresentation = (int?)DataBinder.Eval(c.DataItem, "id_metricUnitTypeUMPresentation");

                MetricUnit metricUnit = DataProviderMetricUnit.MetricUnit(id_metricUnitTypeUMPresentation);

                string text = (metricUnit != null) ? metricUnit.code : "";
                ViewContext.Writer.Write(text);
            });
            //column.SetDataItemTemplateContent(c =>
            //{
            //    ViewContext.Writer.Write(metricUnitUMTP != null ? metricUnitUMTP.code : ""  );
            //    //var id = (int)DataBinder.Eval(c.DataItem, "id_item");

            //    //Item item = DataProviderItem.Item(id);
            //    //string metricUnit = (item != null && item.ItemPurchaseInformation != null && item.ItemPurchaseInformation.MetricUnit != null) ? item.ItemPurchaseInformation.MetricUnit.code : "";
            //    //ViewContext.Writer.Write(metricUnit);
            //});

        });

        //settings.Columns.Add(m => m.quantityOutstandingPurchase, column =>
        //{
        //    column.FieldName = "quantityOutstandingPurchase";
        //    column.Caption = "Cant. Pend. Compra";
        //    column.Width = Unit.Percentage(13);
        //    column.ColumnType = MVCxGridViewColumnType.TextBox;
        //});
        //settings.Columns.Add(m => m.id_proposedProvider, column =>
        //{
        //    column.FieldName = "id_proposedProvider";
        //    column.Caption = "Proveedor";
        //    column.ColumnType = MVCxGridViewColumnType.TextBox;
        //});
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()

@functions {
    int GetFilteredRowCountWithoutPage(MVCxGridView grid)
    {
        int selectedRowsOnPage = 0;
        string [] values = new string[] { "id" };//{ "id_purchaseRequest", "id_item" };
        foreach (var key in grid.GetCurrentPageRowValues(values))
        {
            if (grid.Selection.IsRowSelectedByKey(key))
                selectedRowsOnPage++;
        }
        return grid.Selection.FilteredCount - selectedRowsOnPage;
    }

}

