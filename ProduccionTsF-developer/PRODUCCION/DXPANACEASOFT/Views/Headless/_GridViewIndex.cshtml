
@using System.Drawing
@using DXPANACEASOFT.Models.DTOModel

@{
    int cantAux = 0;

    var grid = Html.DevExpress().GridView<HeadlessResultConsultDTO>(settings =>
    {
        settings.Name = "GridViewHeadless";
        settings.CallbackRouteValues = new
        {
            Controller = "Headless",
            Action = "GridViewHeadless",
        };

        settings.KeyFieldName = "id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;

        //settings.CustomJSProperties = (s, e) =>
        //{
        //    MVCxGridView gv = s as MVCxGridView;
        //    if (gv == null) return;
        //    var list = (Model as List<HeadlessResultConsultDTO>) ?? new List<HeadlessResultConsultDTO>();
        //    cantAux = list.Count;
        //};

        settings.Settings.ShowFooter = true;
        //settings.SetFooterRowTemplateContent(c =>
        //{
        //    var text = cantAux > 1 ? cantAux + " Resultados" : cantAux + " Resultado";
        //    ViewContext.Writer.Write(@"<b><span id=""lblInfo"">" + text + "</span></b>");
        //});
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Width = Unit.Percentage(100);

        settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
        settings.Styles.Header.Font.Bold = true;

        settings.ClientSideEvents.RowClick = "OnGridFocusedRowChanged";

        settings.Columns.Add(column =>
        {
            column.FieldName = "id";
            column.Name = "id";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "canEdit";
            column.Name = "canEdit";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "canAproved";
            column.Name = "canAproved";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "canReverse";
            column.Name = "canReverse";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "canAnnul";
            column.Name = "canAnnul";
            column.Visible = false;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "number";
            column.Caption = "No. Doc";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "emissionDate";
            column.Caption = "Fecha Documento";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "turn";
            column.Caption = "Turno";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "secTransaction";
            column.Caption = "Sec. Transaccional";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "numberLot";
            column.Caption = "No. Lote";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "process";
            column.Caption = "Proceso";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "provider";
            column.Caption = "Proveedor";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "productionUnitProvider";
            column.Caption = "Camaronera";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "productionUnitProviderPool";
            column.Caption = "Piscina";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "state";
            column.Caption = "Estado";
        });

        MVCxGridViewCommandColumn commandColumn = new MVCxGridViewCommandColumn
        {
            ShowEditButton = false,
            ShowDeleteButton = false,
            Visible = true,
            VisibleIndex = 11,
            Caption = "Acción",
            Width = Unit.Percentage(8)
        };

        commandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton
        {
            ID = "btnShowRow",
            Text = "Mostrar"
        });

        settings.ClientSideEvents.CustomButtonClick = "GridViewBtnShow_Click";
        settings.ClientSideEvents.RowDblClick = "GridViewBtnShow_Click";
        settings.Columns.Add(commandColumn);

    });
}
@grid.Bind(Model).GetHtml()