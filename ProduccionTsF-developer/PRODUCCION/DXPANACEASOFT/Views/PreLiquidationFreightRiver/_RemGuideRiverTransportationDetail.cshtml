@using DXPANACEASOFT.DataProviders
@using System.Drawing
@using DXPANACEASOFT.Models
@using DXPANACEASOFT.Models.RemGuide

@{
    var grid = Html.DevExpress().GridView<RemissionGuideRiverTransportLiq>(settings =>
    {
        settings.Name = "gvPrelimLiquidation";
        settings.CallbackRouteValues = new { Controller = "PreLiquidationFreightRiver", Action = "PrelimLiquidationRiverPartial" };
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "PreLiquidationFreightRiver", Action = "PrelimLiquidationRiverBatchEdit" };

        settings.ClientSideEvents.BeginCallback = "PrelimLiquidationRiver_BeginCallback";

        settings.Width = Unit.Percentage(100);


//Panel para titulo
settings.Settings.ShowTitlePanel = true;
        settings.Styles.TitlePanel.CssClass = "titleContainer";
        settings.SetTitlePanelTemplateContent(c =>
        {
            ViewContext.Writer.Write(@"<span id=""lblTitle"" style=""font-size: 13px;"">Listas de Guías de Remisión Fluvial para preliquidar</span>");
        });

        settings.KeyFieldName = "id_remissionGuideRiver";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSort = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.CommandColumn.ShowClearFilterButton = true;
        settings.Settings.ShowFilterRowMenu = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Styles.Header.BackColor = Color.FromArgb(255, 255, 191, 102);
        settings.Styles.Header.Font.Bold = true;



        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
        settings.ClientSideEvents.EndCallback = "OnBatchEditEndCallback";

        settings.Columns.Add(c => c.number, column =>
        {
            column.Caption = "Nro. Guia Remisión ";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c => c.emissionDate, column =>
        {
            column.Caption = "Fecha Emisión";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
        });

        settings.Columns.Add(c => c.personaProcessPlant, column =>
        {
            column.Caption = "Proceso ";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.Width = Unit.Percentage(8);
        });

        settings.Columns.Add(c => c.nameProvider, column =>
        {

            column.Caption = "Proveedor ";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.Width = Unit.Percentage(15);
        });
        settings.Columns.Add(c => c.nameSite, column =>
        {

            column.Caption = "Sitio Pesca";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c => c.nameZone, column =>
        {
            column.Caption = "Zona Pesca";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c => c.nameDriver, column =>
        {
            column.Caption = "Chofer";
            column.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.Width = Unit.Percentage(15);
        });
        settings.Columns.Add(c => c.namePlac, column =>
        {

            column.Caption = "Placa";

            column.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.Width = Unit.Percentage(9);
        });
        settings.Columns.Add(c => c.quantityPoundsTransported, column =>
        {
            column.FieldName = "quantityPoundsTransported";
            column.Caption = "Libras Transportadas ";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.PropertiesEdit.DisplayFormatString = "N2";
            column.Width = Unit.Percentage(9);
            column.EditorProperties().SpinEdit(p =>
            {
                p.DisplayFormatInEditMode = true;
                p.MinValue = 0;
                p.MaxValue = 800000;
                p.ValidationSettings.RequiredField.IsRequired = true;
                p.NumberFormat = SpinEditNumberFormat.Number;
                p.DisplayFormatString = "N2";
                p.Width = Unit.Percentage(100);
                p.ValidationSettings.Display = Display.Dynamic;
            });
        });
        settings.Columns.Add(c => c.price, column =>
        {

            column.Caption = "Flete";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.PropertiesEdit.DisplayFormatString = "C2";
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c => c.priceCancelled, column =>
        {

            column.Caption = "Flete Cancelado";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.PropertiesEdit.DisplayFormatString = "C2";
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(c => c.priceAdvance, column =>
        {

            column.Caption = "Anticipo";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.PropertiesEdit.DisplayFormatString = "C2";
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });



        settings.Columns.Add(c => c.priceAdjustment, column =>
        {
            column.FieldName = "priceAdjustment";
            column.Caption = "Ajuste";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.PropertiesEdit.DisplayFormatString = "C2";
            column.Width = Unit.Percentage(9);

            column.EditorProperties().SpinEdit(p =>
            {
                p.DisplayFormatString = "C2";
                p.DisplayFormatInEditMode = true;
                p.MinValue = -3000;
                p.MaxValue = 800000;
                p.Width = Unit.Percentage(100);
                p.ValidationSettings.Display = Display.Dynamic;
            });


        });
        settings.Columns.Add(c => c.priceDays, column =>
        {
            column.FieldName = "priceDays";
            column.Caption = "Valor Dias ";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.PropertiesEdit.DisplayFormatString = "C2";
            column.Width = Unit.Percentage(9);
    //column.EditFormSettings.Visible = codeState != "01" ? DefaultBoolean.False : DefaultBoolean.True;
    column.EditorProperties().SpinEdit(p =>
            {
                p.DisplayFormatString = "C2";
                p.DisplayFormatInEditMode = true;
                p.MinValue = 0;
                p.MaxValue = 800000;
                p.Width = Unit.Percentage(100);
                p.ValidationSettings.Display = Display.Dynamic;
            });
        });
        settings.Columns.Add(c => c.priceExtension, column =>
        {
            column.FieldName = "priceExtension";
            column.Caption = "Extensión";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.PropertiesEdit.DisplayFormatString = "C2";
            column.Width = Unit.Percentage(9);
    //column.EditFormSettings.Visible = codeState != "01" ? DefaultBoolean.False : DefaultBoolean.True;
    column.EditorProperties().SpinEdit(p =>
            {
                p.DisplayFormatString = "C2";
                p.DisplayFormatInEditMode = true;
                p.MinValue = 0;
                p.MaxValue = 800000;
                p.Width = Unit.Percentage(100);
                p.ValidationSettings.Display = Display.Dynamic;
            });
        });
        settings.Columns.Add(c => c.priceTotal, column =>
        {

            column.Caption = "Total";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            column.PropertiesEdit.DisplayFormatString = "C2";
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.Width = Unit.Percentage(7);
        });
        settings.Columns.Add(c => c.descriptionRG, column =>
        {
            column.Caption = "Descripción ";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
            column.Width = 300;
        });
    });
}
@grid.Bind(Model).GetHtml()

















