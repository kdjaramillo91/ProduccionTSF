@using DXPANACEASOFT.DataProviders
@using DXPANACEASOFT.Models
@Html.DevExpress().Button(settings =>
{
    settings.Name = "btnNew";
    settings.Text = "";
    settings.ToolTip = "Adicionar Elemento";
    settings.Images.Image.IconID = IconID.ActionsAdditem16x16office2013;
    settings.ClientEnabled = true;
    settings.ClientVisible = IsEnabeled(1);
    settings.UseSubmitBehavior = false;
    settings.EnableClientSideAPI = true;
    settings.ClientSideEvents.Click = "AddNewItem";
}).GetHtml()

@Html.DevExpress().Button(settings =>
{
    settings.Name = "btnRemove";
    settings.Text = "";
    settings.ToolTip = "Eliminar Elemento(s)";
    settings.Images.Image.IconID = IconID.ActionsRemoveitem16x16office2013;
    settings.ClientEnabled = true;
    settings.ClientVisible = IsEnabeled(8);
    settings.UseSubmitBehavior = false;
    settings.EnableClientSideAPI = true;
    settings.ClientSideEvents.Click = "RemoveItems";
}).GetHtml()

@Html.DevExpress().Button(settings =>
{
    settings.Name = "btnRefresh";
    settings.Text = "";
    settings.ToolTip = "Refrescar";
    settings.Images.Image.IconID = IconID.ActionsRefresh16x16office2013;
    settings.ClientEnabled = true;
    settings.ClientVisible = true;
    settings.UseSubmitBehavior = false;
    settings.EnableClientSideAPI = true;
    settings.ClientSideEvents.Click = "RefreshGrid";

}).GetHtml()

@Html.DevExpress().Label(settings =>
{
    settings.Name = "lblEditMessage";
    settings.Properties.ClientInstanceName = "lblEditMessage";
    settings.Width = Unit.Percentage(100);
    settings.ClientVisible = false;
}).GetHtml()

<input id="file" type="file" style="display: none;" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel" onchange="FileChange();"/>

<script type="text/javascript">

    function ShowEditMessage(s, e) {
        if (s.cpEditMessage) {

            lblEditMessage.SetText(s.cpEditMessage);
            lblEditMessage.SetVisible(true);

            delete s.cpEditMessage;

            $(".close").click(function () {
                $(".alert").alert('close');

                lblEditMessage.SetText("");
                lblEditMessage.SetVisible(false);
            });

            var message = document.getElementById("successMessage");
            if (message !== undefined && message !== null) {
                setTimeout(function () {
                    $("#successMessage").alert('close');

                    lblEditMessage.SetText("");
                    lblEditMessage.SetVisible(false);
                }, 2000);
            } 
        }
    }
</script>

<hr style="margin-top: 2px; margin-bottom: 2px;"/>

@functions{

    bool IsEnabeled(int id_permission)
    {
        int id_user = (int)ViewData["id_user"];
        int id_menu = (int)ViewData["id_menu"];

        User user = DataProviderUser.UserById(id_user);

        if (user == null)
            return false;

        UserMenu userMenu = user.UserMenu.FirstOrDefault(m => m.Menu.id == id_menu);

        if (userMenu == null)
            return false;

        Permission permission = userMenu.Permission.FirstOrDefault(p => p.id == id_permission);

        return (permission != null);
    }

}
