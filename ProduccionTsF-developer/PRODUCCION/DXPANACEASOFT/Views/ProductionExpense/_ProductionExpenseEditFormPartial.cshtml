@using DXPANACEASOFT.DataProviders
@model DXPANACEASOFT.Models.ProductionExpense


    <table class="table table-condensed">
		<tr>
			<td style="width: 8%;">
				@Html.DevExpress().LabelFor(m => m.code, settings =>
		   {
			   settings.Text = "Código:*";
			   settings.AssociatedControlName = "code";

		   }).GetHtml()
			</td>
			<td>
				@Html.DevExpress().TextBoxFor(m => m.code, settings =>
		   {
			   settings.Name = "code";
			   settings.Properties.ClientInstanceName = "code";
			   settings.Width = Unit.Percentage(100);
			   settings.Properties.NullText = "Código";
			   settings.ShowModelErrors = true;
			   settings.ClientVisible = true;
			   settings.Properties.ClientSideEvents.Validation = "OnCodeProductionExpenseValidation";

		   }).GetHtml()
			</td>
			<td style="width: 8%;">
				@Html.DevExpress().Label(settings =>
				{
					settings.Text = "Nombre:*";
					settings.AssociatedControlName = "productionExpenseName";
				}).GetHtml()
			</td>
			<td colspan="2">
				@Html.DevExpress().TextBoxFor(m => m.name, settings =>
				{
					settings.Properties.ClientInstanceName = "productionExpenseName";

					settings.Width = Unit.Percentage(100);

					settings.Properties.NullText = "Nombre del gasto";
					settings.ShowModelErrors = true;
					settings.Properties.ClientSideEvents.Validation = "OnProductionExpenseNameValidation";
				}).GetHtml()
			</td>
		</tr>
		<tr>
			<td style="width: 8%;">
				@Html.DevExpress().LabelFor(m => m.id_productionCostType, settings =>
				{
					settings.Text = "Clasificación:*";
					settings.AssociatedControlName = "id_productionCostType";
				}).GetHtml()
			</td>
			<td>
				@{
					int? id_productionExpense = (Model != null && Model.id_productionCostType != 0) ? (int?)Model.id_productionCostType : null;
				}
				@Html.DevExpress().ComboBoxFor(m => m.id_productionCostType, settings =>
		   {
			   settings.Properties.ClientInstanceName = "id_productionCostType";

			   settings.Properties.ValueField = "id";
			   settings.Properties.TextField = "name";
			   settings.Properties.ValueType = typeof(int);

			   settings.Width = Unit.Percentage(100);

			   settings.Properties.NullText = "Seleccione Tipo de Costo";
			   settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
			   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
			   settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

			   settings.ShowModelErrors = true;
			   settings.Properties.ClientSideEvents.Validation = "OnProducionCostTypeValidation";
		   }).BindList(DataProviderProductionCost.ProductionExpenseByCompanyAndCurrentOld((int)ViewData["id_company"], id_productionExpense)).Bind(id_productionExpense).GetHtml()
			</td>
			<td style="width: 8%;">
				@Html.DevExpress().LabelFor(m => m.orden, settings =>
			   {
				   settings.Text = "Orden:";
				   settings.AssociatedControlName = "orden";
			   }).GetHtml()
			</td>
			<td>
				@Html.DevExpress().SpinEditFor(m => m.orden, settings =>
				{
					settings.Properties.ClientInstanceName = "orden";

					settings.Width = Unit.Percentage(100);

					settings.Properties.NullText = "0";
					settings.ShowModelErrors = true;

				}).GetHtml()
			</td>
		</tr>
   
        <tr>
            <td>
                @Html.DevExpress().LabelFor(m => m.description, settings =>
                {
                    settings.Text = "Descripción:";
                    settings.AssociatedControlName = "description";
                }).GetHtml()
            </td>
            <td colspan="5">
                @Html.DevExpress().MemoFor(m => m.description, settings =>
                {
                    settings.Properties.ClientInstanceName = "description";

                    settings.Width = Unit.Percentage(100);

                    settings.Properties.NullText = "";
                    settings.ShowModelErrors = true;
                }).GetHtml()
            </td>
        </tr>
		<tr>
			<td>
				@Html.DevExpress().LabelFor(m => m.isActive, settings =>
				{
					settings.Text = "¿Activo?:";
					settings.AssociatedControlName = "isActive";
				}).GetHtml()
			</td>
			<td colspan="5">
				@Html.DevExpress().CheckBoxFor(m => m.isActive, settings =>
				{
					settings.Properties.ClientInstanceName = "isActive";

					settings.Width = Unit.Percentage(100);
				}).GetHtml()
			</td>
		</tr>
        <tr>
            <td colspan="6" style="text-align: right;">
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnUpdate";
                    settings.Text = "Actualizar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsSave16x16devav;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonUpdate_Click";
                }).GetHtml()
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnCancel";
                    settings.Text = "Cancelar";
                    settings.RenderMode = ButtonRenderMode.Button;
                    settings.ImagePosition = ImagePosition.Left;
                    settings.Images.Image.IconID = IconID.ActionsClose16x16office2013;
                    settings.UseSubmitBehavior = false;
                    settings.ClientSideEvents.Click = "ButtonCancel_Click";
                }).GetHtml()
            </td>
        </tr>
        <tr id="productionExpenseAlertRow" style="display: none;">
            <td colspan="6">
                <div class="alert alert-danger fade in" style="margin-top:18px;">
                    <button type="button" class="close" data-dismiss="alert" aria-label="close" title="close" style="top: 0px; right: 0px;"><span aria-hidden="true">&times;</span></button>
                    <span id="productionExpenseErrorMessage"></span>
                </div>
            </td>
        </tr>
    </table>

<script src="~/Scripts/productionexpense/editform.js"></script>
