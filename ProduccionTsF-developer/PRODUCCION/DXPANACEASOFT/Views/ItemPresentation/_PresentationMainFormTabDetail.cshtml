
@using DXPANACEASOFT.DataProviders
@using  DXPANACEASOFT.Models
@model DXPANACEASOFT.Models.Presentation
@using System.Drawing


<div id="GridMessageError" style="display: none;">
    @Html.DevExpress().Label(settings =>
       {
           settings.Name = "gridMessageError";
           settings.Properties.ClientInstanceName = "gridMessageError";
           settings.Text = "";
       }).GetHtml()
</div>
<table class="table table-condenced" style="margin: 0px;">
    <tr style="border-bottom: 1px Solid #C0C0C0;">
        <td colspan="6">
            <span class="dxflGroupBoxCaption_Metropolis" style="left: 0px; padding-left: 0px; top: 0px;">Información</span>
        </td>
    </tr>

    <!--Fila 1 Unidad de Meidad, Empaque   Inicio y fin -->
    <tr>
       

        <!-- Empaque   Inicio-->
        <td>
            @Html.DevExpress().LabelFor(m => m.id_itemPackingMinimum, settings =>
            {
                settings.Name = "itemPackingMinimumLabel";
                settings.Text = "Empaque Minimo:*";
                settings.AssociatedControlName = "id_itemPackingMinimum";
            }).GetHtml()
        </td>
        <td >
            @{
                int? id_itemPackingMinimum = (Model != null && Model.id_itemPackingMinimum != 0) ? (int?)Model.id_itemPackingMinimum : null;
            }
            @Html.DevExpress().ComboBoxFor(m => m.id_metricUnit, settings =>
       {
           settings.Name = "id_itemPackingMinimum";
           settings.Properties.ClientInstanceName = "id_itemPackingMinimum";
           settings.Properties.ValueField = "id";
           settings.Properties.TextField = "name";
           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
           settings.Properties.ValueType = typeof(int);
           settings.Properties.Columns.Add("name", "description", 200);
           settings.Width = Unit.Percentage(100);
           //settings.Height = Unit.Percentage(50);
           settings.Properties.EnableClientSideAPI = true;
           settings.Properties.CallbackPageSize = 20;
           settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
           settings.ShowModelErrors = true;
           settings.Properties.ClientSideEvents.Validation = "OnitemPackingMinimum";

       }).BindList(DataProviderItem.ItemsByCompany((int?)ViewData["id_company"])).Bind(id_itemPackingMinimum).GetHtml()


           </td>
        <!-- Empaque   fin-->
        <td>
            @Html.DevExpress().LabelFor(m => m.id_itemPackingMaximum, settings =>
            {
                settings.Name = "itemPackingMaximumLabel";
                settings.Text = "Empaque Final:*";
                settings.AssociatedControlName = "id_itemPackingMaximum";
            }).GetHtml()
        </td>
        <td>
            @{
                int? id_itemPackingMaximum = (Model != null && Model.id_itemPackingMaximum != 0) ? (int?)Model.id_itemPackingMaximum : null;
            }
            @Html.DevExpress().ComboBoxFor(m => m.id_metricUnit, settings =>
       {
           settings.Name = "id_itemPackingMaximum";
           settings.Properties.ClientInstanceName = "id_itemPackingMaximum";
           settings.Properties.ValueField = "id";
           settings.Properties.TextField = "name";
           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
           settings.Properties.ValueType = typeof(int);
           settings.Properties.Columns.Add("name", "description", 200);
           settings.Width = Unit.Percentage(100);
           //settings.Height = Unit.Percentage(50);
           settings.Properties.EnableClientSideAPI = true;
           settings.Properties.CallbackPageSize = 20;
           settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
           settings.ShowModelErrors = true;
           settings.Properties.ClientSideEvents.Validation = "OnitemPackingMaximum";

       }).BindList(DataProviderItem.ItemsByCompany((int?)ViewData["id_company"])).Bind(id_itemPackingMaximum).GetHtml()


        </td>
 
        <td>
          


        </td>
        <td>


        </td>
    </tr>
    <!--Fila 2 Nombre -->
    <tr>
        <!--Codigo-->
        <td>
            @Html.DevExpress().LabelFor(m => m.code, settings =>
        {
            settings.Name = "codeabel";
            settings.Text = "Código:*";
            settings.AssociatedControlName = "code";
        }).GetHtml()
        </td>
        <td >
            @Html.DevExpress().TextBoxFor(m => m.code, settings =>
       {
           settings.Name = "code";
           settings.Properties.ClientInstanceName = "code";
           settings.Width = Unit.Percentage(100);

           settings.ShowModelErrors = true;
           settings.Properties.MaxLength = 20;
           settings.Properties.ClientSideEvents.Validation = "OnCode";
           settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
       }).GetHtml()

        </td>
        <!--Nombre-->
        <td>
            @Html.DevExpress().LabelFor(m => m.name, settings =>
        {
            settings.Name = "namelabel";
            settings.Text = "Nombre:*";
            settings.AssociatedControlName = "name";
        }).GetHtml()
        </td>
        <td colspan="3">
            @Html.DevExpress().TextBoxFor(m => m.name, settings =>
       {
           settings.Name = "name";
           settings.Properties.ClientInstanceName = "name";
           settings.Width = Unit.Percentage(100);

           settings.ShowModelErrors = true;
           settings.Properties.MaxLength = 50;
           settings.Properties.ClientSideEvents.Validation = "OnName";
           settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
       }).GetHtml()
         
        </td>
    </tr>

    <!--Fila 3 Descripcion -->
    <tr>
   
        <td>
            @Html.DevExpress().LabelFor(m => m.description, settings =>
        {
            settings.Name = "descriptionlabel";
            settings.Text = "Descripción:*";
            settings.AssociatedControlName = "description";
        }).GetHtml()
        </td>
        <td  colspan="5">
            @Html.DevExpress().TextBoxFor(m => m.description, settings =>
       {
           settings.Name = "description";
           settings.Properties.ClientInstanceName = "description";
           settings.Width = Unit.Percentage(100);

           settings.ShowModelErrors = true;
           settings.Properties.MaxLength = 20;
           settings.Properties.ClientSideEvents.Validation = "OnDescription";
           settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
       }).GetHtml()

        </td>

    </tr>
    <!--Fila 4 Minimo, MaXIMO -->
    <tr>
        <!--Unidad de Meidad-->
        <td>
            @Html.DevExpress().LabelFor(m => m.id_metricUnit, settings =>
            {
                settings.Name = "id_metricUnitlabel";
                settings.Text = "Unidad de Medida:*";
                settings.AssociatedControlName = "id_metricUnit";
            }).GetHtml()


        </td>
        <td>

            @{
                int? id_metricUnit = (Model != null && Model.id_metricUnit != 0) ? (int?)Model.id_metricUnit : null;
            }
            @Html.DevExpress().ComboBoxFor(m => m.id_metricUnit, settings =>
       {
           settings.Name = "id_metricUnit";
           settings.Properties.ClientInstanceName = "id_metricUnit";
           settings.Properties.ValueField = "id";
           settings.Properties.TextField = "name";
           settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
           settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
           settings.Properties.ValueType = typeof(int);
           settings.Properties.Columns.Add("name", "description", 200);
           settings.Width = Unit.Percentage(100);
           //settings.Height = Unit.Percentage(50);
           settings.Properties.EnableClientSideAPI = true;
           settings.Properties.CallbackPageSize = 20;
           settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";
           settings.ShowModelErrors = true;
           settings.Properties.ClientSideEvents.Validation = "OnMetricUnit";

       }).BindList(DataProviderMetricUnit.MetricUnits((int?)ViewData["id_company"])).Bind(id_metricUnit).GetHtml()


        </td>
        <td>
            @Html.DevExpress().LabelFor(m => m.minimum, settings =>
            {
                settings.Name = "minimumLabel";
                settings.Text = "Minimo:";
                settings.AssociatedControlName = "minimum";
            }).GetHtml()
        </td>
        <td >
       
            @Html.DevExpress().SpinEditFor(m => m.minimum, settings =>
       {


           settings.Properties.Width = Unit.Percentage(100);
           settings.Properties.ClientInstanceName = "minimum";
           settings.Properties.DisplayFormatString = "N6";
           settings.Properties.DisplayFormatInEditMode = true;
           settings.Properties.DecimalPlaces = 6;
           settings.Properties.SpinButtons.ShowIncrementButtons = true;
           settings.Properties.SpinButtons.ShowLargeIncrementButtons = false;
           settings.Properties.Increment = 0.01M;
           settings.Properties.LargeIncrement = 1.0M;
           settings.Properties.MinValue = 0;
           settings.Properties.MaxValue = 100;
           settings.Properties.NumberType = SpinEditNumberType.Float;
           settings.Properties.NumberFormat = SpinEditNumberFormat.Custom;

           settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
           settings.Properties.ClientSideEvents.Validation = "OnMinimum";
           settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";

       }).GetHtml()

         
       
        </td>

        <td>
            @Html.DevExpress().LabelFor(m => m.maximum, settings =>
            {
                settings.Name = "maximumLabel";
                settings.Text = "Maximo:";
                settings.AssociatedControlName = "maximum";
            }).GetHtml()
        </td>
        <td>

            @Html.DevExpress().SpinEditFor(m => m.maximum, settings =>
       {


           settings.Properties.Width = Unit.Percentage(100);
           settings.Properties.ClientInstanceName = "maximum";
           settings.Properties.DisplayFormatString = "N";
           settings.Properties.DisplayFormatInEditMode = true;
           settings.Properties.DecimalPlaces = 0;
           settings.Properties.SpinButtons.ShowIncrementButtons = true;
           settings.Properties.SpinButtons.ShowLargeIncrementButtons = false;
           settings.Properties.Increment = 1M;
           settings.Properties.LargeIncrement = 1M;
           settings.Properties.MinValue = 0;
           settings.Properties.MaxValue = 100;
           settings.Properties.NumberType = SpinEditNumberType.Integer;
           settings.Properties.NumberFormat = SpinEditNumberFormat.Custom;

           settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
           settings.Properties.ClientSideEvents.Validation = "OnMaximum";
           settings.Properties.ValidationSettings.ValidationGroup = "tabdetail";


       }).GetHtml()



        </td>

        <td>
            @Html.DevExpress().CheckBoxFor(m => m.isActive, settings =>
       {
           settings.Name = "isActive";
           settings.Properties.ClientInstanceName = "isActive";
           settings.Text = "Activo";
       }).GetHtml()
        </td>
       
    </tr>
    
    <tr></tr>

    </table>

    


