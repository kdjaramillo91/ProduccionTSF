
@model DXPANACEASOFT.Models.DTOModel.DrainingTestDTO

<div>
    <div class="Etiqueta"><b>Información Lote</b></div>
    <hr style="width: 100%; margin: 0px;">
    <div class="MyContainer">
        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Guia de Remisión: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.numberRemissionGuide,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Fecha y Hora de Recepción: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.dateTimeArrived,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
        </div>
		<div class="row">
			<div class="col-sm-2">
				@Html.DevExpress().Label(settings =>
				{
					settings.Width = Unit.Percentage(100);
					settings.Text = "Guia Externa: ";
				}).GetHtml()
			</div>
			<div class="col-sm-4">
				@Html.DevExpress().TextBoxFor(model => model.RemissionGuideExternalGuide,
					settings =>
					{
						settings.Width = Unit.Percentage(100);
						settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
						settings.ReadOnly = true;
					}).GetHtml()
			</div>
		</div>
        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Libras Remitidas: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().SpinEditFor(model => model.ReceptionDetail.poundsRemitted,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.Properties.DecimalPlaces = 2;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Sec. Transaccional: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.numberLotSequential,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "No Bines: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().SpinEditFor(model => model.ReceptionDetail.drawersNumber,
                    settings =>
                    {
                        settings.Name = "SpinEditReceptionDrawers";
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.Properties.DecimalPlaces = 2;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "No. Lote: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.numberLot,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Proceso: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.personProcessPlant,
                    settings =>
                    {
                        settings.Name = "personProcessPlant";
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
            <div class="col-sm-2">
                @Html.DevExpress().Label(
               settings =>
               {
                   settings.Width = Unit.Percentage(100);
                   settings.Text = "Certificado:";
               }).GetHtml()

            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.certificationName, settings =>
            {
                settings.Name = "certificationName";
                settings.ReadOnly = true;
                settings.ShowModelErrors = true;
                settings.Width = Unit.Percentage(100);
            }).GetHtml()
            </div>
        </div>
    </div>

    <div class="Etiqueta"><b>Información Proveedor</b></div>
    <hr style="width: 100%; margin: 0px;">
    <div class="MyContainer">
        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Proveedor: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.nameProvider,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Camaronera: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.nameProviderShrimp,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "INP: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.INPnumber,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Piscina: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.namePool,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
        </div>
    </div>

    <div class="Etiqueta"><b>Producto a Analizar</b></div>
    <hr style="width: 100%; margin: 0px;">
    <div class="MyContainer">
        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Bodega: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.nameWarehouse,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Ubicación: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.nameWarehouseLocation,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Producto: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().TextBoxFor(model => model.ReceptionDetail.nameItem,
                    settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
        </div>
    </div>

    <div class="Etiqueta"><b>Prueba de Escurrido en Recepción</b></div>
    <hr style="width: 100%; margin: 0px;">
    <div class="MyContainer">

        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "No. Bines Muestreo: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().SpinEditFor(model => model.drawersNumberSampling,
                    settings =>
                    {
                        settings.Name = "SpinEditDrawers";
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.Properties.MaxValue = Model.ReceptionDetail.drawersNumber;
                        //settings.Properties.ClientSideEvents.ValueChanged = "SpinEditDrawers_Change";
                        settings.Properties.DecimalPlaces = 2;
                        settings.ReadOnly = true;
                    }).GetHtml()
            </div>
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
               {
                   settings.Width = Unit.Percentage(100);
                   settings.Text = "No. Muestreos: ";
               }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().SpinEditFor(model => model.numberSampling,
                    settings =>
                    {
                        settings.Name = "SpinEditNumberSampling";
                        settings.Properties.ClientInstanceName = "SpinEditNumberSampling";
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.Properties.MaxValue = Model.ReceptionDetail.drawersNumber;
                        settings.Properties.ClientSideEvents.ValueChanged = "SpinEditNumberSampling_Change";
                        settings.Properties.DecimalPlaces = 0;
                        settings.ReadOnly = !((bool)ViewBag.enabled);
                    }).GetHtml()
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">
                @Html.DevExpress().Label(settings =>
                {
                    settings.Width = Unit.Percentage(100);
                    settings.Text = "Lbs. Proyectadas: ";
                }).GetHtml()
            </div>
            <div class="col-sm-4">
                @Html.DevExpress().SpinEditFor(model => model.poundsProjected,
                    settings =>
                    {
                        settings.Name = "SpinEditPoundsProjected";
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ReadOnly = true;
                        settings.Properties.DisplayFormatString = "d";
                    }).GetHtml()
            </div>
        </div>
        <div class="Etiqueta"><b>Capacidades</b></div>
        <hr style="width: 100%; margin: 0px;">
        <div class="MyContainer" id="divGridViewCapacity">
            @Html.Partial("_GridViewCapacity", Model.DrainingTestSampligDetails)
        </div>
        <div style="text-align:right; display:block; padding-right:10px">
            @{

                Html.DevExpress().Button(button =>
                {
                    button.Name = "btnGenerateDrainingTestDetail";
                    button.Text = "Generar Filas";
                    button.RenderMode = ButtonRenderMode.Button;
                    button.ImagePosition = ImagePosition.Left;
                    button.Images.Image.IconID = IconID.SpreadsheetCreatefromselection16x16;
                    button.UseSubmitBehavior = false;
                    button.ClientVisible = true;
                    button.ClientSideEvents.Click = "onGenerate_DrainingTestDetail";
                    button.ClientEnabled = (bool)ViewBag.enabled;
                }).Render();
            }

        </div>


        @*<div class="row">
                <div class="col-sm-2">
                    @Html.DevExpress().Label(settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Text = "Libras Promedio: ";
                    }).GetHtml()
                </div>
                <div class="col-sm-4">
                    @Html.DevExpress().SpinEditFor(model => model.poundsAverage,
                        settings =>
                        {
                            settings.Name = "SpinEditPoundsAverage";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                            settings.Properties.DecimalPlaces = 1;
                            settings.ReadOnly = true;
                        }).GetHtml()
                </div>
                <div class="col-sm-2">
                    @Html.DevExpress().Label(settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Text = "Lbs. Proyectadas: ";
                    }).GetHtml()
                </div>
                <div class="col-sm-4">
                    @Html.DevExpress().SpinEditFor(model => model.poundsProjected,
                        settings =>
                        {
                            settings.Name = "SpinEditPoundsProjected";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                            settings.ReadOnly = true;
                            settings.Properties.DisplayFormatString = "d";
                        }).GetHtml()
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2">
                    @Html.DevExpress().Label(settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Text = "No. Gavetas Muestreo: ";
                    }).GetHtml()
                </div>
                <div class="col-sm-4">
                    @Html.DevExpress().SpinEditFor(model => model.drawersNumberSampling,
                        settings =>
                        {
                            settings.Name = "SpinEditDrawers";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                            settings.Properties.MaxValue = Model.ReceptionDetail.drawersNumber;
                            settings.Properties.ClientSideEvents.ValueChanged = "SpinEditDrawers_Change";
                            settings.Properties.DecimalPlaces = 2;
                            settings.ReadOnly = !((bool)ViewBag.enabled);
                        }).GetHtml()
                </div>
                <div class="col-sm-2">
                    @Html.DevExpress().Label(settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Text = "Total Lbs. Muestreo: ";
                    }).GetHtml()
                </div>
                <div class="col-sm-4">
                    @Html.DevExpress().SpinEditFor(model => model.poundsDrained,
                        settings =>
                        {
                            settings.Name = "SpinEditPoundsDrained";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                            settings.Properties.DecimalPlaces = 1;
                            settings.ReadOnly = true;
                        }).GetHtml()
                </div>
            </div>*@
    </div>
    <div class="Etiqueta"><b>Muestreos</b></div>
    <hr style="width: 100%; margin: 0px;">
    <div class="MyContainer" id="divGridViewDetails">
        @Html.Partial("_GridViewDetails", Model.DrainingTestDetailsInfo)
    </div>
</div>
<div style="text-align:right; display:block; padding-right:10px">
    @{

        Html.DevExpress().Button(button =>
        {
            button.Name = "btnCalculteDrainingTestDetail";
            button.Text = "Cálculo Previo Muestreo";
            button.RenderMode = ButtonRenderMode.Button;
            button.ImagePosition = ImagePosition.Left;
            button.Images.Image.IconID = IconID.MathCalculationoptions16x16;
            button.UseSubmitBehavior = false;
            button.ClientVisible = true;
            button.ClientSideEvents.Click = "onCalculate_DrainingTestDetail";
            button.ClientEnabled = (bool)ViewBag.enabled;
        }).Render();
    }

</div>