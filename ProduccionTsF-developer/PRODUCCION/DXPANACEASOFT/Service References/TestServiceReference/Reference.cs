//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXPANACEASOFT.TestServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://singxml/", ConfigurationName="TestServiceReference.SignXmlPortType")]
    public interface SignXmlPortType {
        
        // CODEGEN: Generating message contract since element name _xmlPath from namespace http://singxml/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        DXPANACEASOFT.TestServiceReference.signResponse sign(DXPANACEASOFT.TestServiceReference.sign request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<DXPANACEASOFT.TestServiceReference.signResponse> signAsync(DXPANACEASOFT.TestServiceReference.sign request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class sign {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="sign", Namespace="http://singxml/", Order=0)]
        public DXPANACEASOFT.TestServiceReference.signBody Body;
        
        public sign() {
        }
        
        public sign(DXPANACEASOFT.TestServiceReference.signBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://singxml/")]
    public partial class signBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string _xmlPath;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string _xmlFileIn;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string _outPutPath;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string _pathSignature;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string _passSignature;
        
        public signBody() {
        }
        
        public signBody(string _xmlPath, string _xmlFileIn, string _outPutPath, string _pathSignature, string _passSignature) {
            this._xmlPath = _xmlPath;
            this._xmlFileIn = _xmlFileIn;
            this._outPutPath = _outPutPath;
            this._pathSignature = _pathSignature;
            this._passSignature = _passSignature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class signResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="signResponse", Namespace="http://singxml/", Order=0)]
        public DXPANACEASOFT.TestServiceReference.signResponseBody Body;
        
        public signResponse() {
        }
        
        public signResponse(DXPANACEASOFT.TestServiceReference.signResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://singxml/")]
    public partial class signResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        public signResponseBody() {
        }
        
        public signResponseBody(string @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SignXmlPortTypeChannel : DXPANACEASOFT.TestServiceReference.SignXmlPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignXmlPortTypeClient : System.ServiceModel.ClientBase<DXPANACEASOFT.TestServiceReference.SignXmlPortType>, DXPANACEASOFT.TestServiceReference.SignXmlPortType {
        
        public SignXmlPortTypeClient() {
        }
        
        public SignXmlPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SignXmlPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignXmlPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignXmlPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DXPANACEASOFT.TestServiceReference.signResponse DXPANACEASOFT.TestServiceReference.SignXmlPortType.sign(DXPANACEASOFT.TestServiceReference.sign request) {
            return base.Channel.sign(request);
        }
        
        public string sign(string _xmlPath, string _xmlFileIn, string _outPutPath, string _pathSignature, string _passSignature) {
            DXPANACEASOFT.TestServiceReference.sign inValue = new DXPANACEASOFT.TestServiceReference.sign();
            inValue.Body = new DXPANACEASOFT.TestServiceReference.signBody();
            inValue.Body._xmlPath = _xmlPath;
            inValue.Body._xmlFileIn = _xmlFileIn;
            inValue.Body._outPutPath = _outPutPath;
            inValue.Body._pathSignature = _pathSignature;
            inValue.Body._passSignature = _passSignature;
            DXPANACEASOFT.TestServiceReference.signResponse retVal = ((DXPANACEASOFT.TestServiceReference.SignXmlPortType)(this)).sign(inValue);
            return retVal.Body.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DXPANACEASOFT.TestServiceReference.signResponse> DXPANACEASOFT.TestServiceReference.SignXmlPortType.signAsync(DXPANACEASOFT.TestServiceReference.sign request) {
            return base.Channel.signAsync(request);
        }
        
        public System.Threading.Tasks.Task<DXPANACEASOFT.TestServiceReference.signResponse> signAsync(string _xmlPath, string _xmlFileIn, string _outPutPath, string _pathSignature, string _passSignature) {
            DXPANACEASOFT.TestServiceReference.sign inValue = new DXPANACEASOFT.TestServiceReference.sign();
            inValue.Body = new DXPANACEASOFT.TestServiceReference.signBody();
            inValue.Body._xmlPath = _xmlPath;
            inValue.Body._xmlFileIn = _xmlFileIn;
            inValue.Body._outPutPath = _outPutPath;
            inValue.Body._pathSignature = _pathSignature;
            inValue.Body._passSignature = _passSignature;
            return ((DXPANACEASOFT.TestServiceReference.SignXmlPortType)(this)).signAsync(inValue);
        }
    }
}
