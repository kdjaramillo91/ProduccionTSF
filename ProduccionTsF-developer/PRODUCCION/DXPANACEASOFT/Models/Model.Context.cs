//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXPANACEASOFT.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBContext : DbContext
    {
        public DBContext()
            : base("name=DBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Account { get; set; }
        public virtual DbSet<AccountDetailAssistantType> AccountDetailAssistantType { get; set; }
        public virtual DbSet<AccountFor> AccountFor { get; set; }
        public virtual DbSet<AccountingAssistant> AccountingAssistant { get; set; }
        public virtual DbSet<AccountingAssistantDetailType> AccountingAssistantDetailType { get; set; }
        public virtual DbSet<AccountingFreight> AccountingFreight { get; set; }
        public virtual DbSet<AccountingFreightDetails> AccountingFreightDetails { get; set; }
        public virtual DbSet<AccountingTemplate> AccountingTemplate { get; set; }
        public virtual DbSet<AccountLedger> AccountLedger { get; set; }
        public virtual DbSet<AccountPlan> AccountPlan { get; set; }
        public virtual DbSet<AccountType> AccountType { get; set; }
        public virtual DbSet<AccountTypeGeneral> AccountTypeGeneral { get; set; }
        public virtual DbSet<ActivityRise> ActivityRise { get; set; }
        public virtual DbSet<AddressType> AddressType { get; set; }
        public virtual DbSet<AdvancedFiltersConfiguration> AdvancedFiltersConfiguration { get; set; }
        public virtual DbSet<AdvanceInvoiceReplication> AdvanceInvoiceReplication { get; set; }
        public virtual DbSet<AdvanceParameters> AdvanceParameters { get; set; }
        public virtual DbSet<AdvanceParametersDetail> AdvanceParametersDetail { get; set; }
        public virtual DbSet<AdvanceProcessTypeFanProcessType> AdvanceProcessTypeFanProcessType { get; set; }
        public virtual DbSet<AdvanceProvider> AdvanceProvider { get; set; }
        public virtual DbSet<AdvanceProviderDetail> AdvanceProviderDetail { get; set; }
        public virtual DbSet<AdvanceProviderRemissionGuide> AdvanceProviderRemissionGuide { get; set; }
        public virtual DbSet<AllocationCostPeriod> AllocationCostPeriod { get; set; }
        public virtual DbSet<AllocationCostPeriodDetail> AllocationCostPeriodDetail { get; set; }
        public virtual DbSet<AssistantType> AssistantType { get; set; }
        public virtual DbSet<AutomaticTransfer> AutomaticTransfer { get; set; }
        public virtual DbSet<AutomaticTransferDetail> AutomaticTransferDetail { get; set; }
        public virtual DbSet<BalanceInventory> BalanceInventory { get; set; }
        public virtual DbSet<Bank> Bank { get; set; }
        public virtual DbSet<BasisForGeneralDiscounts> BasisForGeneralDiscounts { get; set; }
        public virtual DbSet<BoxCardAndBank> BoxCardAndBank { get; set; }
        public virtual DbSet<BranchOffice> BranchOffice { get; set; }
        public virtual DbSet<BusinessGroup> BusinessGroup { get; set; }
        public virtual DbSet<BusinessLine> BusinessLine { get; set; }
        public virtual DbSet<BusinessOportunity> BusinessOportunity { get; set; }
        public virtual DbSet<BusinessOportunityActivity> BusinessOportunityActivity { get; set; }
        public virtual DbSet<BusinessOportunityActivityState> BusinessOportunityActivityState { get; set; }
        public virtual DbSet<BusinessOportunityCompetition> BusinessOportunityCompetition { get; set; }
        public virtual DbSet<BusinessOportunityDocument> BusinessOportunityDocument { get; set; }
        public virtual DbSet<BusinessOportunityDocumentTypePhase> BusinessOportunityDocumentTypePhase { get; set; }
        public virtual DbSet<BusinessOportunityNote> BusinessOportunityNote { get; set; }
        public virtual DbSet<BusinessOportunityPartner> BusinessOportunityPartner { get; set; }
        public virtual DbSet<BusinessOportunityPhase> BusinessOportunityPhase { get; set; }
        public virtual DbSet<BusinessOportunityPhaseActivity> BusinessOportunityPhaseActivity { get; set; }
        public virtual DbSet<BusinessOportunityPhaseAttachment> BusinessOportunityPhaseAttachment { get; set; }
        public virtual DbSet<BusinessOportunityPlaninng> BusinessOportunityPlaninng { get; set; }
        public virtual DbSet<BusinessOportunityPlanningDetail> BusinessOportunityPlanningDetail { get; set; }
        public virtual DbSet<BusinessOportunityPriority> BusinessOportunityPriority { get; set; }
        public virtual DbSet<BusinessOportunityResults> BusinessOportunityResults { get; set; }
        public virtual DbSet<BusinessOportunityState> BusinessOportunityState { get; set; }
        public virtual DbSet<CalendarPriceList> CalendarPriceList { get; set; }
        public virtual DbSet<CalendarPriceListhomologation> CalendarPriceListhomologation { get; set; }
        public virtual DbSet<CalendarPriceListType> CalendarPriceListType { get; set; }
        public virtual DbSet<CalendarPriceListTypeAdvanceValuePercentage> CalendarPriceListTypeAdvanceValuePercentage { get; set; }
        public virtual DbSet<CapacityContainer> CapacityContainer { get; set; }
        public virtual DbSet<CategoryActivityRise> CategoryActivityRise { get; set; }
        public virtual DbSet<CategoryCustomerType> CategoryCustomerType { get; set; }
        public virtual DbSet<CategoryRise> CategoryRise { get; set; }
        public virtual DbSet<Certification> Certification { get; set; }
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<Class> Class { get; set; }
        public virtual DbSet<ClassShrimp> ClassShrimp { get; set; }
        public virtual DbSet<ClientCategory> ClientCategory { get; set; }
        public virtual DbSet<ClientCategoryTypeBusiness> ClientCategoryTypeBusiness { get; set; }
        public virtual DbSet<ClosePlateTunnelCool> ClosePlateTunnelCool { get; set; }
        public virtual DbSet<ClosingMachinesTurn> ClosingMachinesTurn { get; set; }
        public virtual DbSet<CodeProgramGroupTable> CodeProgramGroupTable { get; set; }
        public virtual DbSet<Company> Company { get; set; }
        public virtual DbSet<CompanyElectronicFacturation> CompanyElectronicFacturation { get; set; }
        public virtual DbSet<ComparisonOperator> ComparisonOperator { get; set; }
        public virtual DbSet<ConfProcessSeriesSize> ConfProcessSeriesSize { get; set; }
        public virtual DbSet<ConfProcessTypeQualityControl> ConfProcessTypeQualityControl { get; set; }
        public virtual DbSet<ConfProcTypeQualityControlProductionLot> ConfProcTypeQualityControlProductionLot { get; set; }
        public virtual DbSet<ConfSizeClass> ConfSizeClass { get; set; }
        public virtual DbSet<ConversionItemPurchasePlanning> ConversionItemPurchasePlanning { get; set; }
        public virtual DbSet<CopackingTariff> CopackingTariff { get; set; }
        public virtual DbSet<CopackingTariffDetail> CopackingTariffDetail { get; set; }
        public virtual DbSet<CostAllocation> CostAllocation { get; set; }
        public virtual DbSet<CostAllocationDetail> CostAllocationDetail { get; set; }
        public virtual DbSet<CostAllocationResumido> CostAllocationResumido { get; set; }
        public virtual DbSet<CostAllocationWarehouse> CostAllocationWarehouse { get; set; }
        public virtual DbSet<CostCenter> CostCenter { get; set; }
        public virtual DbSet<CostsPerPeriodForProductionCoefficient> CostsPerPeriodForProductionCoefficient { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<Country_IdentificationType> Country_IdentificationType { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<CustomerAddress> CustomerAddress { get; set; }
        public virtual DbSet<CustomerContact> CustomerContact { get; set; }
        public virtual DbSet<CustomerCreditInfo> CustomerCreditInfo { get; set; }
        public virtual DbSet<CustomerPriceList> CustomerPriceList { get; set; }
        public virtual DbSet<CustomerState> CustomerState { get; set; }
        public virtual DbSet<CustomerType> CustomerType { get; set; }
        public virtual DbSet<DataType> DataType { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<DiscountToDetailApplyTo> DiscountToDetailApplyTo { get; set; }
        public virtual DbSet<DispatchMaterialSequential> DispatchMaterialSequential { get; set; }
        public virtual DbSet<Division> Division { get; set; }
        public virtual DbSet<Document> Document { get; set; }
        public virtual DbSet<DocumentActionTrack> DocumentActionTrack { get; set; }
        public virtual DbSet<DocumentLog> DocumentLog { get; set; }
        public virtual DbSet<DocumentSource> DocumentSource { get; set; }
        public virtual DbSet<DocumentState> DocumentState { get; set; }
        public virtual DbSet<DocumentStateChangeReplicationSource> DocumentStateChangeReplicationSource { get; set; }
        public virtual DbSet<DocumentTrackChange> DocumentTrackChange { get; set; }
        public virtual DbSet<DocumentTransactionState> DocumentTransactionState { get; set; }
        public virtual DbSet<DocumentTree> DocumentTree { get; set; }
        public virtual DbSet<DocumentType> DocumentType { get; set; }
        public virtual DbSet<DrainingTest> DrainingTest { get; set; }
        public virtual DbSet<DrainingTestDetail> DrainingTestDetail { get; set; }
        public virtual DbSet<DrainingTestSampling> DrainingTestSampling { get; set; }
        public virtual DbSet<DriverVeicleProviderTransport> DriverVeicleProviderTransport { get; set; }
        public virtual DbSet<EconomicGroup> EconomicGroup { get; set; }
        public virtual DbSet<ElectronicDocument> ElectronicDocument { get; set; }
        public virtual DbSet<ElectronicDocumentCodeError> ElectronicDocumentCodeError { get; set; }
        public virtual DbSet<ElectronicDocumentState> ElectronicDocumentState { get; set; }
        public virtual DbSet<ElectronicDocumentStateAnswer> ElectronicDocumentStateAnswer { get; set; }
        public virtual DbSet<EmissionPoint> EmissionPoint { get; set; }
        public virtual DbSet<EmissionType> EmissionType { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Entity> Entity { get; set; }
        public virtual DbSet<EnvironmentType> EnvironmentType { get; set; }
        public virtual DbSet<FanSeriesGrammage> FanSeriesGrammage { get; set; }
        public virtual DbSet<FieldDefinition> FieldDefinition { get; set; }
        public virtual DbSet<FinancyCategory> FinancyCategory { get; set; }
        public virtual DbSet<FishingSite> FishingSite { get; set; }
        public virtual DbSet<FishingZone> FishingZone { get; set; }
        public virtual DbSet<ForeignCustomer> ForeignCustomer { get; set; }
        public virtual DbSet<ForeignCustomerIdentification> ForeignCustomerIdentification { get; set; }
        public virtual DbSet<FrameworkContract> FrameworkContract { get; set; }
        public virtual DbSet<FrameworkContractDeliveryPlan> FrameworkContractDeliveryPlan { get; set; }
        public virtual DbSet<FrameworkContractExtension> FrameworkContractExtension { get; set; }
        public virtual DbSet<FrameworkContractItem> FrameworkContractItem { get; set; }
        public virtual DbSet<GeneralContactData> GeneralContactData { get; set; }
        public virtual DbSet<Grammage> Grammage { get; set; }
        public virtual DbSet<GroupPersonByRol> GroupPersonByRol { get; set; }
        public virtual DbSet<GroupPersonByRolDetail> GroupPersonByRolDetail { get; set; }
        public virtual DbSet<GroupPersonByRolhomologation> GroupPersonByRolhomologation { get; set; }
        public virtual DbSet<GroupRol> GroupRol { get; set; }
        public virtual DbSet<GroupRolDetail> GroupRolDetail { get; set; }
        public virtual DbSet<Headless> Headless { get; set; }
        public virtual DbSet<HistoryItem> HistoryItem { get; set; }
        public virtual DbSet<HistoryMigrationItem> HistoryMigrationItem { get; set; }
        public virtual DbSet<HistoryMigrationPerson> HistoryMigrationPerson { get; set; }
        public virtual DbSet<HistoryPerson> HistoryPerson { get; set; }
        public virtual DbSet<HistoryReplicationMasterProduction> HistoryReplicationMasterProduction { get; set; }
        public virtual DbSet<IceBagRange> IceBagRange { get; set; }
        public virtual DbSet<IdentificationType> IdentificationType { get; set; }
        public virtual DbSet<IntegrationProcess> IntegrationProcess { get; set; }
        public virtual DbSet<IntegrationProcessDetail> IntegrationProcessDetail { get; set; }
        public virtual DbSet<IntegrationProcessDetailLog> IntegrationProcessDetailLog { get; set; }
        public virtual DbSet<IntegrationProcessForeignCodeTable> IntegrationProcessForeignCodeTable { get; set; }
        public virtual DbSet<IntegrationProcessForeignCodeValue> IntegrationProcessForeignCodeValue { get; set; }
        public virtual DbSet<IntegrationProcessLog> IntegrationProcessLog { get; set; }
        public virtual DbSet<IntegrationProcessMessage> IntegrationProcessMessage { get; set; }
        public virtual DbSet<IntegrationProcessOutput> IntegrationProcessOutput { get; set; }
        public virtual DbSet<IntegrationProcessOutputDocument> IntegrationProcessOutputDocument { get; set; }
        public virtual DbSet<IntegrationProcessPrintGroup> IntegrationProcessPrintGroup { get; set; }
        public virtual DbSet<IntegrationState> IntegrationState { get; set; }
        public virtual DbSet<InventoryControlType> InventoryControlType { get; set; }
        public virtual DbSet<InventoryEntryMove> InventoryEntryMove { get; set; }
        public virtual DbSet<InventoryExitMove> InventoryExitMove { get; set; }
        public virtual DbSet<InventoryLine> InventoryLine { get; set; }
        public virtual DbSet<InventoryMove> InventoryMove { get; set; }
        public virtual DbSet<InventoryMoveDetail> InventoryMoveDetail { get; set; }
        public virtual DbSet<InventoryMoveDetailEntryDispatchMaterialsInProductionLot> InventoryMoveDetailEntryDispatchMaterialsInProductionLot { get; set; }
        public virtual DbSet<InventoryMoveDetailEntryProductionLotDetail> InventoryMoveDetailEntryProductionLotDetail { get; set; }
        public virtual DbSet<InventoryMoveDetailEntryProductionLotLiquidation> InventoryMoveDetailEntryProductionLotLiquidation { get; set; }
        public virtual DbSet<InventoryMoveDetailExitDispatchMaterials> InventoryMoveDetailExitDispatchMaterials { get; set; }
        public virtual DbSet<InventoryMoveDetailExitPackingMaterial> InventoryMoveDetailExitPackingMaterial { get; set; }
        public virtual DbSet<InventoryMoveDetailExitProductionLotDetail> InventoryMoveDetailExitProductionLotDetail { get; set; }
        public virtual DbSet<InventoryMoveDetailPurchaseOrder> InventoryMoveDetailPurchaseOrder { get; set; }
        public virtual DbSet<InventoryMoveDetailRemisionMaterial> InventoryMoveDetailRemisionMaterial { get; set; }
        public virtual DbSet<InventoryMoveDetailTransfer> InventoryMoveDetailTransfer { get; set; }
        public virtual DbSet<InventoryMoveExitPackingMaterial> InventoryMoveExitPackingMaterial { get; set; }
        public virtual DbSet<InventoryMovePlantTransfer> InventoryMovePlantTransfer { get; set; }
        public virtual DbSet<InventoryMovePlantTransferDetail> InventoryMovePlantTransferDetail { get; set; }
        public virtual DbSet<InventoryPeriod> InventoryPeriod { get; set; }
        public virtual DbSet<InventoryPeriodDetail> InventoryPeriodDetail { get; set; }
        public virtual DbSet<InventoryReason> InventoryReason { get; set; }
        public virtual DbSet<InventoryReservation> InventoryReservation { get; set; }
        public virtual DbSet<InventoryTransferMove> InventoryTransferMove { get; set; }
        public virtual DbSet<InventoryValuationMethod> InventoryValuationMethod { get; set; }
        public virtual DbSet<InventoryValuationPeriod> InventoryValuationPeriod { get; set; }
        public virtual DbSet<InventoryValuationPeriodDetail> InventoryValuationPeriodDetail { get; set; }
        public virtual DbSet<Invoice> Invoice { get; set; }
        public virtual DbSet<InvoiceCommercial> InvoiceCommercial { get; set; }
        public virtual DbSet<InvoiceCommercialContainer> InvoiceCommercialContainer { get; set; }
        public virtual DbSet<InvoiceCommercialDetail> InvoiceCommercialDetail { get; set; }
        public virtual DbSet<InvoiceCommercialDocument> InvoiceCommercialDocument { get; set; }
        public virtual DbSet<InvoiceCommercialPaymentTerm> InvoiceCommercialPaymentTerm { get; set; }
        public virtual DbSet<InvoiceDetail> InvoiceDetail { get; set; }
        public virtual DbSet<InvoiceDetailsTaxes> InvoiceDetailsTaxes { get; set; }
        public virtual DbSet<InvoiceExterior> InvoiceExterior { get; set; }
        public virtual DbSet<InvoiceExteriorDetailDivided> InvoiceExteriorDetailDivided { get; set; }
        public virtual DbSet<InvoiceExteriorDivided> InvoiceExteriorDivided { get; set; }
        public virtual DbSet<InvoiceExteriorPaymentTerm> InvoiceExteriorPaymentTerm { get; set; }
        public virtual DbSet<InvoiceExteriorReplication> InvoiceExteriorReplication { get; set; }
        public virtual DbSet<InvoiceExteriorReplicationClient> InvoiceExteriorReplicationClient { get; set; }
        public virtual DbSet<InvoiceExteriorWeight> InvoiceExteriorWeight { get; set; }
        public virtual DbSet<InvoiceExteriorWeightDivided> InvoiceExteriorWeightDivided { get; set; }
        public virtual DbSet<InvoiceTotalTaxes> InvoiceTotalTaxes { get; set; }
        public virtual DbSet<Item> Item { get; set; }
        public virtual DbSet<ItemAccount> ItemAccount { get; set; }
        public virtual DbSet<ItemAditionalField> ItemAditionalField { get; set; }
        public virtual DbSet<ItemColor> ItemColor { get; set; }
        public virtual DbSet<ItemDocument> ItemDocument { get; set; }
        public virtual DbSet<ItemEquivalence> ItemEquivalence { get; set; }
        public virtual DbSet<ItemGeneral> ItemGeneral { get; set; }
        public virtual DbSet<ItemGroup> ItemGroup { get; set; }
        public virtual DbSet<ItemGroupCategory> ItemGroupCategory { get; set; }
        public virtual DbSet<ItemGroupItemGroupCategory> ItemGroupItemGroupCategory { get; set; }
        public virtual DbSet<ItemHeadIngredient> ItemHeadIngredient { get; set; }
        public virtual DbSet<ItemHomologation> ItemHomologation { get; set; }
        public virtual DbSet<ItemIngredient> ItemIngredient { get; set; }
        public virtual DbSet<ItemInventory> ItemInventory { get; set; }
        public virtual DbSet<ItemProcessType> ItemProcessType { get; set; }
        public virtual DbSet<ItemProvider> ItemProvider { get; set; }
        public virtual DbSet<ItemPurchaseInformation> ItemPurchaseInformation { get; set; }
        public virtual DbSet<ItemSaleInformation> ItemSaleInformation { get; set; }
        public virtual DbSet<ItemSeries> ItemSeries { get; set; }
        public virtual DbSet<ItemSize> ItemSize { get; set; }
        public virtual DbSet<ItemSizeClass> ItemSizeClass { get; set; }
        public virtual DbSet<ItemSizePriceAdvanceProvider> ItemSizePriceAdvanceProvider { get; set; }
        public virtual DbSet<ItemSizePriceClass> ItemSizePriceClass { get; set; }
        public virtual DbSet<ItemSizeProcessPLOrder> ItemSizeProcessPLOrder { get; set; }
        public virtual DbSet<ItemSizeProcessTypePriceList> ItemSizeProcessTypePriceList { get; set; }
        public virtual DbSet<ItemTaxation> ItemTaxation { get; set; }
        public virtual DbSet<ItemTechnicalSpecificationsAttachment> ItemTechnicalSpecificationsAttachment { get; set; }
        public virtual DbSet<ItemTrademark> ItemTrademark { get; set; }
        public virtual DbSet<ItemTrademarkModel> ItemTrademarkModel { get; set; }
        public virtual DbSet<ItemType> ItemType { get; set; }
        public virtual DbSet<ItemTypeCategory> ItemTypeCategory { get; set; }
        public virtual DbSet<ItemTypeCategoryClassRelation> ItemTypeCategoryClassRelation { get; set; }
        public virtual DbSet<ItemTypeItemTypeCategory> ItemTypeItemTypeCategory { get; set; }
        public virtual DbSet<ItemWarehouse> ItemWarehouse { get; set; }
        public virtual DbSet<ItemWeight> ItemWeight { get; set; }
        public virtual DbSet<ItemWeightConversionFreezen> ItemWeightConversionFreezen { get; set; }
        public virtual DbSet<LiquidationCartOnCart> LiquidationCartOnCart { get; set; }
        public virtual DbSet<LiquidationCartOnCartDetail> LiquidationCartOnCartDetail { get; set; }
        public virtual DbSet<LiquidationFreight> LiquidationFreight { get; set; }
        public virtual DbSet<LiquidationFreightDetail> LiquidationFreightDetail { get; set; }
        public virtual DbSet<LiquidationFreightDocument> LiquidationFreightDocument { get; set; }
        public virtual DbSet<LiquidationFreightRiver> LiquidationFreightRiver { get; set; }
        public virtual DbSet<LiquidationFreightRiverDetail> LiquidationFreightRiverDetail { get; set; }
        public virtual DbSet<LiquidationFreightRiverDocument> LiquidationFreightRiverDocument { get; set; }
        public virtual DbSet<LiquidationMaterialSupplies> LiquidationMaterialSupplies { get; set; }
        public virtual DbSet<LiquidationMaterialSuppliesDetail> LiquidationMaterialSuppliesDetail { get; set; }
        public virtual DbSet<LiquidationTurn> LiquidationTurn { get; set; }
        public virtual DbSet<LockedDocument> LockedDocument { get; set; }
        public virtual DbSet<LoginLog> LoginLog { get; set; }
        public virtual DbSet<Lot> Lot { get; set; }
        public virtual DbSet<MachineForProd> MachineForProd { get; set; }
        public virtual DbSet<MachineProdOpening> MachineProdOpening { get; set; }
        public virtual DbSet<MachineProdOpeningDetail> MachineProdOpeningDetail { get; set; }
        public virtual DbSet<MailConfiguration> MailConfiguration { get; set; }
        public virtual DbSet<Mastered> Mastered { get; set; }
        public virtual DbSet<MasteredDetail> MasteredDetail { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<MetricType> MetricType { get; set; }
        public virtual DbSet<MetricUnit> MetricUnit { get; set; }
        public virtual DbSet<MetricUnitConversion> MetricUnitConversion { get; set; }
        public virtual DbSet<MigrationItem> MigrationItem { get; set; }
        public virtual DbSet<MigrationPerson> MigrationPerson { get; set; }
        public virtual DbSet<Module> Module { get; set; }
        public virtual DbSet<ModuleTController> ModuleTController { get; set; }
        public virtual DbSet<NonProductiveHour> NonProductiveHour { get; set; }
        public virtual DbSet<NonProductiveHourDetail> NonProductiveHourDetail { get; set; }
        public virtual DbSet<Notification> Notification { get; set; }
        public virtual DbSet<NotificationEmployeeMail> NotificationEmployeeMail { get; set; }
        public virtual DbSet<Object> Object { get; set; }
        public virtual DbSet<OpeningClosingPlateLying> OpeningClosingPlateLying { get; set; }
        public virtual DbSet<OpeningClosingPlateLyingDetail> OpeningClosingPlateLyingDetail { get; set; }
        public virtual DbSet<Origin> Origin { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethod { get; set; }
        public virtual DbSet<PaymentMethodPaymentTerm> PaymentMethodPaymentTerm { get; set; }
        public virtual DbSet<PaymentTerm> PaymentTerm { get; set; }
        public virtual DbSet<PenalityClassShrimp> PenalityClassShrimp { get; set; }
        public virtual DbSet<PenalityClassShrimpDetails> PenalityClassShrimpDetails { get; set; }
        public virtual DbSet<PeriodType> PeriodType { get; set; }
        public virtual DbSet<Permission> Permission { get; set; }
        public virtual DbSet<Person> Person { get; set; }
        public virtual DbSet<PersonGroupRol> PersonGroupRol { get; set; }
        public virtual DbSet<PersonSharedInfo> PersonSharedInfo { get; set; }
        public virtual DbSet<PersonSharedInfoExtended> PersonSharedInfoExtended { get; set; }
        public virtual DbSet<PersonType> PersonType { get; set; }
        public virtual DbSet<Phase> Phase { get; set; }
        public virtual DbSet<Port> Port { get; set; }
        public virtual DbSet<portType> portType { get; set; }
        public virtual DbSet<PoundsRange> PoundsRange { get; set; }
        public virtual DbSet<Presentation> Presentation { get; set; }
        public virtual DbSet<PriceList> PriceList { get; set; }
        public virtual DbSet<PriceListClassShrimp> PriceListClassShrimp { get; set; }
        public virtual DbSet<PriceListClassShrimpPenalization> PriceListClassShrimpPenalization { get; set; }
        public virtual DbSet<PriceListDetail> PriceListDetail { get; set; }
        public virtual DbSet<PriceListDetailCategoryAdjustment> PriceListDetailCategoryAdjustment { get; set; }
        public virtual DbSet<PriceListDetailFilterShow> PriceListDetailFilterShow { get; set; }
        public virtual DbSet<PriceListhomologation> PriceListhomologation { get; set; }
        public virtual DbSet<PriceListItemSizeDetail> PriceListItemSizeDetail { get; set; }
        public virtual DbSet<PriceListPersonPersonRol> PriceListPersonPersonRol { get; set; }
        public virtual DbSet<PriceListProvider> PriceListProvider { get; set; }
        public virtual DbSet<printcontrol> printcontrol { get; set; }
        public virtual DbSet<PrinterName> PrinterName { get; set; }
        public virtual DbSet<ProcessType> ProcessType { get; set; }
        public virtual DbSet<ProcessTypeLPTipo> ProcessTypeLPTipo { get; set; }
        public virtual DbSet<ProductionCart> ProductionCart { get; set; }
        public virtual DbSet<ProductionCoefficient> ProductionCoefficient { get; set; }
        public virtual DbSet<ProductionCostBuysDistribution> ProductionCostBuysDistribution { get; set; }
        public virtual DbSet<ProductionCostBuysDistributionGroup> ProductionCostBuysDistributionGroup { get; set; }
        public virtual DbSet<ProductionCosts> ProductionCosts { get; set; }
        public virtual DbSet<ProductionCostsBuys> ProductionCostsBuys { get; set; }
        public virtual DbSet<ProductionCostsBuysDetail> ProductionCostsBuysDetail { get; set; }
        public virtual DbSet<ProductionCostsProcessDetail> ProductionCostsProcessDetail { get; set; }
        public virtual DbSet<ProductionCostsProcessGrouped> ProductionCostsProcessGrouped { get; set; }
        public virtual DbSet<ProductionExpense> ProductionExpense { get; set; }
        public virtual DbSet<ProductionLot> ProductionLot { get; set; }
        public virtual DbSet<ProductionLotDailyClose> ProductionLotDailyClose { get; set; }
        public virtual DbSet<ProductionLotDailyCloseDetail> ProductionLotDailyCloseDetail { get; set; }
        public virtual DbSet<ProductionLotDetail> ProductionLotDetail { get; set; }
        public virtual DbSet<ProductionLotDetailPurchaseDetail> ProductionLotDetailPurchaseDetail { get; set; }
        public virtual DbSet<ProductionLotDetailQualityControl> ProductionLotDetailQualityControl { get; set; }
        public virtual DbSet<ProductionLotDispatchMaterial> ProductionLotDispatchMaterial { get; set; }
        public virtual DbSet<ProductionLotDispatchMaterialRemissionDetail> ProductionLotDispatchMaterialRemissionDetail { get; set; }
        public virtual DbSet<ProductionLotLiquidation> ProductionLotLiquidation { get; set; }
        public virtual DbSet<ProductionLotLiquidationPackingMaterialDetail> ProductionLotLiquidationPackingMaterialDetail { get; set; }
        public virtual DbSet<ProductionLotLiquidationTotal> ProductionLotLiquidationTotal { get; set; }
        public virtual DbSet<ProductionLotLoss> ProductionLotLoss { get; set; }
        public virtual DbSet<ProductionLotOrigin> ProductionLotOrigin { get; set; }
        public virtual DbSet<ProductionLotPackingMaterial> ProductionLotPackingMaterial { get; set; }
        public virtual DbSet<ProductionLotPayment> ProductionLotPayment { get; set; }
        public virtual DbSet<ProductionLotPaymentDistributed> ProductionLotPaymentDistributed { get; set; }
        public virtual DbSet<ProductionLotQualityAnalysis> ProductionLotQualityAnalysis { get; set; }
        public virtual DbSet<ProductionLotState> ProductionLotState { get; set; }
        public virtual DbSet<ProductionLotTrash> ProductionLotTrash { get; set; }
        public virtual DbSet<ProductionProcess> ProductionProcess { get; set; }
        public virtual DbSet<ProductionSchedule> ProductionSchedule { get; set; }
        public virtual DbSet<ProductionScheduleInventoryReservationDetail> ProductionScheduleInventoryReservationDetail { get; set; }
        public virtual DbSet<ProductionSchedulePeriod> ProductionSchedulePeriod { get; set; }
        public virtual DbSet<ProductionScheduleProductionOrderDetail> ProductionScheduleProductionOrderDetail { get; set; }
        public virtual DbSet<ProductionScheduleProductionOrderDetailSalesOrderDetail> ProductionScheduleProductionOrderDetailSalesOrderDetail { get; set; }
        public virtual DbSet<ProductionSchedulePurchaseRequestDetail> ProductionSchedulePurchaseRequestDetail { get; set; }
        public virtual DbSet<ProductionScheduleRequestDetail> ProductionScheduleRequestDetail { get; set; }
        public virtual DbSet<ProductionScheduleScheduleDetail> ProductionScheduleScheduleDetail { get; set; }
        public virtual DbSet<ProductionScheduleScheduleDetailPurchaseRequestDetail> ProductionScheduleScheduleDetailPurchaseRequestDetail { get; set; }
        public virtual DbSet<ProductionUnit> ProductionUnit { get; set; }
        public virtual DbSet<ProductionUnitProvider> ProductionUnitProvider { get; set; }
        public virtual DbSet<ProductionUnitProviderPool> ProductionUnitProviderPool { get; set; }
        public virtual DbSet<productiveHoursReason> productiveHoursReason { get; set; }
        public virtual DbSet<Provider> Provider { get; set; }
        public virtual DbSet<ProviderAccountingAccounts> ProviderAccountingAccounts { get; set; }
        public virtual DbSet<ProviderGeneralData> ProviderGeneralData { get; set; }
        public virtual DbSet<ProviderGeneralDataEP> ProviderGeneralDataEP { get; set; }
        public virtual DbSet<ProviderGeneralDataRise> ProviderGeneralDataRise { get; set; }
        public virtual DbSet<ProviderItem> ProviderItem { get; set; }
        public virtual DbSet<ProviderMailByComDivBra> ProviderMailByComDivBra { get; set; }
        public virtual DbSet<ProviderPassportImportData> ProviderPassportImportData { get; set; }
        public virtual DbSet<ProviderPaymentMethod> ProviderPaymentMethod { get; set; }
        public virtual DbSet<ProviderPaymentTerm> ProviderPaymentTerm { get; set; }
        public virtual DbSet<ProviderPaymentTermMethod> ProviderPaymentTermMethod { get; set; }
        public virtual DbSet<ProviderPersonAuthorizedToPayTheBill> ProviderPersonAuthorizedToPayTheBill { get; set; }
        public virtual DbSet<ProviderRawMaterial> ProviderRawMaterial { get; set; }
        public virtual DbSet<ProviderRelatedCompany> ProviderRelatedCompany { get; set; }
        public virtual DbSet<ProviderRetention> ProviderRetention { get; set; }
        public virtual DbSet<ProviderSeriesForDocuments> ProviderSeriesForDocuments { get; set; }
        public virtual DbSet<ProviderTransportist> ProviderTransportist { get; set; }
        public virtual DbSet<ProviderType> ProviderType { get; set; }
        public virtual DbSet<ProviderTypeShrimp> ProviderTypeShrimp { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrder { get; set; }
        public virtual DbSet<PurchaseOrderCustomizedInformation> PurchaseOrderCustomizedInformation { get; set; }
        public virtual DbSet<PurchaseOrderDetail> PurchaseOrderDetail { get; set; }
        public virtual DbSet<PurchaseOrderDetailByGrammage> PurchaseOrderDetailByGrammage { get; set; }
        public virtual DbSet<PurchaseOrderDetailByGrammagePurchaseRequest> PurchaseOrderDetailByGrammagePurchaseRequest { get; set; }
        public virtual DbSet<PurchaseOrderDetailPurchaseRequest> PurchaseOrderDetailPurchaseRequest { get; set; }
        public virtual DbSet<PurchaseOrderImportationInformation> PurchaseOrderImportationInformation { get; set; }
        public virtual DbSet<PurchaseOrderShippingType> PurchaseOrderShippingType { get; set; }
        public virtual DbSet<PurchaseOrderTotal> PurchaseOrderTotal { get; set; }
        public virtual DbSet<PurchasePlanning> PurchasePlanning { get; set; }
        public virtual DbSet<PurchasePlanningDetail> PurchasePlanningDetail { get; set; }
        public virtual DbSet<PurchasePlanningPeriod> PurchasePlanningPeriod { get; set; }
        public virtual DbSet<PurchaseReason> PurchaseReason { get; set; }
        public virtual DbSet<PurchaseRequest> PurchaseRequest { get; set; }
        public virtual DbSet<PurchaseRequestDetail> PurchaseRequestDetail { get; set; }
        public virtual DbSet<PurchaseRequestDetailBusinessOportunity> PurchaseRequestDetailBusinessOportunity { get; set; }
        public virtual DbSet<QualityAnalysis> QualityAnalysis { get; set; }
        public virtual DbSet<QualityControl> QualityControl { get; set; }
        public virtual DbSet<QualityControlAnalysisGroup> QualityControlAnalysisGroup { get; set; }
        public virtual DbSet<QualityControlAnalysisGroupAnalysis> QualityControlAnalysisGroupAnalysis { get; set; }
        public virtual DbSet<QualityControlConfiguration> QualityControlConfiguration { get; set; }
        public virtual DbSet<QualityControlConfigurationAnalysisDataTypeValidate> QualityControlConfigurationAnalysisDataTypeValidate { get; set; }
        public virtual DbSet<QualityControlConfigurationAnalysisDataTypeValidateDetailValue> QualityControlConfigurationAnalysisDataTypeValidateDetailValue { get; set; }
        public virtual DbSet<QualityControlConfigurationAnalysisDataTypeValidateDetailValueValidate> QualityControlConfigurationAnalysisDataTypeValidateDetailValueValidate { get; set; }
        public virtual DbSet<QualityControlConfigurationConformity> QualityControlConfigurationConformity { get; set; }
        public virtual DbSet<QualityControlDetail> QualityControlDetail { get; set; }
        public virtual DbSet<QualityControlResultConformity> QualityControlResultConformity { get; set; }
        public virtual DbSet<QualityControlResultConformityOnHeaderValue> QualityControlResultConformityOnHeaderValue { get; set; }
        public virtual DbSet<QualityCorrectiveAction> QualityCorrectiveAction { get; set; }
        public virtual DbSet<QualityDataType> QualityDataType { get; set; }
        public virtual DbSet<QualityValidate> QualityValidate { get; set; }
        public virtual DbSet<Rate> Rate { get; set; }
        public virtual DbSet<ReceptionDetailDrainingTest> ReceptionDetailDrainingTest { get; set; }
        public virtual DbSet<ReceptionDispatchMaterials> ReceptionDispatchMaterials { get; set; }
        public virtual DbSet<ReceptionDispatchMaterialsDetail> ReceptionDispatchMaterialsDetail { get; set; }
        public virtual DbSet<ReceptionMaterialsDetailLiquidationDetail> ReceptionMaterialsDetailLiquidationDetail { get; set; }
        public virtual DbSet<ReceptionMaterialsLiquidation> ReceptionMaterialsLiquidation { get; set; }
        public virtual DbSet<RegisterInfReplicationSource> RegisterInfReplicationSource { get; set; }
        public virtual DbSet<RemGuideLiqTransportation> RemGuideLiqTransportation { get; set; }
        public virtual DbSet<RemGuideRiverLiqTransportation> RemGuideRiverLiqTransportation { get; set; }
        public virtual DbSet<RemissionGuide> RemissionGuide { get; set; }
        public virtual DbSet<RemissionGuideAssignedStaff> RemissionGuideAssignedStaff { get; set; }
        public virtual DbSet<RemissionGuideAssignedStaffRol> RemissionGuideAssignedStaffRol { get; set; }
        public virtual DbSet<RemissionGuideControlVehicle> RemissionGuideControlVehicle { get; set; }
        public virtual DbSet<RemissionGuideCustomizedAdvancedTransportist> RemissionGuideCustomizedAdvancedTransportist { get; set; }
        public virtual DbSet<RemissionGuideCustomizedIceBuyInformation> RemissionGuideCustomizedIceBuyInformation { get; set; }
        public virtual DbSet<RemissionGuideCustomizedInformation> RemissionGuideCustomizedInformation { get; set; }
        public virtual DbSet<RemissionGuideCustomizedViaticPersonalAssigned> RemissionGuideCustomizedViaticPersonalAssigned { get; set; }
        public virtual DbSet<RemissionGuideDetail> RemissionGuideDetail { get; set; }
        public virtual DbSet<RemissionGuideDetailDispatchMaterialDetail> RemissionGuideDetailDispatchMaterialDetail { get; set; }
        public virtual DbSet<RemissionGuideDetailPurchaseOrderDetail> RemissionGuideDetailPurchaseOrderDetail { get; set; }
        public virtual DbSet<RemissionGuideDispatchMaterial> RemissionGuideDispatchMaterial { get; set; }
        public virtual DbSet<RemissionGuideExportInformation> RemissionGuideExportInformation { get; set; }
        public virtual DbSet<RemissionGuideReason> RemissionGuideReason { get; set; }
        public virtual DbSet<RemissionGuideReportLinealDataHelp> RemissionGuideReportLinealDataHelp { get; set; }
        public virtual DbSet<RemissionGuideRiver> RemissionGuideRiver { get; set; }
        public virtual DbSet<RemissionGuideRiverAssignedStaff> RemissionGuideRiverAssignedStaff { get; set; }
        public virtual DbSet<RemissionGuideRiverControlVehicle> RemissionGuideRiverControlVehicle { get; set; }
        public virtual DbSet<RemissionGuideRiverCustomizedAdvancedTransportist> RemissionGuideRiverCustomizedAdvancedTransportist { get; set; }
        public virtual DbSet<RemissionGuideRiverCustomizedViaticPersonalAssigned> RemissionGuideRiverCustomizedViaticPersonalAssigned { get; set; }
        public virtual DbSet<RemissionGuideRiverDetail> RemissionGuideRiverDetail { get; set; }
        public virtual DbSet<RemissionGuideRiverDispatchMaterial> RemissionGuideRiverDispatchMaterial { get; set; }
        public virtual DbSet<RemissionGuideRiverReportLinealDataHelp> RemissionGuideRiverReportLinealDataHelp { get; set; }
        public virtual DbSet<RemissionGuideRiverSecuritySeal> RemissionGuideRiverSecuritySeal { get; set; }
        public virtual DbSet<RemissionGuideRiverTransportation> RemissionGuideRiverTransportation { get; set; }
        public virtual DbSet<RemissionGuideSecuritySeal> RemissionGuideSecuritySeal { get; set; }
        public virtual DbSet<RemissionGuideTransportation> RemissionGuideTransportation { get; set; }
        public virtual DbSet<RemissionGuideTransportationCustomizedInformation> RemissionGuideTransportationCustomizedInformation { get; set; }
        public virtual DbSet<RemissionGuideTravelType> RemissionGuideTravelType { get; set; }
        public virtual DbSet<RemissionGuideType> RemissionGuideType { get; set; }
        public virtual DbSet<ReplicationMasterProduction> ReplicationMasterProduction { get; set; }
        public virtual DbSet<RepoCompany> RepoCompany { get; set; }
        public virtual DbSet<RepoKardexCosto> RepoKardexCosto { get; set; }
        public virtual DbSet<RepoKardexCostoResumenModel> RepoKardexCostoResumenModel { get; set; }
        public virtual DbSet<RepoKardexSaldo> RepoKardexSaldo { get; set; }
        public virtual DbSet<RepoKardexSaldoExcel> RepoKardexSaldoExcel { get; set; }
        public virtual DbSet<RequestInventoryMove> RequestInventoryMove { get; set; }
        public virtual DbSet<RequestInventoryMoveDetail> RequestInventoryMoveDetail { get; set; }
        public virtual DbSet<RequestInventoryMoveTotals> RequestInventoryMoveTotals { get; set; }
        public virtual DbSet<ResultProdLotReceptionDetail> ResultProdLotReceptionDetail { get; set; }
        public virtual DbSet<ResultProdLotRomaneo> ResultProdLotRomaneo { get; set; }
        public virtual DbSet<ResultReceptionDispatchMaterial> ResultReceptionDispatchMaterial { get; set; }
        public virtual DbSet<ResultReceptionDispatchMaterialDetail> ResultReceptionDispatchMaterialDetail { get; set; }
        public virtual DbSet<Retention> Retention { get; set; }
        public virtual DbSet<RetentionGroup> RetentionGroup { get; set; }
        public virtual DbSet<RetentionSeriesForDocumentsType> RetentionSeriesForDocumentsType { get; set; }
        public virtual DbSet<RetentionType> RetentionType { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Romaneo> Romaneo { get; set; }
        public virtual DbSet<RomaneoDetail> RomaneoDetail { get; set; }
        public virtual DbSet<RtInternational> RtInternational { get; set; }
        public virtual DbSet<SalesOrder> SalesOrder { get; set; }
        public virtual DbSet<SalesOrderDetail> SalesOrderDetail { get; set; }
        public virtual DbSet<SalesOrderDetailMPMaterialDetail> SalesOrderDetailMPMaterialDetail { get; set; }
        public virtual DbSet<SalesOrderDetailSalesQuotationExterior> SalesOrderDetailSalesQuotationExterior { get; set; }
        public virtual DbSet<SalesOrderDetailSalesRequest> SalesOrderDetailSalesRequest { get; set; }
        public virtual DbSet<SalesOrderMPMaterialDetail> SalesOrderMPMaterialDetail { get; set; }
        public virtual DbSet<SalesOrderTotal> SalesOrderTotal { get; set; }
        public virtual DbSet<SalesQuotation> SalesQuotation { get; set; }
        public virtual DbSet<SalesQuotationDetail> SalesQuotationDetail { get; set; }
        public virtual DbSet<SalesQuotationExterior> SalesQuotationExterior { get; set; }
        public virtual DbSet<SalesQuotationExteriorDocument> SalesQuotationExteriorDocument { get; set; }
        public virtual DbSet<SalesQuotationTotal> SalesQuotationTotal { get; set; }
        public virtual DbSet<SalesRequest> SalesRequest { get; set; }
        public virtual DbSet<SalesRequestDetail> SalesRequestDetail { get; set; }
        public virtual DbSet<SalesRequestDetailBusinessOportunity> SalesRequestDetailBusinessOportunity { get; set; }
        public virtual DbSet<SalesRequestDetailSalesQuotation> SalesRequestDetailSalesQuotation { get; set; }
        public virtual DbSet<SalesRequestOrQuotationDetailProductionScheduleRequestDetail> SalesRequestOrQuotationDetailProductionScheduleRequestDetail { get; set; }
        public virtual DbSet<SalesRequestTotal> SalesRequestTotal { get; set; }
        public virtual DbSet<SalesReturn> SalesReturn { get; set; }
        public virtual DbSet<SalesReturnDetail> SalesReturnDetail { get; set; }
        public virtual DbSet<SectorAreas> SectorAreas { get; set; }
        public virtual DbSet<SecuritySealState> SecuritySealState { get; set; }
        public virtual DbSet<SequentialGeneral> SequentialGeneral { get; set; }
        public virtual DbSet<Setting> Setting { get; set; }
        public virtual DbSet<SettingDataType> SettingDataType { get; set; }
        public virtual DbSet<SettingDetail> SettingDetail { get; set; }
        public virtual DbSet<SettingNotification> SettingNotification { get; set; }
        public virtual DbSet<SettingPriceList> SettingPriceList { get; set; }
        public virtual DbSet<ShippingAgency> ShippingAgency { get; set; }
        public virtual DbSet<ShippingLine> ShippingLine { get; set; }
        public virtual DbSet<ShippingLineShippingAgency> ShippingLineShippingAgency { get; set; }
        public virtual DbSet<ShrimpSupplierTraceability> ShrimpSupplierTraceability { get; set; }
        public virtual DbSet<SimpleFormula> SimpleFormula { get; set; }
        public virtual DbSet<SolicitudEtiqd> SolicitudEtiqd { get; set; }
        public virtual DbSet<SourceLockedDocument> SourceLockedDocument { get; set; }
        public virtual DbSet<StateOfContry> StateOfContry { get; set; }
        public virtual DbSet<SubProcess> SubProcess { get; set; }
        public virtual DbSet<SubProcessIOProductionProcess> SubProcessIOProductionProcess { get; set; }
        public virtual DbSet<TAction> TAction { get; set; }
        public virtual DbSet<TariffHeading> TariffHeading { get; set; }
        public virtual DbSet<TariffItem> TariffItem { get; set; }
        public virtual DbSet<TaxType> TaxType { get; set; }
        public virtual DbSet<TblMovProcInsterno> TblMovProcInsterno { get; set; }
        public virtual DbSet<tbsysActionOnDocument> tbsysActionOnDocument { get; set; }
        public virtual DbSet<tbsysCatalogState> tbsysCatalogState { get; set; }
        public virtual DbSet<tbsysCatalogue> tbsysCatalogue { get; set; }
        public virtual DbSet<tbsysCatalogueDetail> tbsysCatalogueDetail { get; set; }
        public virtual DbSet<tbsysContactType> tbsysContactType { get; set; }
        public virtual DbSet<tbsysControlContainerFields> tbsysControlContainerFields { get; set; }
        public virtual DbSet<tbsysCustomerPspp> tbsysCustomerPspp { get; set; }
        public virtual DbSet<tbsysDocumentDocumentStateControlsState> tbsysDocumentDocumentStateControlsState { get; set; }
        public virtual DbSet<tbsysDocumentDocumentStateControlsStateUser> tbsysDocumentDocumentStateControlsStateUser { get; set; }
        public virtual DbSet<tbsysDocumentsPersonalizationDetail> tbsysDocumentsPersonalizationDetail { get; set; }
        public virtual DbSet<tbsysDocumentTypeDocumentState> tbsysDocumentTypeDocumentState { get; set; }
        public virtual DbSet<tbsysIntegrationDocumentConfig> tbsysIntegrationDocumentConfig { get; set; }
        public virtual DbSet<tbsysIntegrationDocumentValidationConfig> tbsysIntegrationDocumentValidationConfig { get; set; }
        public virtual DbSet<tbsysInvoiceMode> tbsysInvoiceMode { get; set; }
        public virtual DbSet<tbsysInvoiceType> tbsysInvoiceType { get; set; }
        public virtual DbSet<tbsysObjSecurityRecord> tbsysObjSecurityRecord { get; set; }
        public virtual DbSet<tbsysOpenCloseDocumentParam> tbsysOpenCloseDocumentParam { get; set; }
        public virtual DbSet<tbsysParceLetterNumber> tbsysParceLetterNumber { get; set; }
        public virtual DbSet<tbsysPathReportProduction> tbsysPathReportProduction { get; set; }
        public virtual DbSet<tbsysPaymentTermSetup> tbsysPaymentTermSetup { get; set; }
        public virtual DbSet<tbsysPrintReportControlForDocument> tbsysPrintReportControlForDocument { get; set; }
        public virtual DbSet<tbsysSysProcessAdvanceParameters> tbsysSysProcessAdvanceParameters { get; set; }
        public virtual DbSet<tbsysSystemProcess> tbsysSystemProcess { get; set; }
        public virtual DbSet<tbsysTableFieldsData> tbsysTableFieldsData { get; set; }
        public virtual DbSet<tbsysTypeMachineForProd> tbsysTypeMachineForProd { get; set; }
        public virtual DbSet<tbsysUserRecordSecurity> tbsysUserRecordSecurity { get; set; }
        public virtual DbSet<tbsysUserRecordSecurityDetail> tbsysUserRecordSecurityDetail { get; set; }
        public virtual DbSet<tbsysValidateConfig> tbsysValidateConfig { get; set; }
        public virtual DbSet<tbsysValidateEntityDefinition> tbsysValidateEntityDefinition { get; set; }
        public virtual DbSet<TController> TController { get; set; }
        public virtual DbSet<TermsNegotiation> TermsNegotiation { get; set; }
        public virtual DbSet<TiposEtiquetas> TiposEtiquetas { get; set; }
        public virtual DbSet<TrackChange> TrackChange { get; set; }
        public virtual DbSet<TransportSize> TransportSize { get; set; }
        public virtual DbSet<TransportTariff> TransportTariff { get; set; }
        public virtual DbSet<TransportTariffDetail> TransportTariffDetail { get; set; }
        public virtual DbSet<TransportTariffType> TransportTariffType { get; set; }
        public virtual DbSet<TransportTariffType_VehicleType> TransportTariffType_VehicleType { get; set; }
        public virtual DbSet<TrasportationTariffDetail> TrasportationTariffDetail { get; set; }
        public virtual DbSet<TrasportSize> TrasportSize { get; set; }
        public virtual DbSet<TrasportTariff> TrasportTariff { get; set; }
        public virtual DbSet<Turn> Turn { get; set; }
        public virtual DbSet<TypeBoxCardAndBank> TypeBoxCardAndBank { get; set; }
        public virtual DbSet<TypeContractFramework> TypeContractFramework { get; set; }
        public virtual DbSet<TypeFiltersConfiguration> TypeFiltersConfiguration { get; set; }
        public virtual DbSet<TypeFiltersConfigurationComparisonOperator> TypeFiltersConfigurationComparisonOperator { get; set; }
        public virtual DbSet<TypeINP> TypeINP { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserEntity> UserEntity { get; set; }
        public virtual DbSet<UserEntityDetail> UserEntityDetail { get; set; }
        public virtual DbSet<UserEntityDetailPermission> UserEntityDetailPermission { get; set; }
        public virtual DbSet<UserGroup> UserGroup { get; set; }
        public virtual DbSet<UserGroupMenu> UserGroupMenu { get; set; }
        public virtual DbSet<UserMenu> UserMenu { get; set; }
        public virtual DbSet<UserObject> UserObject { get; set; }
        public virtual DbSet<UserRol> UserRol { get; set; }
        public virtual DbSet<UserRolUser> UserRolUser { get; set; }
        public virtual DbSet<Vehicle> Vehicle { get; set; }
        public virtual DbSet<VehicleProviderTransportBilling> VehicleProviderTransportBilling { get; set; }
        public virtual DbSet<VehicleType> VehicleType { get; set; }
        public virtual DbSet<VeicleProviderTransport> VeicleProviderTransport { get; set; }
        public virtual DbSet<Vendor> Vendor { get; set; }
        public virtual DbSet<VisualizationTypeData> VisualizationTypeData { get; set; }
        public virtual DbSet<Warehouse> Warehouse { get; set; }
        public virtual DbSet<WarehouseExpenseAccountingTemplate> WarehouseExpenseAccountingTemplate { get; set; }
        public virtual DbSet<WarehouseLocation> WarehouseLocation { get; set; }
        public virtual DbSet<WarehouseNatureSequential> WarehouseNatureSequential { get; set; }
        public virtual DbSet<WarehouseType> WarehouseType { get; set; }
        public virtual DbSet<WeightType> WeightType { get; set; }
        public virtual DbSet<RepoKardexCostoAgrupadoModel> RepoKardexCostoAgrupadoModel { get; set; }
        public virtual DbSet<OrderReason> OrderReason { get; set; }
        public virtual DbSet<ProductionCostPoundType> ProductionCostPoundType { get; set; }
        public virtual DbSet<ProductionCostExecutionType> ProductionCostExecutionType { get; set; }
        public virtual DbSet<SalesOrderDetailInstructions> SalesOrderDetailInstructions { get; set; }
        public virtual DbSet<ProductionCost> ProductionCost { get; set; }
        public virtual DbSet<ProductionCostDetail> ProductionCostDetail { get; set; }
        public virtual DbSet<SalesOrderInstructions> SalesOrderInstructions { get; set; }
        public virtual DbSet<ProductionCostCoefficient> ProductionCostCoefficient { get; set; }
        public virtual DbSet<ProductionCostCoefficientWarehouse> ProductionCostCoefficientWarehouse { get; set; }
        public virtual DbSet<ProductionCostCoefficientWarehouseLocation> ProductionCostCoefficientWarehouseLocation { get; set; }
        public virtual DbSet<ProductionCostCoefficientDetail> ProductionCostCoefficientDetail { get; set; }
        public virtual DbSet<ProductionCostAllocationPeriod> ProductionCostAllocationPeriod { get; set; }
        public virtual DbSet<ProductionCostAllocationPeriodDetail> ProductionCostAllocationPeriodDetail { get; set; }
        public virtual DbSet<ProductionCostAllocationType> ProductionCostAllocationType { get; set; }
        public virtual DbSet<ProductionCostCoefficientExecution> ProductionCostCoefficientExecution { get; set; }
        public virtual DbSet<ProductionCostCoefficientExecutionDetail> ProductionCostCoefficientExecutionDetail { get; set; }
        public virtual DbSet<ProductionCostCoefficientExecutionPlant> ProductionCostCoefficientExecutionPlant { get; set; }
        public virtual DbSet<ProductionCostCoefficientExecutionWarehouse> ProductionCostCoefficientExecutionWarehouse { get; set; }
        public virtual DbSet<ProductionCostProductValuation> ProductionCostProductValuation { get; set; }
        public virtual DbSet<ProductionCostProductValuationExecution> ProductionCostProductValuationExecution { get; set; }
        public virtual DbSet<ProductionCostProductValuationWarehouse> ProductionCostProductValuationWarehouse { get; set; }
        public virtual DbSet<BackgroundProcess> BackgroundProcess { get; set; }
        public virtual DbSet<MonthlyBalance> MonthlyBalance { get; set; }
        public virtual DbSet<MonthlyBalanceControl> MonthlyBalanceControl { get; set; }
        public virtual DbSet<SaldoInicial> SaldoInicial { get; set; }
        public virtual DbSet<ProductionCostProductValuationInventoryMove> ProductionCostProductValuationInventoryMove { get; set; }
        public virtual DbSet<ProductionCostProductValuationWarning> ProductionCostProductValuationWarning { get; set; }
        public virtual DbSet<ProductionCostProductValuationBalance> ProductionCostProductValuationBalance { get; set; }
        public virtual DbSet<CostPoundManualFactor> CostPoundManualFactor { get; set; }
        public virtual DbSet<CostPerContenedor> CostPerContenedor { get; set; }
        public virtual DbSet<CostPerContenedorManualPoundDetail> CostPerContenedorManualPoundDetail { get; set; }
        public virtual DbSet<CostPerContenedorInvoiceDetail> CostPerContenedorInvoiceDetail { get; set; }
        public virtual DbSet<ObjectPermission> ObjectPermission { get; set; }
        public virtual DbSet<ObjectPermissionUser> ObjectPermissionUser { get; set; }
        public virtual DbSet<ProductionCostProductValuationControl> ProductionCostProductValuationControl { get; set; }
        public virtual DbSet<ProductionLotClose> ProductionLotClose { get; set; }

        public virtual DbSet<EmailNotifyDocumentType> EmailNotifyDocumentType { get; set; }
        public virtual DbSet<EmailNotifyDocumentTypePerson> EmailNotifyDocumentTypePerson { get; set; }
    
        public virtual int AproveeCostAllocation(Nullable<int> idCostAllocation)
        {
            var idCostAllocationParameter = idCostAllocation.HasValue ?
                new ObjectParameter("idCostAllocation", idCostAllocation) :
                new ObjectParameter("idCostAllocation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AproveeCostAllocation", idCostAllocationParameter);
        }
    
        public virtual ObjectResult<par_Liquidacion_Compra_Proveedores_Lista_Result> par_Liquidacion_Compra_Proveedores_Lista(Nullable<int> id_provider, string f_ini, string f_fin)
        {
            var id_providerParameter = id_provider.HasValue ?
                new ObjectParameter("id_provider", id_provider) :
                new ObjectParameter("id_provider", typeof(int));
    
            var f_iniParameter = f_ini != null ?
                new ObjectParameter("f_ini", f_ini) :
                new ObjectParameter("f_ini", typeof(string));
    
            var f_finParameter = f_fin != null ?
                new ObjectParameter("f_fin", f_fin) :
                new ObjectParameter("f_fin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Liquidacion_Compra_Proveedores_Lista_Result>("par_Liquidacion_Compra_Proveedores_Lista", id_providerParameter, f_iniParameter, f_finParameter);
        }
    
        public virtual ObjectResult<par_Liquidacion_Flete_Fluvial_Result> par_Liquidacion_Flete_Fluvial(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Liquidacion_Flete_Fluvial_Result>("par_Liquidacion_Flete_Fluvial", idParameter);
        }
    
        public virtual ObjectResult<par_Liquidacion_Flete_terrestre_Result> par_Liquidacion_Flete_terrestre(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Liquidacion_Flete_terrestre_Result>("par_Liquidacion_Flete_terrestre", idParameter);
        }
    
        public virtual ObjectResult<par_liquidacion_materiales_general_Result> par_liquidacion_materiales_general(string dateInit, string dateEnd, Nullable<bool> detallado)
        {
            var dateInitParameter = dateInit != null ?
                new ObjectParameter("dateInit", dateInit) :
                new ObjectParameter("dateInit", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(string));
    
            var detalladoParameter = detallado.HasValue ?
                new ObjectParameter("detallado", detallado) :
                new ObjectParameter("detallado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_liquidacion_materiales_general_Result>("par_liquidacion_materiales_general", dateInitParameter, dateEndParameter, detalladoParameter);
        }
    
        public virtual ObjectResult<par_liquidacion_materiales_individual_Result> par_liquidacion_materiales_individual(Nullable<int> id, Nullable<bool> detallado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var detalladoParameter = detallado.HasValue ?
                new ObjectParameter("detallado", detallado) :
                new ObjectParameter("detallado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_liquidacion_materiales_individual_Result>("par_liquidacion_materiales_individual", idParameter, detalladoParameter);
        }
    
        public virtual int par_LiquidacionCarroCarro(Nullable<int> id, string codeProcessType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codeProcessTypeParameter = codeProcessType != null ?
                new ObjectParameter("codeProcessType", codeProcessType) :
                new ObjectParameter("codeProcessType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_LiquidacionCarroCarro", idParameter, codeProcessTypeParameter);
        }
    
        public virtual ObjectResult<par_LiquidacionCarroXCarro_Lote_Result> par_LiquidacionCarroXCarro_Lote(Nullable<int> idProductionLot, string codeProcessType)
        {
            var idProductionLotParameter = idProductionLot.HasValue ?
                new ObjectParameter("idProductionLot", idProductionLot) :
                new ObjectParameter("idProductionLot", typeof(int));
    
            var codeProcessTypeParameter = codeProcessType != null ?
                new ObjectParameter("codeProcessType", codeProcessType) :
                new ObjectParameter("codeProcessType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_LiquidacionCarroXCarro_Lote_Result>("par_LiquidacionCarroXCarro_Lote", idProductionLotParameter, codeProcessTypeParameter);
        }
    
        public virtual ObjectResult<par_LiquidacionRotacionTransportista_Result> par_LiquidacionRotacionTransportista(string dt_start, string dt_end, Nullable<int> idCompany)
        {
            var dt_startParameter = dt_start != null ?
                new ObjectParameter("dt_start", dt_start) :
                new ObjectParameter("dt_start", typeof(string));
    
            var dt_endParameter = dt_end != null ?
                new ObjectParameter("dt_end", dt_end) :
                new ObjectParameter("dt_end", typeof(string));
    
            var idCompanyParameter = idCompany.HasValue ?
                new ObjectParameter("idCompany", idCompany) :
                new ObjectParameter("idCompany", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_LiquidacionRotacionTransportista_Result>("par_LiquidacionRotacionTransportista", dt_startParameter, dt_endParameter, idCompanyParameter);
        }
    
        public virtual ObjectResult<par_LiquidacionRotacionTransportistaFluvial_Result> par_LiquidacionRotacionTransportistaFluvial(string dt_start, string dt_end, Nullable<int> idCompany)
        {
            var dt_startParameter = dt_start != null ?
                new ObjectParameter("dt_start", dt_start) :
                new ObjectParameter("dt_start", typeof(string));
    
            var dt_endParameter = dt_end != null ?
                new ObjectParameter("dt_end", dt_end) :
                new ObjectParameter("dt_end", typeof(string));
    
            var idCompanyParameter = idCompany.HasValue ?
                new ObjectParameter("idCompany", idCompany) :
                new ObjectParameter("idCompany", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_LiquidacionRotacionTransportistaFluvial_Result>("par_LiquidacionRotacionTransportistaFluvial", dt_startParameter, dt_endParameter, idCompanyParameter);
        }
    
        public virtual int par_MatrizSaldoDia(Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_MatrizSaldoDia", inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<par_Movimiento_Inventario_Result> par_Movimiento_Inventario(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Movimiento_Inventario_Result>("par_Movimiento_Inventario", idParameter);
        }
    
        public virtual int par_Movimiento_Inventario_Todos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_Movimiento_Inventario_Todos", idParameter);
        }
    
        public virtual ObjectResult<par_Movimiento_InventarioIngreso_Result> par_Movimiento_InventarioIngreso(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Movimiento_InventarioIngreso_Result>("par_Movimiento_InventarioIngreso", idParameter);
        }
    
        public virtual ObjectResult<par_Movimiento_InventarioMotivo_Result> par_Movimiento_InventarioMotivo(Nullable<int> id, Nullable<int> id_user)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Movimiento_InventarioMotivo_Result>("par_Movimiento_InventarioMotivo", idParameter, id_userParameter);
        }
    
        public virtual ObjectResult<par_Movimiento_InventarioMotivoConversion_Result> par_Movimiento_InventarioMotivoConversion(Nullable<int> id, Nullable<int> id_user)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Movimiento_InventarioMotivoConversion_Result>("par_Movimiento_InventarioMotivoConversion", idParameter, id_userParameter);
        }
    
        public virtual ObjectResult<par_OrdendecompracamaronCR_Result> par_OrdendecompracamaronCR(Nullable<int> num_purchaseorder)
        {
            var num_purchaseorderParameter = num_purchaseorder.HasValue ?
                new ObjectParameter("num_purchaseorder", num_purchaseorder) :
                new ObjectParameter("num_purchaseorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_OrdendecompracamaronCR_Result>("par_OrdendecompracamaronCR", num_purchaseorderParameter);
        }
    
        public virtual int Par_ProcesosInternos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Par_ProcesosInternos", idParameter);
        }
    
        public virtual int par_ProductionLiquidationCR(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ProductionLiquidationCR", idParameter);
        }
    
        public virtual ObjectResult<par_ProductionLiquidationEntryCR_Result> par_ProductionLiquidationEntryCR(string id, string fi, string ff, Nullable<int> proveedor)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_ProductionLiquidationEntryCR_Result>("par_ProductionLiquidationEntryCR", idParameter, fiParameter, ffParameter, proveedorParameter);
        }
    
        public virtual ObjectResult<par_ProductionLiquidationFinallyCR_Result> par_ProductionLiquidationFinallyCR(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_ProductionLiquidationFinallyCR_Result>("par_ProductionLiquidationFinallyCR", idParameter);
        }
    
        public virtual int par_ProductionLiquidationPreliminaryCR(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ProductionLiquidationPreliminaryCR", idParameter);
        }
    
        public virtual ObjectResult<par_ProductionPoundsliquidationCR_Result> par_ProductionPoundsliquidationCR(string id, string fi, string ff, Nullable<int> proveedor)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_ProductionPoundsliquidationCR_Result>("par_ProductionPoundsliquidationCR", idParameter, fiParameter, ffParameter, proveedorParameter);
        }
    
        public virtual ObjectResult<par_ProductionPoundsliquidationCRSequential_Result> par_ProductionPoundsliquidationCRSequential(string id, string fi, string ff, Nullable<int> proveedor)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_ProductionPoundsliquidationCRSequential_Result>("par_ProductionPoundsliquidationCRSequential", idParameter, fiParameter, ffParameter, proveedorParameter);
        }
    
        public virtual int par_ProductionPoundsliquidationPayPendient(string id, string fi, string ff, Nullable<int> proveedor)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ProductionPoundsliquidationPayPendient", idParameter, fiParameter, ffParameter, proveedorParameter);
        }
    
        public virtual int par_ProductionPoundsliquidationPayPendientPAprobacion(string id, string fi, string ff, Nullable<int> proveedor)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ProductionPoundsliquidationPayPendientPAprobacion", idParameter, fiParameter, ffParameter, proveedorParameter);
        }
    
        public virtual int par_ProductionPoundsliquidationProvPayAproved(string id, string fi, string ff, Nullable<int> proveedor)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ProductionPoundsliquidationProvPayAproved", idParameter, fiParameter, ffParameter, proveedorParameter);
        }
    
        public virtual int par_ProductionPoundsliquidationProvPayPendApro(string id, string fi, string ff, Nullable<int> proveedor)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ProductionPoundsliquidationProvPayPendApro", idParameter, fiParameter, ffParameter, proveedorParameter);
        }
    
        public virtual ObjectResult<par_ProductionShrimpIncome_PendientesAnuladosCR_Result> par_ProductionShrimpIncome_PendientesAnuladosCR(string id, string fi, string ff, Nullable<int> proveedor)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_ProductionShrimpIncome_PendientesAnuladosCR_Result>("par_ProductionShrimpIncome_PendientesAnuladosCR", idParameter, fiParameter, ffParameter, proveedorParameter);
        }
    
        public virtual ObjectResult<par_ProductionShrimpIncomeCR_Result> par_ProductionShrimpIncomeCR(string id, string fi, string ff, Nullable<int> proveedor)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("proveedor", proveedor) :
                new ObjectParameter("proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_ProductionShrimpIncomeCR_Result>("par_ProductionShrimpIncomeCR", idParameter, fiParameter, ffParameter, proveedorParameter);
        }
    
        public virtual int par_ProformasReport(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ProformasReport", idParameter);
        }
    
        public virtual int par_prueba_escurrido(Nullable<int> idDraining)
        {
            var idDrainingParameter = idDraining.HasValue ?
                new ObjectParameter("idDraining", idDraining) :
                new ObjectParameter("idDraining", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_prueba_escurrido", idDrainingParameter);
        }
    
        public virtual int par_ResumeDiarioCajas(Nullable<int> id, string fecha, Nullable<int> idTurno)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("idTurno", idTurno) :
                new ObjectParameter("idTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ResumeDiarioCajas", idParameter, fechaParameter, idTurnoParameter);
        }
    
        public virtual int par_ResumenLiquidacionesMatriz(Nullable<System.DateTime> fechaLiqInicio, Nullable<System.DateTime> fechaLiqnFinal)
        {
            var fechaLiqInicioParameter = fechaLiqInicio.HasValue ?
                new ObjectParameter("fechaLiqInicio", fechaLiqInicio) :
                new ObjectParameter("fechaLiqInicio", typeof(System.DateTime));
    
            var fechaLiqnFinalParameter = fechaLiqnFinal.HasValue ?
                new ObjectParameter("fechaLiqnFinal", fechaLiqnFinal) :
                new ObjectParameter("fechaLiqnFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ResumenLiquidacionesMatriz", fechaLiqInicioParameter, fechaLiqnFinalParameter);
        }
    
        public virtual int par_SaldoPorTallaMatriz(Nullable<System.DateTime> fechaEmisionInicio, Nullable<System.DateTime> fechaEmisionFinal)
        {
            var fechaEmisionInicioParameter = fechaEmisionInicio.HasValue ?
                new ObjectParameter("fechaEmisionInicio", fechaEmisionInicio) :
                new ObjectParameter("fechaEmisionInicio", typeof(System.DateTime));
    
            var fechaEmisionFinalParameter = fechaEmisionFinal.HasValue ?
                new ObjectParameter("fechaEmisionFinal", fechaEmisionFinal) :
                new ObjectParameter("fechaEmisionFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_SaldoPorTallaMatriz", fechaEmisionInicioParameter, fechaEmisionFinalParameter);
        }
    
        public virtual ObjectResult<par_TransportTariff_Report_Result> par_TransportTariff_Report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_TransportTariff_Report_Result>("par_TransportTariff_Report");
        }
    
        public virtual ObjectResult<par_Vitacora_Produccion_Result> par_Vitacora_Produccion(string dt_start, string dt_end)
        {
            var dt_startParameter = dt_start != null ?
                new ObjectParameter("dt_start", dt_start) :
                new ObjectParameter("dt_start", typeof(string));
    
            var dt_endParameter = dt_end != null ?
                new ObjectParameter("dt_end", dt_end) :
                new ObjectParameter("dt_end", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Vitacora_Produccion_Result>("par_Vitacora_Produccion", dt_startParameter, dt_endParameter);
        }
    
        public virtual ObjectResult<parc_Liquidacion_Compra_Proveedores_Lista_Result> parc_Liquidacion_Compra_Proveedores_Lista(Nullable<int> id_provider, string str_liquidationDateStart, string str_liquidationDateEnd)
        {
            var id_providerParameter = id_provider.HasValue ?
                new ObjectParameter("id_provider", id_provider) :
                new ObjectParameter("id_provider", typeof(int));
    
            var str_liquidationDateStartParameter = str_liquidationDateStart != null ?
                new ObjectParameter("str_liquidationDateStart", str_liquidationDateStart) :
                new ObjectParameter("str_liquidationDateStart", typeof(string));
    
            var str_liquidationDateEndParameter = str_liquidationDateEnd != null ?
                new ObjectParameter("str_liquidationDateEnd", str_liquidationDateEnd) :
                new ObjectParameter("str_liquidationDateEnd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<parc_Liquidacion_Compra_Proveedores_Lista_Result>("parc_Liquidacion_Compra_Proveedores_Lista", id_providerParameter, str_liquidationDateStartParameter, str_liquidationDateEndParameter);
        }
    
        public virtual ObjectResult<PrintCopacking_Result> PrintCopacking(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrintCopacking_Result>("PrintCopacking", idParameter);
        }
    
        public virtual ObjectResult<PrintCopackingAll_Result> PrintCopackingAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrintCopackingAll_Result>("PrintCopackingAll");
        }
    
        public virtual int Proforma_Matriz(Nullable<System.DateTime> fechaEmisionInicio, Nullable<System.DateTime> fechaEmisionFinal)
        {
            var fechaEmisionInicioParameter = fechaEmisionInicio.HasValue ?
                new ObjectParameter("fechaEmisionInicio", fechaEmisionInicio) :
                new ObjectParameter("fechaEmisionInicio", typeof(System.DateTime));
    
            var fechaEmisionFinalParameter = fechaEmisionFinal.HasValue ?
                new ObjectParameter("fechaEmisionFinal", fechaEmisionFinal) :
                new ObjectParameter("fechaEmisionFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proforma_Matriz", fechaEmisionInicioParameter, fechaEmisionFinalParameter);
        }
    
        public virtual int Proforma_MatrizDetalle(Nullable<System.DateTime> fechaEmisionInicio, Nullable<System.DateTime> fechaEmisionFinal)
        {
            var fechaEmisionInicioParameter = fechaEmisionInicio.HasValue ?
                new ObjectParameter("fechaEmisionInicio", fechaEmisionInicio) :
                new ObjectParameter("fechaEmisionInicio", typeof(System.DateTime));
    
            var fechaEmisionFinalParameter = fechaEmisionFinal.HasValue ?
                new ObjectParameter("fechaEmisionFinal", fechaEmisionFinal) :
                new ObjectParameter("fechaEmisionFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proforma_MatrizDetalle", fechaEmisionInicioParameter, fechaEmisionFinalParameter);
        }
    
        public virtual int Prueba_Escurrido(Nullable<System.DateTime> fechaEmisionInicio, Nullable<System.DateTime> fechaEmisionFinal)
        {
            var fechaEmisionInicioParameter = fechaEmisionInicio.HasValue ?
                new ObjectParameter("fechaEmisionInicio", fechaEmisionInicio) :
                new ObjectParameter("fechaEmisionInicio", typeof(System.DateTime));
    
            var fechaEmisionFinalParameter = fechaEmisionFinal.HasValue ?
                new ObjectParameter("fechaEmisionFinal", fechaEmisionFinal) :
                new ObjectParameter("fechaEmisionFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prueba_Escurrido", fechaEmisionInicioParameter, fechaEmisionFinalParameter);
        }
    
        public virtual int qa_Consultar_QualityControl_StoredProcedure(string parametrosBusquedaQualityControl)
        {
            var parametrosBusquedaQualityControlParameter = parametrosBusquedaQualityControl != null ?
                new ObjectParameter("ParametrosBusquedaQualityControl", parametrosBusquedaQualityControl) :
                new ObjectParameter("ParametrosBusquedaQualityControl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("qa_Consultar_QualityControl_StoredProcedure", parametrosBusquedaQualityControlParameter);
        }
    
        public virtual ObjectResult<ReportFCam001_Result> ReportFCam001(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportFCam001_Result>("ReportFCam001", idParameter);
        }
    
        public virtual ObjectResult<ReportFCam003_Result> ReportFCam003(Nullable<int> id, string processType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var processTypeParameter = processType != null ?
                new ObjectParameter("processType", processType) :
                new ObjectParameter("processType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportFCam003_Result>("ReportFCam003", idParameter, processTypeParameter);
        }
    
        public virtual int ReverseCostAllocation(Nullable<int> idCostAllocation)
        {
            var idCostAllocationParameter = idCostAllocation.HasValue ?
                new ObjectParameter("idCostAllocation", idCostAllocation) :
                new ObjectParameter("idCostAllocation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReverseCostAllocation", idCostAllocationParameter);
        }
    
        public virtual ObjectResult<Rpt_AnalisisCalidad_Result> Rpt_AnalisisCalidad(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_AnalisisCalidad_Result>("Rpt_AnalisisCalidad", idParameter);
        }
    
        public virtual ObjectResult<Rpt_AnalisisCalidadDefectos_Result> Rpt_AnalisisCalidadDefectos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_AnalisisCalidadDefectos_Result>("Rpt_AnalisisCalidadDefectos", idParameter);
        }
    
        public virtual ObjectResult<Rpt_AnalisisCalidadOtrasEspecies_Result> Rpt_AnalisisCalidadOtrasEspecies(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_AnalisisCalidadOtrasEspecies_Result>("Rpt_AnalisisCalidadOtrasEspecies", idParameter);
        }
    
        public virtual ObjectResult<Rpt_HorasNoTrabajadasDetalleNoProductivas_Result> Rpt_HorasNoTrabajadasDetalleNoProductivas(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_HorasNoTrabajadasDetalleNoProductivas_Result>("Rpt_HorasNoTrabajadasDetalleNoProductivas", idParameter);
        }
    
        public virtual ObjectResult<Rpt_HorasNoTrabajadasReport_Result> Rpt_HorasNoTrabajadasReport(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_HorasNoTrabajadasReport_Result>("Rpt_HorasNoTrabajadasReport", idParameter);
        }
    
        public virtual int RptCierreMaquina(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptCierreMaquina", idParameter);
        }
    
        public virtual int RptCierreTurno(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptCierreTurno", idParameter);
        }
    
        public virtual int RptCierreTurnoTemporal(Nullable<int> id, string fecha, Nullable<int> idTurno)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("idTurno", idTurno) :
                new ObjectParameter("idTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptCierreTurnoTemporal", idParameter, fechaParameter, idTurnoParameter);
        }
    
        public virtual int SP_mensaje_Error(string sp)
        {
            var spParameter = sp != null ?
                new ObjectParameter("sp", sp) :
                new ObjectParameter("sp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_mensaje_Error", spParameter);
        }
    
        public virtual ObjectResult<TumbadoPlacaReport_Result> TumbadoPlacaReport(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TumbadoPlacaReport_Result>("TumbadoPlacaReport", idParameter);
        }
    
        public virtual int Par_ProcesosInternosDet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Par_ProcesosInternosDet");
        }
    
        public virtual int Par_ProcesosInternosDetallado(string id, Nullable<int> estado, string nlote, string ninterno, string unidad, string proceso, string producto, string bodega, string ubicacion, string fi, string ff)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var nloteParameter = nlote != null ?
                new ObjectParameter("nlote", nlote) :
                new ObjectParameter("nlote", typeof(string));
    
            var ninternoParameter = ninterno != null ?
                new ObjectParameter("ninterno", ninterno) :
                new ObjectParameter("ninterno", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var procesoParameter = proceso != null ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var bodegaParameter = bodega != null ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Par_ProcesosInternosDetallado", idParameter, estadoParameter, nloteParameter, ninternoParameter, unidadParameter, procesoParameter, productoParameter, bodegaParameter, ubicacionParameter, fiParameter, ffParameter);
        }
    
        public virtual int Par_ProcesosInternosRes(string id, Nullable<int> estado, string nlote, string ninterno, string unidad, string proceso, string producto, string bodega, string ubicacion, string fi, string ff)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var nloteParameter = nlote != null ?
                new ObjectParameter("nlote", nlote) :
                new ObjectParameter("nlote", typeof(string));
    
            var ninternoParameter = ninterno != null ?
                new ObjectParameter("ninterno", ninterno) :
                new ObjectParameter("ninterno", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var procesoParameter = proceso != null ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var bodegaParameter = bodega != null ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Par_ProcesosInternosRes", idParameter, estadoParameter, nloteParameter, ninternoParameter, unidadParameter, procesoParameter, productoParameter, bodegaParameter, ubicacionParameter, fiParameter, ffParameter);
        }
    
        public virtual int par_ProformasTemperatura(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ProformasTemperatura", idParameter);
        }
    
        public virtual ObjectResult<par_Movimiento_InventarioMotivoConversion1_Result> par_Movimiento_InventarioMotivoConversion1(Nullable<int> id, Nullable<int> id_user)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Movimiento_InventarioMotivoConversion1_Result>("par_Movimiento_InventarioMotivoConversion1", idParameter, id_userParameter);
        }
    
        public virtual int Par_ProcesosInternosDetalladoExcel(string id, Nullable<int> estado, string nlote, string ninterno, string unidad, string proceso, string producto, string bodega, string ubicacion, string fi, string ff)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var nloteParameter = nlote != null ?
                new ObjectParameter("nlote", nlote) :
                new ObjectParameter("nlote", typeof(string));
    
            var ninternoParameter = ninterno != null ?
                new ObjectParameter("ninterno", ninterno) :
                new ObjectParameter("ninterno", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var procesoParameter = proceso != null ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var bodegaParameter = bodega != null ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Par_ProcesosInternosDetalladoExcel", idParameter, estadoParameter, nloteParameter, ninternoParameter, unidadParameter, procesoParameter, productoParameter, bodegaParameter, ubicacionParameter, fiParameter, ffParameter);
        }
    
        public virtual int par_ResumeDiarioCajas1(Nullable<int> id, string fecha, Nullable<int> idTurno)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("idTurno", idTurno) :
                new ObjectParameter("idTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ResumeDiarioCajas1", idParameter, fechaParameter, idTurnoParameter);
        }
    
        public virtual ObjectResult<par_Movimiento_InventarioMasterizado_Result> par_Movimiento_InventarioMasterizado(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Movimiento_InventarioMasterizado_Result>("par_Movimiento_InventarioMasterizado", idParameter);
        }
    
        public virtual int par_MovProcesosInternos(string bodega, string ubicacion, string fi, string ff)
        {
            var bodegaParameter = bodega != null ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_MovProcesosInternos", bodegaParameter, ubicacionParameter, fiParameter, ffParameter);
        }
    
        public virtual int Par_ProcesosInternosDetallado1(string id, Nullable<int> estado, string nlote, string ninterno, string unidad, string proceso, string producto, string bodega, string ubicacion, string fi, string ff)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var nloteParameter = nlote != null ?
                new ObjectParameter("nlote", nlote) :
                new ObjectParameter("nlote", typeof(string));
    
            var ninternoParameter = ninterno != null ?
                new ObjectParameter("ninterno", ninterno) :
                new ObjectParameter("ninterno", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var procesoParameter = proceso != null ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var bodegaParameter = bodega != null ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Par_ProcesosInternosDetallado1", idParameter, estadoParameter, nloteParameter, ninternoParameter, unidadParameter, procesoParameter, productoParameter, bodegaParameter, ubicacionParameter, fiParameter, ffParameter);
        }
    
        public virtual int Par_ProcesosInternosDetalladoExcel1(string id, Nullable<int> estado, string nlote, string ninterno, string unidad, string proceso, string producto, string bodega, string ubicacion, string fi, string ff)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var nloteParameter = nlote != null ?
                new ObjectParameter("nlote", nlote) :
                new ObjectParameter("nlote", typeof(string));
    
            var ninternoParameter = ninterno != null ?
                new ObjectParameter("ninterno", ninterno) :
                new ObjectParameter("ninterno", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var procesoParameter = proceso != null ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var bodegaParameter = bodega != null ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Par_ProcesosInternosDetalladoExcel1", idParameter, estadoParameter, nloteParameter, ninternoParameter, unidadParameter, procesoParameter, productoParameter, bodegaParameter, ubicacionParameter, fiParameter, ffParameter);
        }
    
        public virtual ObjectResult<Par_ProcesosInternosRes1_Result> Par_ProcesosInternosRes1(string id, Nullable<int> estado, string nlote, string ninterno, string unidad, string proceso, string producto, string bodega, string ubicacion, string fi, string ff)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var nloteParameter = nlote != null ?
                new ObjectParameter("nlote", nlote) :
                new ObjectParameter("nlote", typeof(string));
    
            var ninternoParameter = ninterno != null ?
                new ObjectParameter("ninterno", ninterno) :
                new ObjectParameter("ninterno", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var procesoParameter = proceso != null ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var bodegaParameter = bodega != null ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Par_ProcesosInternosRes1_Result>("Par_ProcesosInternosRes1", idParameter, estadoParameter, nloteParameter, ninternoParameter, unidadParameter, procesoParameter, productoParameter, bodegaParameter, ubicacionParameter, fiParameter, ffParameter);
        }
    
        public virtual int pi_Consultar_Movimientos_Procesos_Internos_Costo(Nullable<int> id, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pi_Consultar_Movimientos_Procesos_Internos_Costo", idParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int Recepciones_Liquidación_MP(Nullable<System.DateTime> fechaEmisionInicio, Nullable<System.DateTime> fechaEmisionFinal)
        {
            var fechaEmisionInicioParameter = fechaEmisionInicio.HasValue ?
                new ObjectParameter("fechaEmisionInicio", fechaEmisionInicio) :
                new ObjectParameter("fechaEmisionInicio", typeof(System.DateTime));
    
            var fechaEmisionFinalParameter = fechaEmisionFinal.HasValue ?
                new ObjectParameter("fechaEmisionFinal", fechaEmisionFinal) :
                new ObjectParameter("fechaEmisionFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Recepciones_Liquidación_MP", fechaEmisionInicioParameter, fechaEmisionFinalParameter);
        }
    
        public virtual ObjectResult<Sp_LibrasProcesadadas_Result> Sp_LibrasProcesadadas(string fi, string ff)
        {
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_LibrasProcesadadas_Result>("Sp_LibrasProcesadadas", fiParameter, ffParameter);
        }
    
        public virtual ObjectResult<SP_PBI_VentasGerencialesRefreshBCL_Result> SP_PBI_VentasGerencialesRefreshBCL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PBI_VentasGerencialesRefreshBCL_Result>("SP_PBI_VentasGerencialesRefreshBCL");
        }
    
        public virtual int SP_RFAnalisisCalidad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RFAnalisisCalidad");
        }
    
        public virtual ObjectResult<par_Movimiento_InventarioIngresoMerma_Result> par_Movimiento_InventarioIngresoMerma(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Movimiento_InventarioIngresoMerma_Result>("par_Movimiento_InventarioIngresoMerma", idParameter);
        }
    
        public virtual ObjectResult<par_Movimiento_InventarioMasterizadoDetallado_Result> par_Movimiento_InventarioMasterizadoDetallado(string fi, string ff, string estado, string nlote, string responsable, string turno, string bodega1, string ubicacion1, string producto1, string loteenc, string bodega2, string ubicacion2, string producto2, string loteterm)
        {
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var nloteParameter = nlote != null ?
                new ObjectParameter("nlote", nlote) :
                new ObjectParameter("nlote", typeof(string));
    
            var responsableParameter = responsable != null ?
                new ObjectParameter("responsable", responsable) :
                new ObjectParameter("responsable", typeof(string));
    
            var turnoParameter = turno != null ?
                new ObjectParameter("turno", turno) :
                new ObjectParameter("turno", typeof(string));
    
            var bodega1Parameter = bodega1 != null ?
                new ObjectParameter("bodega1", bodega1) :
                new ObjectParameter("bodega1", typeof(string));
    
            var ubicacion1Parameter = ubicacion1 != null ?
                new ObjectParameter("ubicacion1", ubicacion1) :
                new ObjectParameter("ubicacion1", typeof(string));
    
            var producto1Parameter = producto1 != null ?
                new ObjectParameter("producto1", producto1) :
                new ObjectParameter("producto1", typeof(string));
    
            var loteencParameter = loteenc != null ?
                new ObjectParameter("loteenc", loteenc) :
                new ObjectParameter("loteenc", typeof(string));
    
            var bodega2Parameter = bodega2 != null ?
                new ObjectParameter("bodega2", bodega2) :
                new ObjectParameter("bodega2", typeof(string));
    
            var ubicacion2Parameter = ubicacion2 != null ?
                new ObjectParameter("ubicacion2", ubicacion2) :
                new ObjectParameter("ubicacion2", typeof(string));
    
            var producto2Parameter = producto2 != null ?
                new ObjectParameter("producto2", producto2) :
                new ObjectParameter("producto2", typeof(string));
    
            var lotetermParameter = loteterm != null ?
                new ObjectParameter("loteterm", loteterm) :
                new ObjectParameter("loteterm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Movimiento_InventarioMasterizadoDetallado_Result>("par_Movimiento_InventarioMasterizadoDetallado", fiParameter, ffParameter, estadoParameter, nloteParameter, responsableParameter, turnoParameter, bodega1Parameter, ubicacion1Parameter, producto1Parameter, loteencParameter, bodega2Parameter, ubicacion2Parameter, producto2Parameter, lotetermParameter);
        }
    
        public virtual ObjectResult<par_Movimiento_InventarioMasterizadoDetalladoCola_Result> par_Movimiento_InventarioMasterizadoDetalladoCola(string fi, string ff, string estado, string nlote, string responsable, string turno, string bodega1, string ubicacion1, string producto1, string loteenc, string bodega2, string ubicacion2, string producto2, string loteterm)
        {
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var nloteParameter = nlote != null ?
                new ObjectParameter("nlote", nlote) :
                new ObjectParameter("nlote", typeof(string));
    
            var responsableParameter = responsable != null ?
                new ObjectParameter("responsable", responsable) :
                new ObjectParameter("responsable", typeof(string));
    
            var turnoParameter = turno != null ?
                new ObjectParameter("turno", turno) :
                new ObjectParameter("turno", typeof(string));
    
            var bodega1Parameter = bodega1 != null ?
                new ObjectParameter("bodega1", bodega1) :
                new ObjectParameter("bodega1", typeof(string));
    
            var ubicacion1Parameter = ubicacion1 != null ?
                new ObjectParameter("ubicacion1", ubicacion1) :
                new ObjectParameter("ubicacion1", typeof(string));
    
            var producto1Parameter = producto1 != null ?
                new ObjectParameter("producto1", producto1) :
                new ObjectParameter("producto1", typeof(string));
    
            var loteencParameter = loteenc != null ?
                new ObjectParameter("loteenc", loteenc) :
                new ObjectParameter("loteenc", typeof(string));
    
            var bodega2Parameter = bodega2 != null ?
                new ObjectParameter("bodega2", bodega2) :
                new ObjectParameter("bodega2", typeof(string));
    
            var ubicacion2Parameter = ubicacion2 != null ?
                new ObjectParameter("ubicacion2", ubicacion2) :
                new ObjectParameter("ubicacion2", typeof(string));
    
            var producto2Parameter = producto2 != null ?
                new ObjectParameter("producto2", producto2) :
                new ObjectParameter("producto2", typeof(string));
    
            var lotetermParameter = loteterm != null ?
                new ObjectParameter("loteterm", loteterm) :
                new ObjectParameter("loteterm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<par_Movimiento_InventarioMasterizadoDetalladoCola_Result>("par_Movimiento_InventarioMasterizadoDetalladoCola", fiParameter, ffParameter, estadoParameter, nloteParameter, responsableParameter, turnoParameter, bodega1Parameter, ubicacion1Parameter, producto1Parameter, loteencParameter, bodega2Parameter, ubicacion2Parameter, producto2Parameter, lotetermParameter);
        }
    
        public virtual int Par_ProcesosInternosDetalladoPXP(string id, Nullable<int> estado, string nlote, string ninterno, string unidad, string proceso, string producto, string bodega, string ubicacion, string fi, string ff)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var nloteParameter = nlote != null ?
                new ObjectParameter("nlote", nlote) :
                new ObjectParameter("nlote", typeof(string));
    
            var ninternoParameter = ninterno != null ?
                new ObjectParameter("ninterno", ninterno) :
                new ObjectParameter("ninterno", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var procesoParameter = proceso != null ?
                new ObjectParameter("proceso", proceso) :
                new ObjectParameter("proceso", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var bodegaParameter = bodega != null ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var fiParameter = fi != null ?
                new ObjectParameter("fi", fi) :
                new ObjectParameter("fi", typeof(string));
    
            var ffParameter = ff != null ?
                new ObjectParameter("ff", ff) :
                new ObjectParameter("ff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Par_ProcesosInternosDetalladoPXP", idParameter, estadoParameter, nloteParameter, ninternoParameter, unidadParameter, procesoParameter, productoParameter, bodegaParameter, ubicacionParameter, fiParameter, ffParameter);
        }
    
        public virtual int par_ProformasTemperatura1(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("par_ProformasTemperatura1", idParameter);
        }
    }
}
